---
swagger: "2.0"
info:
  version: "1.5.9"
  title: ""
host: "localhost:7001"
basePath: "/oce"
tags:
- name: "c2s"
- name: "inboundEmail"
- name: "map"
- name: "contact"
- name: "auditlookup"
- name: "metaSearch"
- name: "statuses"
- name: "ordershistory"
- name: "orders"
- name: "utility"
- name: "internalusers"
- name: "frauddata"
- name: "templates"
- name: "count"
- name: "shm"
- name: "fraudrules"
- name: "partners"
- name: "orderscountstatuses"
- name: "tasks"
- name: "transactionsauditlogs"
- name: "email"
- name: "ordersqueue"
- name: "lookup"
- name: "phoenixorder"
- name: "emailTemplateConfiguration"
- name: "bulkUnlockService"
- name: "bulkOrderUpdateService"
schemes:
- "http"
paths:
  /audit/lookup:
    get:
      tags:
      - "auditlookup"
      summary: "Retreives Audit Data"
      description: "Retreives Audit Data"
      operationId: "getAuditData"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "request"
        in: "query"
        description: "Request payload as JSON String"
        required: true
        type: "string"
        maximum: 250.0
        minimum: 1.0
      - name: "fields"
        in: "query"
        description: "Request in format {response:[request,response,requestId,status,comments]}"
        required: false
        type: "string"
        maximum: 250.0
        minimum: 1.0
      responses:
        503:
          description: "Service not implemented"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/LookupAuditResponse"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error"
    post:
      tags:
      - "auditlookup"
      summary: "Updates Audit data"
      description: "Updates Audit data"
      operationId: "updateAudit"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters: []
      responses:
        503:
          description: "Service not implemented"
    put:
      tags:
      - "auditlookup"
      summary: "Inserts Audit data"
      description: "Inserts Audit data"
      operationId: "insertAudit"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters: []
      responses:
        503:
          description: "Service not implemented"
    delete:
      tags:
      - "auditlookup"
      summary: "Deletes Audit data"
      description: "Deletes lookup data"
      operationId: "deleteAudit"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters: []
      responses:
        503:
          description: "Service not implemented"
  /bulkOrderUpdateService/avos/{orderId}:
    get:
      tags:
      - "bulkOrderUpdateService"
      operationId: "testAVOSCall"
      consumes:
      - "application/xml"
      - "text/xml"
      - "application/json"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "orderId"
        in: "path"
        required: true
        type: "string"
      responses:
        default:
          description: "successful operation"
  /bulkOrderUpdateService/feeds:
    put:
      tags:
      - "bulkOrderUpdateService"
      summary: "bulk feed activation"
      description: "API looks for customerordernumber/ctn,if found, order will be\
        \ updated based on certain conditions. Request payload is accepted as json/xml."
      operationId: "bulkFeedActivation"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Bulk feed Object"
        required: true
        schema:
          $ref: "#/definitions/BulkFeedActivatationRequest"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/BulkFeedActivatationResponse"
        400:
          description: "Bad Request. Please verify your input"
  /bulkOrderUpdateService/test/{jobName}:
    get:
      tags:
      - "bulkOrderUpdateService"
      operationId: "testFile"
      consumes:
      - "application/xml"
      - "text/xml"
      - "application/json"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "jobName"
        in: "path"
        required: true
        type: "string"
      responses:
        default:
          description: "successful operation"
  /bulkOrderUpdateService/update:
    put:
      tags:
      - "bulkOrderUpdateService"
      summary: "bulk update order"
      description: "API looks for orderId,if found, order will be updated. Request\
        \ payload is accepted as json/xml."
      operationId: "bulkUpdateOrder"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Bulk Order Object"
        required: true
        schema:
          $ref: "#/definitions/BulkOrderUpdateRequest"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Response"
        400:
          description: "Bad Request. Please verify your input"
  /bulkOrderUpdateService/upload/{jobName}:
    post:
      tags:
      - "bulkOrderUpdateService"
      operationId: "uploadFile"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/xml"
      - "text/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/FormDataMultiPart"
      - name: "file"
        in: "formData"
        required: false
        type: "file"
      - name: "jobName"
        in: "path"
        required: true
        type: "string"
      responses:
        default:
          description: "successful operation"
  /bulkUnlockService/bulkUnlock/{batchId}:
    get:
      tags:
      - "bulkUnlockService"
      summary: "Get Order details from Repository"
      description: "Supply the batch id to retrieve customer order number from .csv\
        \ file and then order details from the Repository for the corresponding customer\
        \ order alongwith search parameters passed. The following parameters can be\
        \ given in any combination. If atleast one advance search parameter is present\
        \ by default advance search is given precedence."
      operationId: "bulkUnlock"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "batchId"
        in: "path"
        description: "batchId"
        required: true
        type: "string"
        maximum: 250.0
        minimum: 1.0
      responses:
        503:
          description: "Service not implemented"
        404:
          description: "Not Found"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/OrderResponse"
        400:
          description: "Bad Input"
  /bulkUnlockService/upload/{jobName}:
    post:
      tags:
      - "bulkUnlockService"
      operationId: "uploadFile"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/xml"
      - "text/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/FormDataMultiPart"
      - name: "file"
        in: "formData"
        required: false
        type: "file"
      - name: "jobName"
        in: "path"
        required: true
        type: "string"
      responses:
        default:
          description: "successful operation"
  /c2s/cscrstatusmapping:
    get:
      tags:
      - "c2s"
      summary: "fetch CSCR STATUS MAPPING data"
      description: "This will fetch the data related to CSCR STATUS MAPPING"
      operationId: "fetchCSCRStatusMapping"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/C2SOrderStatusMappingResponse"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
      - "c2s"
      summary: "create/upadte/delete CSCR STATUS MAPPING"
      description: "This will create/update/delete the data related to CSCR status\
        \ mapping"
      operationId: "processCSCRStatusMapping"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "CSCRStatusMapping"
        required: true
        schema:
          $ref: "#/definitions/C2SOrderStatusMappingRequest"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/C2SOrderStatusMappingResponse"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error"
  /c2s/statussync:
    get:
      tags:
      - "c2s"
      summary: "fetch C2S data"
      description: "This will fetch the data related to C2S"
      operationId: "fetchStoreData"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "StoreObject"
        required: true
        schema:
          $ref: "#/definitions/C2SStatusManagementRequest"
      responses:
        503:
          description: "Service not implemented"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/C2SStatusManagementResponse"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error"
    post:
      tags:
      - "c2s"
      summary: "create click to store data"
      description: "This will create the data related to C2S"
      operationId: "createStoreData"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "StoreObject"
        required: true
        schema:
          $ref: "#/definitions/C2SStatusManagementRequest"
      responses:
        503:
          description: "Service not implemented"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/C2SStatusManagementResponse"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
      - "c2s"
      summary: "update C2S data"
      description: "This will update the data related to C2S"
      operationId: "updateStoreData"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "StoreObject"
        required: true
        schema:
          $ref: "#/definitions/C2SStatusManagementRequest"
      responses:
        503:
          description: "Service not implemented"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/C2SStatusManagementResponse"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error"
  /c2s/statussync/lookbackdays:
    get:
      tags:
      - "c2s"
      summary: "Look back days for status sync"
      description: "Look back days for status sync"
      operationId: "fetchLookBackDays"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters: []
      responses:
        503:
          description: "Service not implemented"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/LoopBackDays"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error"
    post:
      tags:
      - "c2s"
      summary: "Look back days for status sync"
      description: "Look back days for status sync"
      operationId: "createLookBackDays"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "StoreObject"
        required: true
        schema:
          $ref: "#/definitions/LoopBackDays"
      responses:
        503:
          description: "Service not implemented"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/LoopBackDays"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
      - "c2s"
      summary: "Look back days for status sync"
      description: "Look back days for status sync"
      operationId: "updateLookBackDays"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "StoreObject"
        required: true
        schema:
          $ref: "#/definitions/LoopBackDays"
      responses:
        503:
          description: "Service not implemented"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/LoopBackDays"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error"
  /c2s/statussync/sync:
    get:
      tags:
      - "c2s"
      summary: "sync now API"
      description: "This will invoke fuse SYNC NOW API"
      operationId: "invokeSyncNow"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters: []
      responses:
        503:
          description: "Service not implemented"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/SyncNowAdmin"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error"
  /callrecords:
    get:
      tags:
      - "contact"
      summary: "Retreive call details based on Search Parameter Call Id"
      description: "This will fetch all call details as part of search string"
      operationId: "fetchCallDetails"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "searchString"
        in: "query"
        description: "Call Record Search Parameters"
        required: false
        type: "string"
        maximum: 5.0
        minimum: 1.0
      responses:
        503:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/CallDetailResponse"
        400:
          description: "Bad Input"
    post:
      tags:
      - "contact"
      summary: "It will create a new call record with the given object"
      description: "It will create a new call record"
      operationId: "createCallRecord"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Call Record Object"
        required: true
        schema:
          $ref: "#/definitions/CtCallDetail"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/CallDetailResponse"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
  /callrecords/calllog:
    post:
      tags:
      - "contact"
      summary: "It will create a new call log with the given object"
      description: "It will create a new call log"
      operationId: "createCallRecord"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Call log Object"
        required: true
        schema:
          $ref: "#/definitions/ProcessCallLogDetailRequest"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ProcessCallLogDetailResponse"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
  /callrecords/vendorlookup:
    get:
      tags:
      - "contact"
      operationId: "vendorLookup"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "searchString"
        in: "query"
        description: "Channel to be passed"
        required: false
        type: "string"
        maximum: 250.0
        minimum: 1.0
      responses:
        default:
          description: "successful operation"
  /callrecords/{callId}:
    put:
      tags:
      - "contact"
      summary: "This will update call Record entries."
      description: "This will update call Record entries."
      operationId: "updateCallRecord"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "callId"
        in: "path"
        description: "callId"
        required: true
        type: "string"
        maximum: 5.0
        minimum: 1.0
      - in: "body"
        name: "body"
        description: "Call Record Object"
        required: true
        schema:
          $ref: "#/definitions/CtCallDetail"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/CallDetailResponse"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
  /cassandra/fetchInstruction:
    get:
      tags:
      - "orders"
      summary: "Get IMEIInstructions"
      description: "Retrieve the IMEIInstructions from the Repository"
      operationId: "fetchInstructionDetails"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters: []
      responses:
        204:
          description: "No Record found"
  /cassandra/fetchUnlockReport:
    get:
      tags:
      - "orders"
      summary: "Get Order Report from Repository"
      description: "Retrieve the Order Report from the Repository"
      operationId: "fetchUnlockReports"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "payload"
        in: "query"
        description: "payload"
        required: false
        type: "string"
        maximum: 250.0
        minimum: 1.0
      responses:
        503:
          description: "Service not implemented"
        404:
          description: "Not Found"
        400:
          description: "Bad Input"
  /cassandra/getMakeList:
    get:
      tags:
      - "orders"
      summary: "Get getMakeList"
      description: "Retrieve the getMakeList from the Repository"
      operationId: "getMakeList"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      - "application/xml"
      parameters: []
      responses:
        204:
          description: "No Record found"
  /cassandra/imeiAPI{slash}{imei}:
    get:
      tags:
      - "orders"
      summary: "Get IMEIRecord from Repository"
      description: "Retrieve the IMEIRecord from the Repository"
      operationId: "fetchImeiAPI"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "imei"
        in: "path"
        description: "imei"
        required: true
        type: "string"
        maximum: 250.0
        minimum: 1.0
        pattern: "((?<=/).*)?"
      responses:
        204:
          description: "Record associated with such IMEI doesn't exists"
        404:
          description: "IMEI validation failed. IMEI is not a 15 digit numeric value"
  /cassandra/imeiSearch:
    get:
      tags:
      - "orders"
      summary: "Get Collection of IMEIRecord from Repository"
      description: "Retrieve the Collection of IMEIRecord from the Repository"
      operationId: "fetchImeiSearch"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "make"
        in: "query"
        description: "make"
        required: false
        type: "string"
        maximum: 250.0
        minimum: 1.0
      - name: "model"
        in: "query"
        description: "model"
        required: false
        type: "string"
        maximum: 250.0
        minimum: 1.0
      responses:
        204:
          description: "No Record found"
        400:
          description: "Make and Model both cannot be null."
  /cassandra/imeis:
    get:
      tags:
      - "orders"
      summary: "Get IMEIRecord from Repository"
      description: "Retrieve the IMEIRecord from the Repository"
      operationId: "imeis"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters: []
      responses:
        204:
          description: "Record associated with such IMEI doesn't exists"
        404:
          description: "IMEI validation failed. IMEI is not a 15 digit numeric value"
  /cassandra/insertIMEIs:
    post:
      tags:
      - "orders"
      summary: "Save IMEIs"
      description: "Save IMEIs"
      operationId: "insertIMEIs"
      produces:
      - "application/xml"
      - "application/json"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "insertIMEIs"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
  /cassandra/instruction:
    post:
      tags:
      - "orders"
      summary: "Save instructions"
      description: "Save instructions"
      operationId: "instruction"
      produces:
      - "application/xml"
      - "application/json"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "imeiInstructions"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
  /cassandra/instructionSearch:
    get:
      tags:
      - "orders"
      summary: "Get result for Instructions"
      description: "Get result for Instructions"
      operationId: "instructionSearch"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "key"
        in: "query"
        description: "key"
        required: false
        type: "string"
        maximum: 250.0
        minimum: 1.0
      - name: "value"
        in: "query"
        description: "value"
        required: false
        type: "string"
        maximum: 250.0
        minimum: 1.0
      responses:
        204:
          description: "No Record found"
        400:
          description: "Make and Model both cannot be null."
  /cassandra/makeModelSearch:
    get:
      tags:
      - "orders"
      summary: "Get result for makeModelSearch"
      description: "Get result for makeModelSearch"
      operationId: "makeModelSearch"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "make"
        in: "query"
        description: "make"
        required: false
        type: "string"
        maximum: 250.0
        minimum: 1.0
      - name: "model"
        in: "query"
        description: "model"
        required: false
        type: "string"
        maximum: 250.0
        minimum: 1.0
      responses:
        204:
          description: "No Record found"
        400:
          description: "Make and Model both cannot be null."
  /cassandra/removeIMEI:
    put:
      tags:
      - "orders"
      summary: "Get Order Report from Repository"
      description: "Retrieve the Order Report from the Repository"
      operationId: "removeIMEIs"
      consumes:
      - "application/json"
      produces:
      - "application/xml"
      - "application/json"
      - "text/xml"
      parameters:
      - name: "payload"
        in: "query"
        description: "payload"
        required: false
        type: "string"
        maximum: 250.0
        minimum: 1.0
      responses:
        503:
          description: "Service not implemented"
        404:
          description: "Not Found"
        400:
          description: "Bad Input"
  /cassandra/removeInstruction:
    put:
      tags:
      - "orders"
      summary: "Get Order Report from Repository"
      description: "Retrieve the Order Report from the Repository"
      operationId: "removeInstructions"
      consumes:
      - "application/json"
      produces:
      - "application/xml"
      - "application/json"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "removeInstruction"
        required: true
        schema:
          type: "string"
      responses:
        503:
          description: "Service not implemented"
        404:
          description: "Not Found"
        400:
          description: "Bad Input"
  /count:
    get:
      tags:
      - "count"
      summary: "Count API"
      description: "API to get the count of orders based on BAN, IMEI, Email & CTN\
        \ within a specified date Range(last 5 or 30 days)"
      operationId: "fetchOrderCount"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "by"
        in: "query"
        description: "Request payload as JSON String. In format {\"imei\":\"xxxx\"\
          ,\"ban\":\"xxxx\",\"email\":\"xxxx\",\"dateLimit\":\"[{\"recentA\":\"xx\"\
          },{\"recentB\":\"xx\"}\"]}"
        required: false
        type: "string"
        maximum: 250.0
        minimum: 1.0
      responses:
        503:
          description: "Service not implemented"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/OrderCountResponse"
        400:
          description: "Bad Input"
  /email/contents:
    get:
      tags:
      - "email"
      summary: "Retreive all email content collection"
      description: "This will fetch all email content collection"
      operationId: "fetchAllEmailTemplates"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailContentCollectionResponse"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
    post:
      tags:
      - "email"
      summary: "It will create a new email content with the given object"
      description: "It will create a new email content"
      operationId: "createEmailContent"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Email Template Object"
        required: true
        schema:
          $ref: "#/definitions/CtEmailContent"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailTemplate"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
  /email/contents/{contentId}:
    get:
      tags:
      - "email"
      summary: "This will fetch only specified email content based on content id"
      description: "This will fetch only specified email content based on content\
        \ id"
      operationId: "fetchEmailTemplates"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "contentId"
        in: "path"
        description: "contentId"
        required: true
        type: "string"
        maximum: 5.0
        minimum: 1.0
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailContentCollectionResponse"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
  /email/contents/{contentid}:
    put:
      tags:
      - "email"
      summary: "This will update an email content entry."
      description: "This will update an email content entry."
      operationId: "updateEmailContent"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "contentid"
        in: "path"
        description: "contentId"
        required: true
        type: "string"
        maximum: 5.0
        minimum: 1.0
      - in: "body"
        name: "body"
        description: "Email Template Object"
        required: true
        schema:
          $ref: "#/definitions/CtEmailContent"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailContentResponse"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
    delete:
      tags:
      - "email"
      summary: "This will always delete an email content entry"
      description: "This will always delete an email content entry."
      operationId: "removeEmailContent"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "contentid"
        in: "path"
        description: "contentId"
        required: true
        type: "string"
        maximum: 5.0
        minimum: 1.0
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailContentResponse"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
  /email/notification:
    post:
      tags:
      - "email"
      summary: "Send notification email"
      description: "Send notification Email"
      operationId: "sendEmailNotification"
      consumes:
      - "application/xml"
      - "text/xml"
      - "application/json"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "template Object"
        required: true
        schema:
          $ref: "#/definitions/Notification"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailNotificationResponse"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
  /email/sendcassandraemail:
    post:
      tags:
      - "email"
      summary: "Send notification email"
      description: "Send notification Email"
      operationId: "sendCassandraEmailNotification"
      consumes:
      - "application/xml"
      - "text/xml"
      - "application/json"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Order Object"
        required: true
        schema:
          $ref: "#/definitions/Order"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailNotificationResponse"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
  /emailConfiguration/content:
    post:
      tags:
      - "templates"
      summary: "Creates new email content"
      description: "Creates new email content"
      operationId: "createEmailContent"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Creates new email content"
        required: true
        schema:
          $ref: "#/definitions/CtEmailContent"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailContentRequest"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
  /emailConfiguration/contentByLanguage/{language}:
    get:
      tags:
      - "templates"
      summary: "email content based on langauge"
      description: "email content based on langauge"
      operationId: "fetchEmailContentBasedOnLanguage"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "email content based on langauge"
        required: true
        schema:
          $ref: "#/definitions/EmailStatus"
      - name: "searchString"
        in: "query"
        required: false
        type: "string"
      - name: "language"
        in: "path"
        required: true
        type: "string"
      responses:
        503:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailContentResponse"
        400:
          description: "Bad Input"
  /emailConfiguration/contentRule:
    get:
      tags:
      - "templates"
      summary: "Retreive all email content Rules"
      description: "Retreive all email content Rules"
      operationId: "fetchAllEmailContentRules"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "searchString"
        in: "query"
        description: "Retreive all email content Rules"
        required: false
        type: "string"
        maximum: 250.0
        minimum: 1.0
      responses:
        503:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/TemplateResponse"
        400:
          description: "Bad Input"
    post:
      tags:
      - "templates"
      summary: "It will create a new email content rule with the given object"
      description: "It will create a new email content rule"
      operationId: "createEmailContentRule"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "EmailContentRuleType Object"
        required: true
        schema:
          $ref: "#/definitions/EmailContentRuleType"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailContentResponse"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
  /emailConfiguration/contentRule/{contentId}:
    put:
      tags:
      - "templates"
      summary: "Update Email Content Rule"
      description: "Update Email Content Rule"
      operationId: "updateEmailContentRule"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "EmailContentRuleType Object"
        required: true
        schema:
          $ref: "#/definitions/EmailContentRuleType"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailContentResponse"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
  /emailConfiguration/contentRule/{ruleId}:
    get:
      tags:
      - "templates"
      summary: "Retreive email content rule based on ID"
      description: "Retreive email content rule based on ID"
      operationId: "fetchEmailContentRuleById"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "ruleId"
        in: "path"
        description: "Retreive email content rule based on ID"
        required: true
        type: "string"
        maximum: 250.0
        minimum: 1.0
      responses:
        503:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/TemplateResponse"
        400:
          description: "Bad Input"
  /emailConfiguration/deleteRules:
    put:
      tags:
      - "templates"
      summary: "/deleteRules"
      description: "/deleteRules"
      operationId: "deleteContentRules"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "/deleteRules"
        required: true
        schema:
          $ref: "#/definitions/EmailContentRuleType"
      responses:
        503:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailContentResponse"
        400:
          description: "Bad Input"
  /emailConfiguration/dynamicContent:
    post:
      tags:
      - "templates"
      summary: "Create Email Dynamic variable"
      description: "Create Email Dynamic variable"
      operationId: "createEmailDynamicVariable"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Create Email Dynamic variable"
        required: true
        schema:
          $ref: "#/definitions/EmailDynamicDataRequest"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailTemplate"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
      - "templates"
      summary: "Update Email Dynamic variable"
      description: "Update Email Dynamic variable"
      operationId: "updateEmailDynamicVariable"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Update Email Dynamic variable"
        required: true
        schema:
          $ref: "#/definitions/EmailDynamicDataRequest"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailDynamicDataResponse"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
  /emailConfiguration/dynamicContent/{variableType}:
    get:
      tags:
      - "templates"
      summary: "Fetch all Email Dynamic variable"
      description: "Fetch all Email Dynamic variable"
      operationId: "fetchAllEmailDynamicVariables"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "variableType"
        in: "path"
        description: "variableType"
        required: true
        type: "string"
        maximum: 5.0
        minimum: 1.0
      - name: "searchString"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailDynamicDataResponse"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
  /emailConfiguration/dynamicVariable/{variableId}:
    get:
      tags:
      - "templates"
      summary: "Fetch Email Dynamic variable"
      description: "Fetch Email Dynamic variable"
      operationId: "fetchEmailDynamicVariable"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "variableId"
        in: "path"
        description: "variableId"
        required: true
        type: "string"
        maximum: 5.0
        minimum: 1.0
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailDynamicDataResponse"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
  /emailConfiguration/emailStatus/Create:
    post:
      tags:
      - "templates"
      summary: "Create Email Rule Status"
      description: "Create Email Rule Status"
      operationId: "createEmailStatus"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Create Email Rule Status"
        required: true
        schema:
          $ref: "#/definitions/EmailStatus"
      responses:
        503:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailStatusResponse"
        400:
          description: "Bad Input"
  /emailConfiguration/emailStatus/fetchAll:
    get:
      tags:
      - "templates"
      summary: "Fetch all Email Rule Status"
      description: "Fetch all Email Rule Status"
      operationId: "fetchAllEmailStatus"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Fetch all Email Rule Status"
        required: true
        schema:
          $ref: "#/definitions/EmailStatus"
      - name: "searchString"
        in: "query"
        required: false
        type: "string"
      responses:
        503:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailContentResponse"
        400:
          description: "Bad Input"
  /emailConfiguration/emailStatus/update:
    put:
      tags:
      - "templates"
      summary: "Update Email Rule Status"
      description: "Update Email Rule Status"
      operationId: "updateEmailStatus"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Email status Object"
        required: true
        schema:
          $ref: "#/definitions/EmailStatus"
      responses:
        503:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailContentResponse"
        400:
          description: "Bad Input"
  /emailConfiguration/emailStatus/{status}:
    get:
      tags:
      - "templates"
      summary: "Fetch Email Rule Status"
      description: "Fetch Email Rule Status"
      operationId: "fetchEmailStatus"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "status"
        in: "path"
        description: "status"
        required: true
        type: "string"
        maximum: 5.0
        minimum: 1.0
      responses:
        503:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailContentResponse"
        400:
          description: "Bad Input"
  /emailConfiguration/emailTriggerAll:
    get:
      tags:
      - "templates"
      summary: "Fetch All EMail Trigger Rules"
      description: "Fetch All EMail Trigger Rules"
      operationId: "fetchAllEmailTriggerRules"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "searchString"
        in: "query"
        description: "Fetch All EMail Trigger Rules"
        required: false
        type: "string"
        maximum: 5.0
        minimum: 1.0
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailTriggerResponse"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
  /emailConfiguration/fetchAllContent:
    get:
      tags:
      - "templates"
      summary: "This will fetch All email content entries."
      description: "This will fetch All email content entries."
      operationId: "fetchAllEmailContent"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "searchString"
        in: "query"
        description: "This will fetch All email content entries."
        required: false
        type: "string"
        maximum: 5.0
        minimum: 1.0
      responses:
        503:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailContentResponse"
        400:
          description: "Bad Input"
  /emailConfiguration/fetchmetaAdmin/{category}:
    get:
      tags:
      - "templates"
      summary: "Retreive Email Meta Admin"
      description: "This will fetch email meta Admin"
      operationId: "fetchMetaAdminType"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "searchString"
        in: "query"
        description: "category"
        required: false
        type: "string"
        maximum: 5.0
        minimum: 1.0
      - name: "category"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailDynamicDataResponse"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
  /emailConfiguration/metaAdmin/Create:
    post:
      tags:
      - "templates"
      summary: "Create Email Meta Admin values"
      description: "Create Email Meta Admin values"
      operationId: "createEmailMetaAdmin"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Create Email Meta Admin values"
        required: true
        schema:
          $ref: "#/definitions/EmailMetaData"
      responses:
        503:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailContentResponse"
        400:
          description: "Bad Input"
  /emailConfiguration/metaAdmin/contentCategory:
    get:
      tags:
      - "templates"
      summary: "fetchEmail Meta Admin Unique Names"
      description: "fetchEmail Meta Admin Unique Names"
      operationId: "fetchEmailMetaAdminNames"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "fetchEmail Meta Admin Unique Names"
        required: true
        schema:
          $ref: "#/definitions/EmailMetaDataCategory"
      - name: "searchString"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailMetaDataCategory"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
  /emailConfiguration/metaAdmin/fetchAll:
    get:
      tags:
      - "templates"
      summary: "Fetch All Email Meta Admin values"
      description: "Fetch All Email Meta Admin values"
      operationId: "fetchAllEmailMetaAdmin"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "searchString"
        in: "query"
        description: "Email Meta Object"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/EmailMetaData"
      responses:
        503:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailContentResponse"
        400:
          description: "Bad Input"
  /emailConfiguration/metaAdmin/fetchContent:
    get:
      tags:
      - "templates"
      summary: "Retreive all email meta admin values"
      description: "This will fetch email meta Admin values"
      operationId: "fetchEmailContentMetaAdminType"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "searchString"
        in: "query"
        description: "Email Meta Object"
        required: true
        type: "string"
      responses:
        503:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailContentResponse"
        400:
          description: "Bad Input"
  /emailConfiguration/metaAdmin/update:
    put:
      tags:
      - "templates"
      summary: "Update Email Meta Admin values"
      description: "Update Email Meta Admin values"
      operationId: "updateEmailMetaAdmin"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Update Email Meta Admin values"
        required: true
        schema:
          $ref: "#/definitions/EmailMetaData"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailDynamicDataResponse"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
  /emailConfiguration/metaAdmin/{variableId}:
    get:
      tags:
      - "templates"
      summary: "Fetch Email Meta Admin values"
      description: "Fetch Email Meta Admin values"
      operationId: "fetchEmailMetaAdmin"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "variableId"
        in: "path"
        description: "variableId"
        required: true
        type: "string"
        maximum: 5.0
        minimum: 1.0
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailDynamicDataResponse"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
  /emailConfiguration/metaData/CategoryNames:
    get:
      tags:
      - "templates"
      summary: "email meta Category Names"
      description: "email meta Category Names"
      operationId: "fetchEmailMetaCategoryNames"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Email status Object"
        required: true
        schema:
          $ref: "#/definitions/EmailStatus"
      - name: "searchString"
        in: "query"
        required: false
        type: "string"
      responses:
        503:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailContentResponse"
        400:
          description: "Bad Input"
  /emailConfiguration/metaData/CategoryValues/{name}:
    get:
      tags:
      - "templates"
      summary: "fetchEmail Meta Admin name assocaited values from content"
      description: "fetchEmail Meta Admin name assocaited values from content"
      operationId: "fetchEmailMetaCategoryValues"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Email status Object"
        required: true
        schema:
          $ref: "#/definitions/EmailStatus"
      - name: "name"
        in: "path"
        required: true
        type: "string"
      - name: "searchString"
        in: "query"
        required: false
        type: "string"
      responses:
        503:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailContentResponse"
        400:
          description: "Bad Input"
  /emailConfiguration/searchContentRule:
    get:
      tags:
      - "templates"
      summary: "Search Email Content Rules"
      description: "Search Email Content Rules"
      operationId: "searchEmailContentRule"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Search Email Content Rules"
        required: true
        schema:
          $ref: "#/definitions/EmailContentRuleType"
      - name: "searchString"
        in: "query"
        required: false
        type: "string"
      responses:
        503:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailContentResponse"
        400:
          description: "Bad Input"
  /emailConfiguration/sendEmail:
    post:
      tags:
      - "templates"
      summary: "/sendEmail"
      description: "/sendEmail"
      operationId: "sendEmailTemplate"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "/sendEmail"
        required: true
        schema:
          $ref: "#/definitions/EmailTemplate"
      responses:
        503:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailContentResponse"
        400:
          description: "Bad Input"
  /emailConfiguration/sendEmailByOrder/{orderID}:
    get:
      tags:
      - "templates"
      summary: "/sendEmailByOrder/{orderID}"
      description: " Send Email for Given Order ID "
      operationId: "sendEmailBasedonOrderID"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "orderID"
        in: "path"
        description: "/sendEmailByOrder/{orderID}"
        required: true
        type: "string"
        maximum: 250.0
        minimum: 1.0
      responses:
        503:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailContentResponse"
        400:
          description: "Bad Input"
  /emailConfiguration/sendEmailforUpdateOrder:
    get:
      tags:
      - "templates"
      summary: "/sendEmailforUpdateOrder"
      description: " Send email For Update XML for given Order ID"
      operationId: "sendEmailforOrderUpdate"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "orderID"
        in: "query"
        description: "/sendEmailforUpdateOrder"
        required: false
        type: "string"
        maximum: 250.0
        minimum: 1.0
      - name: "updateID"
        in: "query"
        description: "/sendEmailforUpdateOrder"
        required: false
        type: "string"
        maximum: 250.0
        minimum: 1.0
      responses:
        503:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailContentResponse"
        400:
          description: "Bad Input"
  /emailConfiguration/sendSMS:
    post:
      tags:
      - "templates"
      summary: "/sendSMS"
      description: "/sendSMS"
      operationId: "sendSMS"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "/sendSMS"
        required: true
        schema:
          $ref: "#/definitions/EmailTemplate"
      responses:
        503:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailContentResponse"
        400:
          description: "Bad Input"
  /emailConfiguration/triggerRule:
    post:
      tags:
      - "templates"
      summary: "Create EMail Trigger Rule"
      description: "Create EMail Trigger Rule"
      operationId: "createEmailTriggerRule"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Create EMail Trigger Rule"
        required: true
        schema:
          $ref: "#/definitions/EmailTriggerRequest"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailTemplate"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
      - "templates"
      summary: "Update EMail Trigger Rule"
      description: "Update EMail Trigger Rule"
      operationId: "updateEmailTrggerRule"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Update EMail Trigger Rule"
        required: true
        schema:
          $ref: "#/definitions/EmailTriggerRequest"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailTriggerResponse"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
  /emailConfiguration/triggerRule/{id}:
    get:
      tags:
      - "templates"
      summary: "Fetch EMail Trigger Rule"
      description: "Fetch EMail Trigger Rule"
      operationId: "fetchEmailTriggerRules"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "id"
        in: "query"
        description: "Fetch EMail Trigger Rule"
        required: false
        type: "string"
        maximum: 5.0
        minimum: 1.0
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailTriggerResponse"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
  /emailConfiguration/{contentId}:
    get:
      tags:
      - "templates"
      summary: "Retreive all email content based on content id"
      description: "This will fetch email content entries."
      operationId: "fetchEmailContent"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "contentId"
        in: "path"
        description: "This will fetch email content entries."
        required: true
        type: "string"
        maximum: 5.0
        minimum: 1.0
      responses:
        503:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailContentResponse"
        400:
          description: "Bad Input"
    put:
      tags:
      - "templates"
      summary: "This will update an email content entries."
      description: "This will update an email content entries."
      operationId: "updateEmailContent"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "This will update an email content entries."
        required: true
        schema:
          $ref: "#/definitions/CtEmailContent"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailContentResponse"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
  /emailTemplateConfiguration/fetchAllTemplates:
    get:
      tags:
      - "emailTemplateConfiguration"
      summary: "It will fetch all email templates"
      description: "It will fetch all email Templates"
      operationId: "fetchAllEmailTemplate"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "searchString"
        in: "query"
        description: "Email Template Object"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/EmailTemplate"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailTemplateResponse"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
  /emailTemplateConfiguration/fetchAllTemplates/update:
    put:
      tags:
      - "emailTemplateConfiguration"
      summary: "It will update email template"
      description: "It will update email template"
      operationId: "updateEmailTemplate"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Email Template Object"
        required: true
        schema:
          $ref: "#/definitions/EmailTemplate"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailTemplateResponse"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
  /emailTemplateConfiguration/fetchTemplate/{templateID}:
    get:
      tags:
      - "emailTemplateConfiguration"
      summary: "It will fetch email templates based on Template Id"
      description: "It will fetch  email Templates based on Template Id"
      operationId: "fetchEmailTemplate"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "templateID"
        in: "path"
        description: "Email Template Object"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailTemplateResponse"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
  /emailTemplateConfiguration/template:
    post:
      tags:
      - "emailTemplateConfiguration"
      summary: "It will create a new email template"
      description: "It will create a new email template"
      operationId: "createEmailTemplate"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Email Template Object"
        required: true
        schema:
          $ref: "#/definitions/EmailTemplate"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailTemplateResponse"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
  /escalations:
    get:
      tags:
      - "contact"
      summary: "Retreive escalation details based on search Parameters"
      description: "This will fetch all escalation details as part of search string"
      operationId: "fetchEscalationDetails"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "searchString"
        in: "query"
        description: "Escalation Search Parameters"
        required: false
        type: "string"
        maximum: 5.0
        minimum: 1.0
      responses:
        503:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EscalationSearchResponse"
        400:
          description: "Bad Input"
    post:
      tags:
      - "contact"
      summary: "It will create a new escalation record with the given object"
      description: "It will create a new escalation record"
      operationId: "createEscalationRecord"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Escalation Record Object"
        required: true
        schema:
          $ref: "#/definitions/CtEscalation"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EscalationResponse"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
  /escalations/{CaseId}:
    put:
      tags:
      - "contact"
      summary: "This will update escalation Record entries."
      description: "This will update escalation Record entries."
      operationId: "updateEscalationRecord"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "CaseId"
        in: "path"
        description: "CaseId"
        required: true
        type: "string"
        maximum: 5.0
        minimum: 1.0
      - in: "body"
        name: "body"
        description: "Escalation Record Object"
        required: true
        schema:
          $ref: "#/definitions/CtEscalation"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EscalationResponse"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
  /frauddata:
    get:
      tags:
      - "frauddata"
      summary: "Retreive all fraud rules"
      description: "This will fetch all fraud rule collection"
      operationId: "searchNegativeFraudRules"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "searchString"
        in: "query"
        description: "Request in format {channel:xxx,type:xxx,city:xxx,enterpriseType:xxx}"
        required: false
        type: "string"
        maximum: 250.0
        minimum: 1.0
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/FraudNegativeRuleCollectionResponse"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
    post:
      tags:
      - "frauddata"
      summary: "Inserts new negative Fraud Rule value"
      description: "Inserts new negative Fraud Rule value"
      operationId: "processNegativeFraudRule"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "FraudObject"
        required: true
        schema:
          $ref: "#/definitions/FraudNegativeRuleRequest"
      responses:
        503:
          description: "Service not implemented"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/FraudNegativeRuleCollectionResponse"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error"
  /frauddata/{fraudRuleId}:
    get:
      tags:
      - "frauddata"
      summary: "Retreive fraud rule based on rule id"
      description: "This will fetch fraud rule based on rule id"
      operationId: "fetchNegativeFraudRuleById"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "fraudRuleId"
        in: "path"
        required: true
        type: "string"
      - name: "searchString"
        in: "query"
        description: "Request in format {channel:xxx, offset:xxx, limit:xxx}"
        required: false
        type: "string"
        maximum: 250.0
        minimum: 1.0
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/FraudNegativeRuleCollectionResponse"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
      - "frauddata"
      summary: "Inserts new negative Fraud Rule value"
      description: "Inserts new negative Fraud Rule value"
      operationId: "updateNegativeFraudRule"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "FraudObject"
        required: true
        schema:
          $ref: "#/definitions/FraudNegativeRuleRequest"
      responses:
        503:
          description: "Service not implemented"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/FraudNegativeRuleResponse"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error"
  /fraudrules:
    get:
      tags:
      - "fraudrules"
      summary: "Retreive all fraud rules"
      description: "This will fetch all fraud rule collection"
      operationId: "fetchAllFraudRules"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "searchString"
        in: "query"
        description: "Request in format {channel:xxx, offset:xxx, limit:xxx}"
        required: false
        type: "string"
        maximum: 250.0
        minimum: 1.0
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/FraudRuleCollectionResponse"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
    post:
      tags:
      - "fraudrules"
      summary: "Inserts new Fraud Rule value"
      description: "This API creates a fraud rule with the request mentioned. Please\
        \ go through the request and response structure. Channel is mandatory.  "
      operationId: "createFraudRule"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "FraudObject"
        required: true
        schema:
          $ref: "#/definitions/FraudRuleRequest"
      responses:
        503:
          description: "Service not implemented"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/FraudRuleCollectionResponse"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error"
  /fraudrules/{fraudRuleId}:
    get:
      tags:
      - "fraudrules"
      summary: "Retreive fraud rule based on rule id"
      description: "This will fetch fraud rule based on rule id"
      operationId: "fetchFraudRule"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "fraudRuleId"
        in: "path"
        required: true
        type: "string"
      - name: "searchString"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/FraudRuleCollectionResponse"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
      - "fraudrules"
      summary: "Updates fraud rule"
      description: "This will fetch all fraud rule collection"
      operationId: "updateFraudRule"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "FraudObject"
        required: true
        schema:
          $ref: "#/definitions/FraudRuleRequest"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/FraudRuleCollectionResponse"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
    delete:
      tags:
      - "fraudrules"
      summary: "This will delete the Rule"
      description: "This will delete the rule."
      operationId: "deleteFraudRule"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "fraudRuleId"
        in: "path"
        description: "ruleId"
        required: true
        type: "string"
        maximum: 5.0
        minimum: 1.0
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/UpdateResponse"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
  /hotsurvey:
    post:
      tags:
      - "contact"
      summary: "Caller Hot survey"
      description: "API for the Caller Hot survey.Request payload is accepted as json/xml."
      operationId: "processOrderHotServey"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "HotsurveyRequest Object"
        required: true
        schema:
          $ref: "#/definitions/HotsurveyRequest"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/HotsurveyRequest"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error"
  /inboundEmail/inbound:
    post:
      tags:
      - "inboundEmail"
      summary: "Email Monitoring API"
      description: "Email monitoring for the specified order XML"
      operationId: "processInboundEmails"
      consumes:
      - "application/xml"
      - "text/xml"
      - "application/json"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Order Object"
        required: true
        schema:
          $ref: "#/definitions/EmailRequests"
      responses:
        503:
          description: "Service not implemented"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailRequests"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error"
  /internalusers:
    get:
      tags:
      - "internalusers"
      summary: "Get/Search Profile details"
      description: "Get/Search the profile details"
      operationId: "searchProfile"
      consumes:
      - "application/xml"
      - "text/plain"
      - "application/json"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "searchString"
        in: "query"
        description: "Request in format {firstName:xxx,lastName:xxx,login:xxx,role:xxx,workphone:xxx,organizationUnit:xxx,id:xxx,status:xxx,email:xxx,\
          \ offset:xxx, limit:xxx,organization:XXX}"
        required: false
        type: "string"
        maximum: 250.0
        minimum: 1.0
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/UserProfileCollectionResponse"
        400:
          description: "Bad Input"
        403:
          description: "Forbidden"
        500:
          description: "Server Error"
    post:
      tags:
      - "internalusers"
      summary: "Creates the CSRs associated with only current accessing CSRs channel\
        \ list"
      description: "This will create the csr"
      operationId: "createCSRProfile"
      consumes:
      - "application/xml"
      - "text/plain"
      - "application/json"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "User Profile Object"
        required: true
        schema:
          $ref: "#/definitions/CtUserProfile"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/UserProfileCollectionResponse"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error"
  /internalusers/bulkUpdate:
    put:
      tags:
      - "internalusers"
      summary: "This will always suspend the CSR"
      description: "This will suspend the csr."
      operationId: "bulkUpdateUser"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "bulkUpdateUser Object"
        required: true
        schema:
          $ref: "#/definitions/BulkUpdateUserRequest"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/BulkUpdateUserResponse"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
  /internalusers/organizations:
    get:
      tags:
      - "internalusers"
      summary: "Retrieves the organizations with task limit"
      description: "This will fetch the organizations with task limit"
      operationId: "fetchOrganizations"
      consumes:
      - "application/xml"
      - "text/plain"
      - "application/json"
      produces:
      - "application/json"
      - "application/xml"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/CSRRoles"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
      - "internalusers"
      summary: "API for updating task limit for CSRs based on their channel"
      description: "API for updating task limit for CSRs based on their channel"
      operationId: "updateTaskLimit"
      consumes:
      - "application/xml"
      - "text/plain"
      - "application/json"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Organization Object"
        required: true
        schema:
          $ref: "#/definitions/OrganizationUnit"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Organizations"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error"
  /internalusers/organizations/{organizationName}:
    get:
      tags:
      - "internalusers"
      summary: "Retrieves the organization with task limit"
      description: "This will fetch the particular organization with task limit"
      operationId: "fetchOrganizations"
      consumes:
      - "application/xml"
      - "text/plain"
      - "application/json"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "organizationName"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/CSRRoles"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
  /internalusers/organizationunits:
    get:
      tags:
      - "internalusers"
      summary: "Retrieves the organizationunits"
      description: "This will fetch the organizationunits"
      operationId: "fetchOrganizationUnits"
      consumes:
      - "application/xml"
      - "text/plain"
      - "application/json"
      produces:
      - "application/json"
      - "application/xml"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/CSROrganizations"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
  /internalusers/roles:
    get:
      tags:
      - "internalusers"
      summary: "Get/Search user role details"
      description: "Get/Search the user role details"
      operationId: "searchUserRole"
      consumes:
      - "application/xml"
      - "text/plain"
      - "application/json"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "searchString"
        in: "query"
        description: "Request in format {roleName:xxx}"
        required: false
        type: "string"
        maximum: 250.0
        minimum: 1.0
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/UserRole"
        400:
          description: "Bad Input"
        403:
          description: "Forbidden"
        500:
          description: "Server Error"
    post:
      tags:
      - "internalusers"
      summary: "Creates new Role"
      description: "This will create new Role"
      operationId: "createNewRole"
      consumes:
      - "application/xml"
      - "text/plain"
      - "application/json"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "New Role Object"
        required: true
        schema:
          $ref: "#/definitions/UserRole"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/UserRoleResponse"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error"
  /internalusers/roles/{roleId}:
    put:
      tags:
      - "internalusers"
      summary: "Updates the user Role "
      description: "This will fetch the user Role details associated with the given\
        \ role id"
      operationId: "updateUserRole"
      consumes:
      - "application/xml"
      - "text/plain"
      - "application/json"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "roleId"
        in: "path"
        description: "roleId"
        required: true
        type: "string"
        maximum: 5.0
        minimum: 1.0
      - in: "body"
        name: "body"
        description: "User Profile Object"
        required: true
        schema:
          $ref: "#/definitions/UserRole"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/UserRoleResponse"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error"
  /internalusers/{csrid}/organizations:
    get:
      tags:
      - "internalusers"
      summary: "Retrieve organizations the CSR is part of"
      description: "This will fetch only the top level organization. Currently does\
        \ not support organizational hierarchy."
      operationId: "fetchCSROrganizations"
      consumes:
      - "application/xml"
      - "text/plain"
      - "application/json"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "csrid"
        in: "path"
        required: true
        type: "string"
      responses:
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/CSROrganizations"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
  /internalusers/{csrid}/roles:
    get:
      tags:
      - "internalusers"
      summary: "Retrieve Roles the CSR is part of"
      description: "This will fetch the roles of the CSR"
      operationId: "fetchCSRRoles"
      consumes:
      - "application/xml"
      - "text/plain"
      - "application/json"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "csrid"
        in: "path"
        required: true
        type: "string"
      responses:
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/CSRRoles"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
  /internalusers/{profileloginname}:
    get:
      tags:
      - "internalusers"
      summary: "Returns the CSRs associated with only current accessing CSRs channel\
        \ list"
      description: "This will fetch the CSRs associated with only current accessing\
        \ CSRs channel list"
      operationId: "fetchCSRProfile"
      consumes:
      - "application/xml"
      - "text/plain"
      - "application/json"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "profileloginname"
        in: "path"
        description: "csrId"
        required: true
        type: "string"
        maximum: 5.0
        minimum: 1.0
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/UserProfileResponse"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
      - "internalusers"
      summary: "Updates the CSRs associated with only current accessing CSRs channel\
        \ list"
      description: "This will fetch the CSRs associated with only current accessing\
        \ CSRs channel list"
      operationId: "updateCSRProfile"
      consumes:
      - "application/xml"
      - "text/plain"
      - "application/json"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "profileloginname"
        in: "path"
        description: "csrId"
        required: true
        type: "string"
        maximum: 5.0
        minimum: 1.0
      - in: "body"
        name: "body"
        description: "User Profile Object"
        required: true
        schema:
          $ref: "#/definitions/CtUserProfile"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/UserProfileCollectionResponse"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error"
    delete:
      tags:
      - "internalusers"
      summary: "This will always suspend the CSR"
      description: "This will suspend the csr."
      operationId: "suspendCSRProfile"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "profileloginname"
        in: "path"
        description: "csrId"
        required: true
        type: "string"
        maximum: 5.0
        minimum: 1.0
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/UserProfileCollectionResponse"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
  /lookup:
    get:
      tags:
      - "lookup"
      summary: "Retreives lookup collection based on type requested"
      description: "Retreives lookup collection based on type requested"
      operationId: "doLookup"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "request"
        in: "query"
        description: "Request payload as JSON String"
        required: true
        type: "string"
        maximum: 250.0
        minimum: 1.0
      - name: "channel"
        in: "query"
        description: "Channel to be passed"
        required: false
        type: "string"
        maximum: 250.0
        minimum: 1.0
      responses:
        503:
          description: "Service not implemented"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/LookupResponse"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error"
    post:
      tags:
      - "lookup"
      summary: "Delete or update"
      description: "Note: Delete or update "
      operationId: "updateLookupValue"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "LookupObject"
        required: true
        schema:
          $ref: "#/definitions/UpdateRequest"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/UpdateResponse"
        400:
          description: "Bad Request. Please verify your input"
    put:
      tags:
      - "lookup"
      summary: "Inserts new lookup value"
      description: "Inserts new lookup value"
      operationId: "addLookup"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "LookupObject"
        required: true
        schema:
          $ref: "#/definitions/UpdateRequest"
      responses:
        503:
          description: "Service not implemented"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/UpdateResponse"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error"
    delete:
      tags:
      - "lookup"
      summary: "Deletes lookup value"
      description: "Deletes lookup value"
      operationId: "deleteLookupValue"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters: []
      responses:
        503:
          description: "Service not implemented"
  /map:
    get:
      tags:
      - "map"
      summary: "Retreives Map lookup JSON based on requested URL and return JSON response"
      description: "Retreives lookup collection based on type requested"
      operationId: "mapLookup"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "requestURL"
        in: "query"
        required: false
        type: "string"
      responses:
        503:
          description: "Service not implemented"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            type: "string"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error"
  /metaSearch:
    get:
      tags:
      - "metaSearch"
      summary: "Search Meta Info"
      description: "Search Meta Info"
      operationId: "searchMetaInfo"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Search Meta Data"
        required: true
        schema:
          $ref: "#/definitions/SearchMetaData"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/SearchMetaData"
        400:
          description: "Bad Request. Please verify your input"
  /order/statuses:
    get:
      tags:
      - "statuses"
      summary: "Fetch all the statuses/substatuses based on channel provided"
      description: "Fetch all the statuses/substatuses based on channel provided"
      operationId: "fetchAllOrderStatuses"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "searchString"
        in: "query"
        description: "channel"
        required: false
        type: "string"
        maximum: 20.0
        minimum: 1.0
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/StatusesObject"
        400:
          description: "Bad Input"
        403:
          description: "Forbidden"
        500:
          description: "Internal Error"
    post:
      tags:
      - "statuses"
      summary: "Create  status"
      description: "The API creates a new  status"
      operationId: "createOrderStatus"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "StatusObject"
        required: true
        schema:
          $ref: "#/definitions/OrderStatusRequest"
      responses:
        409:
          description: "Conflict"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/OrderStatusRequest"
        400:
          description: "Bad Request. Please verify your input"
        403:
          description: "Forbidden"
        500:
          description: "Internal Error"
  /order/statuses/{statusid}:
    get:
      tags:
      - "statuses"
      summary: "Fetch the details of the input status based on channel provided Details\
        \ of substatus(if any) under the status will also be retrieved."
      description: "Fetch the details of the input status based on channel provided\
        \ Details of substatus(if any) under the status will also be retrieved."
      operationId: "fetchOrderStatus"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "statusid"
        in: "path"
        description: "status"
        required: true
        type: "string"
        maximum: 5.0
        minimum: 1.0
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/StatusObject"
        400:
          description: "Bad Input"
        403:
          description: "Forbidden"
        500:
          description: "Internal Error"
    put:
      tags:
      - "statuses"
      summary: "Update order status"
      description: "The API updates order status"
      operationId: "updateOrderStatus"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "statusid"
        in: "path"
        description: "statusId"
        required: true
        type: "string"
        maximum: 5.0
        minimum: 1.0
      - in: "body"
        name: "body"
        description: "StatusObject"
        required: true
        schema:
          $ref: "#/definitions/OrderStatusRequest"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/OrderStatusRequest"
        400:
          description: "Bad Request. Please verify your input"
        403:
          description: "Forbidden"
        500:
          description: "Internal Error"
    delete:
      tags:
      - "statuses"
      summary: "Delete  status"
      description: "The API removes  status"
      operationId: "removeOrderStatus"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "statusid"
        in: "path"
        description: "status"
        required: true
        type: "string"
        maximum: 5.0
        minimum: 1.0
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/OrderStatusRequest"
        400:
          description: "Bad Request. Please verify your input"
        403:
          description: "Forbidden"
        500:
          description: "Internal Error"
  /order/statuses/{statusid}/substatuses:
    get:
      tags:
      - "statuses"
      summary: "Fetch all the subStatuses for the provided parent status based on\
        \ channel provided"
      description: "Fetch all the subStatuses for the provided parent status based\
        \ on channel provided"
      operationId: "fetchAllOrderSubstatuses"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "statusid"
        in: "path"
        description: "status"
        required: true
        type: "string"
        maximum: 5.0
        minimum: 1.0
      - name: "searchString"
        in: "query"
        description: "channel"
        required: false
        type: "string"
        maximum: 20.0
        minimum: 1.0
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/StatusesObject"
        400:
          description: "Bad Input"
        403:
          description: "Forbidden"
        500:
          description: "Internal Error"
    post:
      tags:
      - "statuses"
      summary: "Create  substatus"
      description: "The API creates  substatus"
      operationId: "createOrderSubStatus"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "statusid"
        in: "path"
        description: "status"
        required: true
        type: "string"
        maximum: 5.0
        minimum: 1.0
      - in: "body"
        name: "body"
        description: "StatusObject"
        required: true
        schema:
          $ref: "#/definitions/OrderStatusRequest"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/OrderStatusRequest"
        400:
          description: "Bad Request. Please verify your input"
        403:
          description: "Forbidden"
        500:
          description: "Internal Error"
  /order/statuses/{statusid}/substatuses/{substatusid}:
    get:
      tags:
      - "statuses"
      summary: "Fetch the substaus details for input status based on channel"
      description: "Fetch the substaus details for input status based on channel"
      operationId: "fetchOrderSubStatus"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "statusid"
        in: "path"
        description: "statusId"
        required: true
        type: "string"
        maximum: 5.0
        minimum: 1.0
      - name: "substatusid"
        in: "path"
        description: "substatusId"
        required: true
        type: "string"
        maximum: 5.0
        minimum: 1.0
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/StatusObject"
        400:
          description: "Bad Input"
        403:
          description: "Forbidden"
        500:
          description: "Internal Error"
    put:
      tags:
      - "statuses"
      summary: "Update  substatus for the provided status"
      description: "The API updates  substatus for the provided status"
      operationId: "updateOrderSubStatus"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "statusid"
        in: "path"
        description: "status"
        required: true
        type: "string"
        maximum: 5.0
        minimum: 1.0
      - name: "substatusid"
        in: "path"
        description: "substatus"
        required: true
        type: "string"
        maximum: 5.0
        minimum: 1.0
      - in: "body"
        name: "body"
        description: "StatusObject"
        required: true
        schema:
          $ref: "#/definitions/OrderStatusRequest"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/OrderStatusRequest"
        400:
          description: "Bad Request. Please verify your input"
        403:
          description: "Forbidden"
        500:
          description: "Internal Error"
    delete:
      tags:
      - "statuses"
      summary: "Delete order substatus"
      description: "The API removes order substatus"
      operationId: "removeOrderSubStatus"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "statusid"
        in: "path"
        description: "status"
        required: true
        type: "string"
        maximum: 5.0
        minimum: 1.0
      - name: "substatusid"
        in: "path"
        description: "substatus"
        required: true
        type: "string"
        maximum: 5.0
        minimum: 1.0
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/OrderStatusRequest"
        400:
          description: "Bad Request. Please verify your input"
        403:
          description: "Forbidden"
        500:
          description: "Internal Error"
  /orders:
    get:
      tags:
      - "orders"
      summary: "Get Order details from Repository"
      description: "Supply the order id to retrieve the order details from the Repository\
        \ for the corresponding search parameters passed. The following parameters\
        \ can be given in any combination. If atleast one advance search parameter\
        \ is present by default advance search is given precedence."
      operationId: "loadOrder"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json;charset=utf-8"
      - "application/xml;charset=utf-8"
      - "text/xml;charset=utf-8"
      parameters:
      - name: "searchString"
        in: "query"
        description: "Request in format {orderId:xxx,imei:xxxx,ctn:xxx,firstName:xxx,fromDate:xxx,status:xxx,\
          \ offset:xxx, limit:xxx}"
        required: false
        type: "string"
        maximum: 250.0
        minimum: 1.0
      - name: "fields"
        in: "query"
        description: "Request in format {order:[orderId, orderType, items, account],\
          \ lineItem:[itemId, deviceId, lineItemType, bundledItems,..], bundledlineItem:[itemId,\
          \ deviceId, type,..]"
        required: false
        type: "string"
        maximum: 250.0
        minimum: 1.0
      - name: "multiSearchString"
        in: "query"
        description: "Request in format {list:[{customerOrderNumber:XXX},{customerOrderNumber:XXX}],channel:XXX,offset:0,limit:1}"
        required: false
        type: "string"
        maximum: 250.0
        minimum: 1.0
      - name: "isEncrypt"
        in: "query"
        description: "isEncrypt"
        required: false
        type: "boolean"
        maximum: 250.0
        minimum: 1.0
      responses:
        503:
          description: "Service not implemented"
        404:
          description: "Not Found"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/OrderResponse"
        400:
          description: "Bad Input"
    post:
      tags:
      - "orders"
      summary: "Deprecated. Post order details"
      description: "Note:Deprecated - this will retire soon. Please use  PUT on orders\
        \ resource(create and update).Use the Order Model for sending the json/xml\
        \ request payload. "
      operationId: "createOrder"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Order Object"
        required: true
        schema:
          $ref: "#/definitions/ProcessOrderRequest"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Response"
        400:
          description: "Bad Request. Please verify your input"
    put:
      tags:
      - "orders"
      summary: "Create or Update order"
      description: "API looks for orderId in the payload. If not found, order will\
        \ be created. If found order will be updated. Request payload is accepted\
        \ as json/xml."
      operationId: "processOrder"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Order Object"
        required: true
        schema:
          $ref: "#/definitions/ProcessOrderRequest"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Response"
        400:
          description: "Bad Request. Please verify your input"
  /orders/bulk:
    get:
      tags:
      - "orders"
      summary: "Get records from Repository for bulk update"
      description: "retrieve the records from the Repository"
      operationId: "fetchRecordsForBulkUpdate"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "requestId"
        in: "path"
        description: "Request Id."
        required: true
        type: "string"
      - name: "updateType"
        in: "query"
        description: "update type"
        required: true
        type: "string"
      - name: "noOfDays"
        in: "query"
        description: "No Of Days"
        required: false
        type: "integer"
        format: "int32"
      - name: "reminderType"
        in: "query"
        description: "reminder type"
        required: false
        type: "string"
      responses:
        503:
          description: "Service not implemented"
        404:
          description: "Not Found"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/BulkProcessResponse"
        400:
          description: "Bad Input"
    put:
      tags:
      - "orders"
      summary: "Update the orders in bulk"
      description: "API iterates through the orders passed as part of request and\
        \ updates the order repository in bulk.Request payload is accepted as json/xml."
      operationId: "bulkOrderUpdate"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Orders Object"
        required: true
        schema:
          $ref: "#/definitions/ProcessOrderRequest"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/BulkUpdateResponse"
        400:
          description: "Bad Request. Please verify your input"
  /orders/bulkEmailTrigger:
    put:
      tags:
      - "orders"
      summary: "Send emails for orders in bulk"
      description: "API iterates through the orders passed as part of request and\
        \ trigger emails in bulk for each order.Request payload is accepted as json/xml."
      operationId: "bulkUpdateEmail"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Bulk Process Request Object"
        required: true
        schema:
          $ref: "#/definitions/BulkEmailRequest"
      responses:
        503:
          description: "Service not implemented"
        404:
          description: "Not Found"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/BulkUpdateResponse"
        400:
          description: "Bad Input"
  /orders/bulkSchedule:
    post:
      tags:
      - "orders"
      summary: "Create the order status and sub statuses for scheduled workflow"
      description: "Create the order status and sub statuses for scheduled workflow"
      operationId: "bulkCreateScheduledJobs"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Bulk Process Request Object"
        required: true
        schema:
          $ref: "#/definitions/ScheduledJobsUpdateRequest"
      responses:
        503:
          description: "Service not implemented"
        404:
          description: "Not Found"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ScheduledJobsUpdateResponse"
        400:
          description: "Bad Input"
  /orders/bulkUpdate:
    put:
      tags:
      - "orders"
      summary: "Update the orders in bulk"
      description: "API iterates through the orders passed as part of request and\
        \ updates the order repository in bulk.Request payload is accepted as json/xml."
      operationId: "bulkUpdateOrderResponse"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Bulk Process Request Object"
        required: true
        schema:
          $ref: "#/definitions/BulkUpdateRequest"
      responses:
        503:
          description: "Service not implemented"
        404:
          description: "Not Found"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/BulkUpdateResponse"
        400:
          description: "Bad Input"
  /orders/count/statuses/{status}/queuetype:
    get:
      tags:
      - "orderscountstatuses"
      summary: "Get Order Queue from Repository"
      description: "Retrieve the order Queue details from the Repository"
      operationId: "fetchQueueTypesByStatus"
      consumes:
      - "application/xml"
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "status"
        in: "path"
        description: "status"
        required: true
        type: "string"
        maximum: 5.0
        minimum: 1.0
      - name: "channel"
        in: "query"
        description: "channel"
        required: false
        type: "string"
        maximum: 5.0
        minimum: 1.0
      responses:
        503:
          description: "Service not implemented"
        404:
          description: "Not Found"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/QueueTypes"
        400:
          description: "Bad Input"
  /orders/count/statuses/{status}/queuetype/{queueType}/queuesubtype:
    get:
      tags:
      - "orderscountstatuses"
      summary: "Get Order Queue from Repository"
      description: "Retrieve the order Queue details from the Repository"
      operationId: "fetchQueueSubTypeByStatus"
      consumes:
      - "application/xml"
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "status"
        in: "path"
        description: "status"
        required: true
        type: "string"
        maximum: 5.0
        minimum: 1.0
      - name: "queueType"
        in: "path"
        description: "queueType"
        required: true
        type: "string"
        maximum: 5.0
        minimum: 1.0
      - name: "channel"
        in: "query"
        description: "channel"
        required: false
        type: "string"
        maximum: 5.0
        minimum: 1.0
      responses:
        503:
          description: "Service not implemented"
        404:
          description: "Not Found"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/QueueTypes"
        400:
          description: "Bad Input"
  /orders/history/audit/logs:
    get:
      tags:
      - "ordershistory"
      summary: "Get Audit Logs for the requested Order"
      description: "Retrieve the Audit log details from the Repository for the requested\
        \ Order"
      operationId: "fetchAuditLogs"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "searchString"
        in: "query"
        description: "Request in format {isExternal:xxx,customerOrderNumber:xxx, offset:xxx,\
          \ limit:xxx}/{auditLogId}"
        required: false
        type: "string"
        maximum: 250.0
        minimum: 1.0
      - name: "expandAll"
        in: "query"
        description: "expandAll"
        required: false
        type: "boolean"
        maximum: 250.0
        minimum: 1.0
      responses:
        503:
          description: "Service not implemented"
        404:
          description: "Not Found"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/AuditLogResponse"
        400:
          description: "Bad Input"
  /orders/history/transaction/logs:
    get:
      tags:
      - "ordershistory"
      summary: "Get Transaction Logs for the requested Order"
      description: "Retrieve the Transaction details from the Repository for the requested\
        \ Order"
      operationId: "fetchTransactionLogs"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "searchString"
        in: "query"
        description: "Request in format {orderId:xxx, offset:xxx, limit:xxx}"
        required: false
        type: "string"
        maximum: 250.0
        minimum: 1.0
      responses:
        503:
          description: "Service not implemented"
        404:
          description: "Not Found"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/TransactionLogResponse"
        400:
          description: "Bad Input"
    put:
      tags:
      - "ordershistory"
      summary: "Get Transaction Logs for the requested Order"
      description: "Retrieve the Transaction details from the Repository for the requested\
        \ Order"
      operationId: "updateTransactionLogs"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Transaction Log Request Object"
        required: true
        schema:
          $ref: "#/definitions/TransactionLogRequest"
      responses:
        503:
          description: "Service not implemented"
        404:
          description: "Not Found"
        400:
          description: "Bad Input"
  /orders/history/transaction/logs/callDetails:
    get:
      tags:
      - "ordershistory"
      summary: "Get Transaction Logs for the requested Order"
      description: "Retrieve the Transaction details from the Repository for the requested\
        \ Order"
      operationId: "fetchAllTransactionLogs"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "searchString"
        in: "query"
        description: "Request in format {orderNumber:xxx, offset:xxx, limit:xxx}"
        required: false
        type: "string"
        maximum: 250.0
        minimum: 1.0
      responses:
        503:
          description: "Service not implemented"
        404:
          description: "Not Found"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/TransactionLogResponse"
        400:
          description: "Bad Input"
  /orders/inquire:
    get:
      tags:
      - "orders"
      summary: "Get Order details from Repository"
      description: "Supply the order id to retrieve the order details from the Repository\
        \ for the corresponding search parameters passed. The following parameters\
        \ can be given in any combination. If atleast one advance search parameter\
        \ is present by default advance search is given precedence."
      operationId: "inquireOrder"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json;charset=utf-8"
      - "application/xml;charset=utf-8"
      - "text/xml;charset=utf-8"
      parameters:
      - name: "searchString"
        in: "query"
        required: false
        type: "string"
      responses:
        503:
          description: "Service not implemented"
        404:
          description: "Not Found"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/OrderResponse"
        400:
          description: "Bad Input"
  /orders/queue:
    get:
      tags:
      - "ordersqueue"
      summary: "Get Order Queue from Repository"
      description: "Retrieve the Order Queue details from the Repository"
      operationId: "fetchAllQueueMetaData"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "searchString"
        in: "query"
        description: "searchString"
        required: false
        type: "string"
        maximum: 250.0
        minimum: 1.0
      responses:
        503:
          description: "Service not implemented"
        404:
          description: "Not Found"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/QueueMetaDataDetails"
        400:
          description: "Bad Input"
    post:
      tags:
      - "ordersqueue"
      summary: "Adds queue metadata"
      description: "Retrieve the Order Queue details from the Repository"
      operationId: "createQueue"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Queue meta data"
        required: true
        schema:
          $ref: "#/definitions/QueueMetaDataCreateRequest"
      responses:
        503:
          description: "Service not implemented"
        404:
          description: "Not Found"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/QueueMetaDataCreateResponse"
        400:
          description: "Bad Input"
  /orders/queue/alertlimit:
    get:
      tags:
      - "ordersqueue"
      summary: "Get Details of Queue whose maximum count has exceded threshold"
      description: "Retrieve Details of Queue whose maximum count has exceded threshold"
      operationId: "fetchQueueAlertLimitDetails"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters: []
      responses:
        503:
          description: "Service not implemented"
        404:
          description: "Not Found"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/QueueLimitResponse"
        400:
          description: "Bad Input"
  /orders/queue/count:
    get:
      tags:
      - "ordersqueue"
      summary: "Get Order Queue from Repository"
      description: "Retrieve the Order Queue details from the Repository"
      operationId: "fetchOrderQueueCount"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "searchString"
        in: "query"
        description: "searchString"
        required: false
        type: "string"
        maximum: 250.0
        minimum: 1.0
      responses:
        503:
          description: "Service not implemented"
        404:
          description: "Not Found"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/OrderQueueResponse"
        400:
          description: "Bad Input"
  /orders/queue/slabreachdetail:
    get:
      tags:
      - "ordersqueue"
      summary: "Get Order Queue from Repository"
      description: "Retrieve the Order Queue details from the Repository"
      operationId: "fetchSLABreachEmailResponse"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters: []
      responses:
        503:
          description: "Service not implemented"
        404:
          description: "Not Found"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/SLABreachEmailResponse"
        400:
          description: "Bad Input"
  /orders/queue/vacantqueuedetail:
    get:
      tags:
      - "ordersqueue"
      summary: "Get Details of Orders with Vacant Queue"
      description: "Retrieve the Vacant Order Queue details from the Repository"
      operationId: "fetchVacantQueueDetails"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters: []
      responses:
        503:
          description: "Service not implemented"
        404:
          description: "Not Found"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/VacantQueueEmailResponse"
        400:
          description: "Bad Input"
  /orders/queue/{queueId}:
    put:
      tags:
      - "ordersqueue"
      summary: "Get Order Queue from Repository"
      description: "Updates the Queue Metadata details for the queueId given"
      operationId: "updateQueueMetaData"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "queueId"
        in: "path"
        description: "queueId"
        required: true
        type: "string"
        maximum: 5.0
        minimum: 1.0
      - in: "body"
        name: "body"
        description: "User Profile Object"
        required: true
        schema:
          $ref: "#/definitions/QueueMetaDataCreateRequest"
      responses:
        503:
          description: "Service not implemented"
        404:
          description: "Not Found"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/QueueMetaDataCreateResponse"
        400:
          description: "Bad Input"
  /orders/status:
    get:
      tags:
      - "orders"
      summary: "Inquire Order Status Info"
      description: "API looks for orderNum in the payload. If not found, Error message\
        \ will be thrown. If found the status Info of the requested order will be\
        \ sent as Response. Request payload is accepted as json/xml."
      operationId: "inquireOrderStatus"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "searchString"
        in: "query"
        description: "Request in format {channel:xxx, applicationName:xxx, customerOrderNumber:xxxx,\
          \ orderNumber:xxxx, requestId:xxxx, isCustomerEmailRequired:xxx, orderType:xxx}"
        required: false
        type: "string"
        maximum: 5.0
        minimum: 1.0
      responses:
        503:
          description: "Service not implemented"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/InquireOrderStatusResponeInfo"
        400:
          description: "Bad Request. Please verify your input"
        403:
          description: "Forbidden"
        500:
          description: "Server Error"
  /orders/{orderId}:
    get:
      tags:
      - "orders"
      summary: "Get Order details from Repository"
      description: "Supply the order id to retrieve the order details from the Repository"
      operationId: "fetchOrderDetails"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json;charset=utf-8"
      - "application/xml;charset=utf-8"
      - "text/xml;charset=utf-8"
      parameters:
      - name: "orderId"
        in: "path"
        description: "Order Id."
        required: true
        type: "string"
        maximum: 5.0
        minimum: 1.0
      - name: "fields"
        in: "query"
        description: "Request in format {order:[orderId, orderType, items, account],\
          \ lineItem:[itemId, deviceId, lineItemType, bundledItems,..], bundledlineItem:[itemId,\
          \ deviceId, type,..]"
        required: false
        type: "string"
        maximum: 250.0
        minimum: 1.0
      - name: "accountFilter"
        in: "query"
        description: "Account Filter"
        required: false
        type: "string"
        maximum: 250.0
        minimum: 1.0
      - name: "unmask"
        in: "query"
        description: "unmask"
        required: false
        type: "boolean"
        maximum: 250.0
        minimum: 1.0
      - name: "isICT"
        in: "query"
        description: "isICT"
        required: false
        type: "boolean"
        maximum: 250.0
        minimum: 1.0
      - name: "isEncrypt"
        in: "query"
        description: "isEncrypt"
        required: false
        type: "boolean"
        maximum: 250.0
        minimum: 1.0
      responses:
        503:
          description: "Service not implemented"
        404:
          description: "Not Found"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/OrderResponse"
        400:
          description: "Bad Input"
  /orders/{orderId}/notification:
    post:
      tags:
      - "orders"
      summary: "Send order notification mail"
      description: "Send order notification Email for the specified order id"
      operationId: "orderEmailNotification"
      consumes:
      - "application/xml"
      - "text/xml"
      - "application/json"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "orderId"
        in: "path"
        description: "Order Id."
        required: true
        type: "string"
        maximum: 5.0
        minimum: 1.0
      - in: "body"
        name: "body"
        description: "template Object"
        required: true
        schema:
          $ref: "#/definitions/OrderNotification"
      responses:
        503:
          description: "Service not implemented"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/OrderNotificationResponse"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error"
  /orders/{orderId}/status:
    get:
      tags:
      - "orders"
      summary: "Inquire Order Status Info"
      description: "API looks for orderNum in the payload. If not found, Error message\
        \ will be thrown. If found the status Info of the requested order will be\
        \ sent as Response. Request payload is accepted as json/xml."
      operationId: "inquireOrderStatusByOrderId"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "orderId"
        in: "path"
        description: "orderId"
        required: true
        type: "string"
        maximum: 5.0
        minimum: 1.0
      - name: "searchString"
        in: "query"
        description: "Request in format {channel:xxx, applicationName:xxx, externalOrderNum:xxxx,\
          \ conversationId:xxxx, isCustomerEmailRequired:xxx, orderType:xxx}"
        required: false
        type: "string"
        maximum: 5.0
        minimum: 1.0
      responses:
        503:
          description: "Service not implemented"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/InquireOrderStatusResponeInfo"
        400:
          description: "Bad Request. Please verify your input"
        403:
          description: "Forbidden"
        500:
          description: "Server Error"
    put:
      tags:
      - "orders"
      summary: "Update order details"
      description: "Two ways to access. 1. Use the input string for sending the json\
        \ request payload. 2. Use the induvidual parameters"
      operationId: "updateOrderDetails"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "orderId"
        in: "path"
        description: "orderId"
        required: true
        type: "string"
        maximum: 5.0
        minimum: 1.0
      - in: "body"
        name: "body"
        description: "Order Object"
        required: true
        schema:
          $ref: "#/definitions/UpdateOrderStatusRequest"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/UpdateOrderStatusResponse"
        400:
          description: "Bad Request. Please verify your input"
        500:
          description: "Server Error"
  /orders/{orderId}/unmask:
    get:
      tags:
      - "orders"
      summary: "Get unmasked Order details from Repository"
      description: "Supply the order id to retrieve the unmasked order details from\
        \ the Repository"
      operationId: "unmaskOrderDetails"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "orderId"
        in: "path"
        description: "Order Id."
        required: true
        type: "string"
        maximum: 5.0
        minimum: 1.0
      - name: "fields"
        in: "query"
        description: "Request in format {Account:[PassCode,Authentication,SecurityVerification]}"
        required: false
        type: "string"
        maximum: 250.0
        minimum: 1.0
      - name: "accountFilter"
        in: "query"
        description: "Account Filter"
        required: false
        type: "string"
        maximum: 250.0
        minimum: 1.0
      - name: "groupFilter"
        in: "query"
        description: "Group Filter"
        required: false
        type: "string"
        maximum: 250.0
        minimum: 1.0
      responses:
        404:
          description: "Not Found"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/UnmaskResponse"
        400:
          description: "Bad Input"
  /orders/{orderId}/validate:
    put:
      tags:
      - "orders"
      summary: "Validaet the BAN details of the caller with the order details"
      description: "API validate the BAN details of the caller with the order details.Request\
        \ payload is accepted as json/xml."
      operationId: "orderCallerValidation"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "orderId"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/CallerValidateRequest"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/CallerValidateRequest"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error"
  /partners:
    get:
      tags:
      - "partners"
      summary: "Get Partners from DB"
      description: "Retrieve the Partner details from the DB"
      operationId: "fetchPartners"
      consumes:
      - "application/xml"
      - "text/xml"
      - "application/json"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "PartnerObject"
        required: true
        schema:
          $ref: "#/definitions/PartnerRequest"
      responses:
        503:
          description: "Service not implemented"
        404:
          description: "Not Found"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PartnerResponse"
        400:
          description: "Bad Input"
    put:
      tags:
      - "partners"
      summary: "Inserts new Parnter"
      description: "This API creates a new partner. Please go through the request\
        \ and response structure. "
      operationId: "createPartner"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "PartnerObject"
        required: true
        schema:
          $ref: "#/definitions/PartnerRequest"
      responses:
        503:
          description: "Service not implemented"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PartnerResponse"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error"
  /partners/assignment:
    put:
      tags:
      - "partners"
      summary: "Process Partner Assignment"
      description: "This API creates or updates a partner assigment. Please go through\
        \ the request and response structure. "
      operationId: "processPartnerAssignment"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "PartnerObject"
        required: true
        schema:
          $ref: "#/definitions/PartnerAssignmentRequest"
      responses:
        503:
          description: "Service not implemented"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PartnerAssignmentResponse"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error"
  /partners/assignment/{programName}:
    get:
      tags:
      - "partners"
      summary: "Get Partners from DB"
      description: "Retrieve the Partner Association from the DB"
      operationId: "fetchPartnerAssignment"
      consumes:
      - "application/xml"
      - "text/xml"
      - "application/json"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "programName"
        in: "path"
        description: "programName"
        required: true
        type: "string"
      responses:
        503:
          description: "Service not implemented"
        404:
          description: "Not Found"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PartnerAssignmentResponse"
        400:
          description: "Bad Input"
  /partners/program:
    post:
      tags:
      - "partners"
      summary: "Inserts new Parnter Program"
      description: "This API creates a new partner Program"
      operationId: "createPartnerProgramAssignment"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "PartnerProgramObject"
        required: true
        schema:
          $ref: "#/definitions/PartnerProgramRequest"
      responses:
        503:
          description: "Service not implemented"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PartnerProgramResponse"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error"
  /partners/program/all:
    get:
      tags:
      - "partners"
      summary: "Get Partner Program details from DB"
      description: "Retrieve the Partner Program details from the DB"
      operationId: "fetchAllPPDetails"
      consumes:
      - "application/xml"
      - "text/xml"
      - "application/json"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters: []
      responses:
        503:
          description: "Service not implemented"
        404:
          description: "Not Found"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PartnerProgramResponse"
        400:
          description: "Bad Input"
  /partners/program/{ID}:
    put:
      tags:
      - "partners"
      summary: "Process Program Partner Assignment"
      description: "This API creates or updates a partner assigment. Please go through\
        \ the request and response structure. "
      operationId: "updatePartnerProgramAssignment"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "ID"
        in: "path"
        description: "ID"
        required: true
        type: "string"
        maximum: 5.0
        minimum: 1.0
      - in: "body"
        name: "body"
        description: "PartnerProgramObject"
        required: true
        schema:
          $ref: "#/definitions/PartnerProgramRequest"
      responses:
        503:
          description: "Service not implemented"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PartnerProgramResponse"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error"
  /partners/program/{id}:
    get:
      tags:
      - "partners"
      summary: "Get Partner Program details from DB"
      description: "Retrieve the Partner Program details from the DB"
      operationId: "fetchPPDetails"
      consumes:
      - "application/xml"
      - "text/xml"
      - "application/json"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
      responses:
        503:
          description: "Service not implemented"
        404:
          description: "Not Found"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PartnerProgramResponse"
        400:
          description: "Bad Input"
  /partners/reassignment:
    put:
      tags:
      - "partners"
      summary: "Process Partner ReAssignment"
      description: "This API Reassigns Partners"
      operationId: "processPartnerReAssignment"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "PartnerReAssignmentObject"
        required: true
        schema:
          $ref: "#/definitions/PartnerReAssignmentRequest"
      responses:
        503:
          description: "Service not implemented"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PartnerReAssignmentResponse"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error"
  /partners/{partnerID}:
    put:
      tags:
      - "partners"
      summary: "Update existing Parnter"
      description: "This API creates a new partner. Please go through the request\
        \ and response structure. "
      operationId: "updatePartner"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "partnerID"
        in: "path"
        description: "partnerID"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "PartnerObject"
        required: true
        schema:
          $ref: "#/definitions/PartnerRequest"
      responses:
        503:
          description: "Service not implemented"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PartnerResponse"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error"
  /phoenixorders:
    post:
      tags:
      - "phoenixorder"
      summary: "Stores Phoenix order details or run Fraud checks on order details"
      description: "API looks for FraudCheck flag in the payload. If True, Fraud checks\
        \ run on order details. API looks for SaveOrder. If True, order details will\
        \ be stored. Request payload is accepted as json/xml."
      operationId: "processPhoenixOrder"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Order Object"
        required: true
        schema:
          $ref: "#/definitions/OrderCreationToolRequest"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Response"
        400:
          description: "Bad Request. Please verify your input"
  /shm:
    post:
      tags:
      - "shm"
      summary: "It will create a new SHM details with the given object"
      description: "It will create a new SHMessage"
      operationId: "createSHMDetail"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "SHM Detail Object"
        required: true
        schema:
          $ref: "#/definitions/CreateSHMRequest"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/CreateSHMRequest"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
  /shm/shMessage:
    get:
      tags:
      - "shm"
      summary: "Retreive shm message based on Search Parameter order Id"
      description: "This will fetch all shm details as part of search string"
      operationId: "fetchSHMessage"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "searchString"
        in: "query"
        description: "shm Record Search Parameters"
        required: false
        type: "string"
        maximum: 5.0
        minimum: 1.0
      responses:
        503:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/CtSHM"
        400:
          description: "Bad Input"
  /shm/shmDetails:
    get:
      tags:
      - "shm"
      summary: "Retreive shm details based on Search Parameter shm Id"
      description: "This will fetch all shm details as part of search string"
      operationId: "fetchSHMDetails"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "searchString"
        in: "query"
        description: "shm Record Search Parameters"
        required: false
        type: "string"
        maximum: 5.0
        minimum: 1.0
      responses:
        503:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/CreateSHMResponse"
        400:
          description: "Bad Input"
  /shm/{shmId}:
    put:
      tags:
      - "shm"
      summary: "This will update shm entries."
      description: "This will update shm entries."
      operationId: "updateSHMDetail"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "shmId"
        in: "path"
        description: "shmId"
        required: true
        type: "string"
        maximum: 5.0
        minimum: 1.0
      - in: "body"
        name: "body"
        description: "SHM Detail Object"
        required: true
        schema:
          $ref: "#/definitions/CreateSHMRequest"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/CreateSHMResponse"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
  /smv/smartvideo:
    get:
      tags:
      - "c2s"
      summary: "fetch time zones for the restricted mails flow"
      description: "This will fetch time zones for the restricted mails flow"
      operationId: "fetchSmartVideoTimeData"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Fetch restricted time zones"
        required: true
        schema:
          $ref: "#/definitions/SmartVideoAdminRequest"
      - name: "searchString"
        in: "query"
        required: false
        type: "string"
      responses:
        503:
          description: "Service not implemented"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/SmartVideoAdminResponse"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error"
    post:
      tags:
      - "c2s"
      summary: "create a new time zones for the restricted mails flow"
      description: "This will create a new time zones for the restricted mails flow"
      operationId: "createSmartVideoTimeData"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Create restricted time zones"
        required: true
        schema:
          $ref: "#/definitions/SmartVideoAdminRequest"
      responses:
        503:
          description: "Service not implemented"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/SmartVideoAdminResponse"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
      - "c2s"
      summary: "update time zones for the restricted mails flow"
      description: "This will update time zones for the restricted mails flow"
      operationId: "updateSmartVideoTimeData"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Update restricted time zones"
        required: true
        schema:
          $ref: "#/definitions/SmartVideoAdminRequest"
      responses:
        503:
          description: "Service not implemented"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/SmartVideoAdminResponse"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error"
  /smv/smartvideo/{svId}:
    delete:
      tags:
      - "c2s"
      summary: "delete time zones for the restricted mails flow"
      description: "This will delete time zones for the restricted mails flow"
      operationId: "deleteSmartVideoTimeData"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "svId"
        in: "path"
        description: "svId"
        required: true
        type: "string"
      responses:
        503:
          description: "Service not implemented"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/SmartVideoAdminResponse"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error"
  /tasks:
    get:
      tags:
      - "tasks"
      summary: "Get Order details from Repository"
      description: "Supply the order id to retrieve the order details from the Repository\
        \ for the corresponding search parameters passed. The following parameters\
        \ can be given in any combination. If atleast one advance search parameter\
        \ is present by default advance search is given precedence."
      operationId: "getOrderTasks"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "searchString"
        in: "query"
        description: "Request in format {userId:xxx,fromDate:xxxx,toDate:xxx,status:xxx,channel:xxx,\
          \ offset:xxx, limit:xxx}"
        required: false
        type: "string"
        maximum: 250.0
        minimum: 1.0
      - name: "sortBy"
        in: "query"
        description: "Request in format {field: xxxx}"
        required: false
        type: "string"
        maximum: 250.0
        minimum: 1.0
      responses:
        503:
          description: "Service not implemented"
        404:
          description: "Not Found"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/CtOrderTaskList"
        400:
          description: "Bad Input"
  /tasks/getNext:
    put:
      tags:
      - "tasks"
      summary: "Get Order details from Repository"
      description: "Supply lineCombo,lineAction,queueType,program to retrieve the\
        \ order details from the Repository for the corresponding search parameters\
        \ passed. The following parameters can be given in any combination. If atleast\
        \ one advance search parameter is present by default advance search is given\
        \ precedence."
      operationId: "getNextOrderTask"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      - "text/plain"
      parameters:
      - name: "searchString"
        in: "query"
        description: "Request in format {userId:xxx,fromDate:xxxx,toDate:xxx,status:xxx,channel:xxx,\
          \ offset:xxx, limit:xxx}"
        required: false
        type: "string"
        maximum: 250.0
        minimum: 1.0
      - name: "sortBy"
        in: "query"
        description: "Request in format {field: xxxx}"
        required: false
        type: "string"
        maximum: 250.0
        minimum: 1.0
      responses:
        503:
          description: "Service not implemented"
        404:
          description: "Not Found"
        200:
          description: "successful operation"
          schema:
            type: "string"
        400:
          description: "Bad Input"
  /tasks/{taskId}:
    put:
      tags:
      - "tasks"
      summary: "Updates task api(release/claim/assign/close)"
      description: "Updates task api(release/claim/assign/close)"
      operationId: "updateTask"
      consumes:
      - "application/xml"
      - "text/xml"
      - "application/json"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "taskId"
        in: "path"
        description: "taskId"
        required: true
        type: "string"
        maximum: 5.0
        minimum: 1.0
      - in: "body"
        name: "body"
        description: "Task Object"
        required: true
        schema:
          $ref: "#/definitions/CtOrderTask"
      - name: "searchString"
        in: "query"
        description: "Request in format {channel:xxx}"
        required: false
        type: "string"
        maximum: 250.0
        minimum: 1.0
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/OrderTasksResponse"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error"
  /templates:
    get:
      tags:
      - "templates"
      summary: "Retreive all email templates based on template type"
      description: "This will fetch all email templates based on the template type\
        \ passed as part of search string"
      operationId: "fetchAllEmailTemplates"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "searchString"
        in: "query"
        description: "{templateType:master/micro}"
        required: true
        type: "string"
        enum:
        - "master"
        - "micro"
      responses:
        503:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/TemplateResponse"
        400:
          description: "Bad Input"
    post:
      tags:
      - "templates"
      summary: "It will create a new email template with the given object"
      description: "It will create a new email template"
      operationId: "createEmailTemplate"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Email Template Object"
        required: true
        schema:
          $ref: "#/definitions/CtEmailContent"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailContentResponse"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
  /templates/email/resend:
    put:
      tags:
      - "templates"
      summary: "It will resend the email with request parameters"
      description: "It will resend the emailto user"
      operationId: "resendEmail"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Resend Email"
        required: true
        schema:
          $ref: "#/definitions/ResendEmailRequest"
      responses:
        503:
          description: "Service not implemented"
        404:
          description: "Not Found"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResendEmailResponse"
        400:
          description: "Bad Input"
  /templates/fetchEmail:
    get:
      tags:
      - "templates"
      summary: "This will fetch Persisted Email content"
      description: "This will fetch Persisted Email content."
      operationId: "fetchPersistedHTML"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "orderID"
        in: "query"
        description: "orderID and marker id"
        required: false
        type: "string"
      - name: "markerID"
        in: "query"
        description: "orderID and marker id"
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/FetchEmailTemplate"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
  /templates/{templateName}:
    get:
      tags:
      - "templates"
      summary: "Retreive all email templates based on template type"
      description: "This will fetch all email templates based on the template type\
        \ passed as part of search string"
      operationId: "fetchEmailTemplate"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "templateName"
        in: "path"
        description: "templateName"
        required: true
        type: "string"
        maximum: 5.0
        minimum: 1.0
      responses:
        503:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/TemplateResponse"
        400:
          description: "Bad Input"
    put:
      tags:
      - "templates"
      summary: "This will update an email template entries."
      description: "This will update an email template entries."
      operationId: "updateEmailTemplate"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "templateName"
        in: "path"
        description: "templateName"
        required: true
        type: "string"
        maximum: 5.0
        minimum: 1.0
      - in: "body"
        name: "body"
        description: "Email Template Object"
        required: true
        schema:
          $ref: "#/definitions/CtEmailContent"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailContentResponse"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
    delete:
      tags:
      - "templates"
      summary: "This will always delete an email content entry"
      description: "This will always delete an email content entry."
      operationId: "removeEmailContent"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "templateName"
        in: "path"
        description: "contentId"
        required: true
        type: "string"
        maximum: 5.0
        minimum: 1.0
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EmailContentResponse"
        400:
          description: "Bad Request. Please verify your input"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Error"
          schema:
            $ref: "#/definitions/Error"
  /transactions/auditlogs:
    get:
      tags:
      - "transactionsauditlogs"
      summary: "Get audit trail Logs for the requested entity"
      description: "Retrieve the audit trail details from the Repository for the requested\
        \ entity"
      operationId: "fetchAuditTrailLogs"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "searchString"
        in: "query"
        description: "Request in format {entityName:xxx,entityType:xxx,limit:xxx,offset:xxx}"
        required: false
        type: "string"
        maximum: 250.0
        minimum: 1.0
      responses:
        503:
          description: "Service not implemented"
        404:
          description: "Not Found"
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/TransactionLogResponse"
        400:
          description: "Bad Input"
  /utility/dirstructure:
    get:
      tags:
      - "utility"
      summary: "Create JSON struture of directory and files. Sample JSON {folder:folder\
        \ path, files: file1, file2, file3}"
      description: ""
      operationId: "retrieveDirStructure"
      consumes:
      - "text/plain"
      parameters:
      - name: "dirpath"
        in: "query"
        required: false
        type: "string"
      responses:
        503:
          description: "Service not implemented"
        400:
          description: "Bad Input"
  /utility/reloadCache:
    post:
      tags:
      - "utility"
      summary: "Used to refresh the local cache for the given cache name"
      description: ""
      operationId: "reloadCache"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "cacheName"
        in: "query"
        description: "cacheName"
        required: false
        type: "string"
      - name: "cacheObject"
        in: "query"
        description: "cacheObject"
        required: false
        type: "string"
      responses:
        503:
          description: "Service not implemented"
        400:
          description: "Bad Input"
  /utility/throttleinfo:
    get:
      tags:
      - "utility"
      summary: "Create JSON struture of directory and files. Sample JSON {folder:folder\
        \ path, files: file1, file2, file3}"
      description: ""
      operationId: "channelThrottling"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters: []
      responses:
        503:
          description: "Service not implemented"
        400:
          description: "Bad Input"
    post:
      tags:
      - "utility"
      summary: "Create JSON struture of directory and files. Sample JSON {folder:folder\
        \ path, files: file1, file2, file3}"
      description: ""
      operationId: "updateThrottleInfo"
      consumes:
      - "application/json"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Channel Throttling Request"
        required: true
        schema:
          $ref: "#/definitions/ChannelThrottlingRequest"
      responses:
        503:
          description: "Service not implemented"
        400:
          description: "Bad Input"
definitions:
  CtLineItemList:
    type: "object"
    required:
    - "lineItem"
    properties:
      lineItem:
        type: "array"
        xml:
          name: "LineItem"
        items:
          $ref: "#/definitions/CtLineItem"
        maxItems: 999
        minItems: 1
  CtEmail:
    type: "object"
    required:
    - "count"
    - "value"
    properties:
      count:
        type: "integer"
        format: "int32"
        xml:
          name: "Count"
      value:
        type: "string"
        xml:
          name: "Value"
      dateLimit:
        type: "array"
        xml:
          name: "DateLimit"
        items:
          $ref: "#/definitions/CtDateLimit"
        maxItems: 99
        minItems: 0
  TransactionLogRequest:
    type: "object"
    properties:
      transactionLogs:
        type: "array"
        xml:
          name: "TransactionLogs"
        items:
          $ref: "#/definitions/CtTransactionLog"
        maxItems: 999
        minItems: 0
    xml:
      name: "TransactionLogRequest"
  CtTemplates:
    type: "object"
    required:
    - "channel"
    - "contentType"
    - "createdBy"
    - "createdDate"
    - "htmlContent"
    - "language"
    - "lastModifiedBy"
    - "lastModifiedDate"
    - "subject"
    - "templateID"
    - "templateName"
    - "templateType"
    - "textualContent"
    properties:
      templateID:
        type: "string"
        xml:
          name: "TemplateID"
      templateName:
        type: "string"
        xml:
          name: "TemplateName"
      templateType:
        type: "string"
        xml:
          name: "TemplateType"
      language:
        type: "string"
        xml:
          name: "Language"
      contentType:
        type: "string"
        xml:
          name: "ContentType"
      htmlContent:
        type: "string"
        xml:
          name: "HtmlContent"
      textualContent:
        type: "string"
        xml:
          name: "TextualContent"
      createdBy:
        type: "string"
        xml:
          name: "CreatedBy"
      createdDate:
        type: "string"
        xml:
          name: "CreatedDate"
      lastModifiedBy:
        type: "string"
        xml:
          name: "LastModifiedBy"
      lastModifiedDate:
        type: "string"
        xml:
          name: "LastModifiedDate"
      subject:
        type: "string"
        xml:
          name: "Subject"
      channel:
        type: "string"
        xml:
          name: "Channel"
      template:
        type: "array"
        xml:
          name: "Template"
        items:
          $ref: "#/definitions/Template"
        maxItems: 999
        minItems: 0
  CtPaymentConfirmationDetail:
    type: "object"
    properties:
      paymentHandle:
        type: "string"
        xml:
          name: "PaymentHandle"
        minLength: 1
        maxLength: 2147483647
      batchNumber:
        type: "string"
        xml:
          name: "BatchNumber"
        minLength: 1
        maxLength: 2147483647
      referenceNumber:
        type: "string"
        xml:
          name: "ReferenceNumber"
        minLength: 1
        maxLength: 2147483647
      transactionId:
        type: "string"
        xml:
          name: "TransactionId"
        minLength: 1
        maxLength: 2147483647
  CtRuralRouteInfo:
    type: "object"
    properties:
      ruralRouteCenterNumber:
        type: "string"
        xml:
          name: "RuralRouteCenterNumber"
        minLength: 1
        maxLength: 2147483647
      ruralRouteBoxNumber:
        type: "string"
        xml:
          name: "RuralRouteBoxNumber"
        minLength: 1
        maxLength: 2147483647
  CtPackageCharacteristics:
    type: "object"
    properties:
      category:
        type: "string"
        xml:
          name: "Category"
        enum:
        - "PACKAGE"
        - "OFFER"
      code:
        type: "string"
        xml:
          name: "Code"
        minLength: 1
        maxLength: 2147483647
      description:
        type: "string"
        xml:
          name: "Description"
        minLength: 1
        maxLength: 2147483647
  CtSLABreachDetail:
    type: "object"
    properties:
      queueName:
        type: "string"
        xml:
          name: "QueueName"
      fulfillmentMethod:
        type: "string"
        xml:
          name: "FulfillmentMethod"
      channel:
        type: "string"
        xml:
          name: "Channel"
      slaBreachTime:
        type: "integer"
        format: "int32"
        xml:
          name: "SlaBreachTime"
      atRiskCount:
        type: "integer"
        format: "int32"
        xml:
          name: "AtRiskCount"
      atViolationCount:
        type: "integer"
        format: "int32"
        xml:
          name: "AtViolationCount"
      atRiskOldestOrder:
        type: "string"
        format: "date-time"
        xml:
          name: "AtRiskOldestOrder"
      atViolationOlderOrder:
        type: "string"
        format: "date-time"
        xml:
          name: "AtViolationOlderOrder"
      slaBreachEmailList:
        type: "string"
        xml:
          name: "SlaBreachEmailList"
  CtRecipients:
    type: "object"
    properties:
      toAddresses:
        type: "array"
        xml:
          name: "ToAddresses"
        items:
          type: "string"
        maxItems: 99
        minItems: 0
      ccAddresses:
        type: "array"
        xml:
          name: "CcAddresses"
        items:
          type: "string"
        maxItems: 99
        minItems: 0
      bccAddresses:
        type: "array"
        xml:
          name: "BccAddresses"
        items:
          type: "string"
        maxItems: 99
        minItems: 0
  CtEmployeeDetails:
    type: "object"
    properties:
      cenetId:
        type: "string"
        xml:
          name: "CenetId"
        minLength: 1
        maxLength: 2147483647
      employeeStatus:
        type: "string"
        xml:
          name: "EmployeeStatus"
        enum:
        - "ACTIVE"
        - "RETIREE"
        - "INACTIVE"
      employeeClass:
        type: "string"
        xml:
          name: "EmployeeClass"
        enum:
        - "M"
        - "N"
        - "R"
  CtDynamicAttribute:
    type: "object"
    required:
    - "key"
    - "value"
    properties:
      key:
        type: "string"
        xml:
          name: "Key"
      value:
        type: "string"
        xml:
          name: "Value"
  CtOrderUpdateStatus:
    type: "object"
    properties:
      rowId:
        type: "string"
        xml:
          name: "RowId"
        minLength: 1
        maxLength: 2147483647
      status:
        type: "string"
        xml:
          name: "Status"
        minLength: 1
        maxLength: 2147483647
  CtNegativeSimpleType:
    type: "object"
    required:
    - "id"
    - "negativeType"
    properties:
      id:
        type: "string"
        xml:
          name: "ID"
      isProtected:
        type: "boolean"
        xml:
          name: "IsProtected"
        default: false
      negativeType:
        type: "string"
        xml:
          name: "NegativeType"
      value:
        type: "string"
        xml:
          name: "Value"
  CtRelatedOrders:
    type: "object"
    required:
    - "relatedOrder"
    properties:
      relatedOrder:
        type: "array"
        xml:
          name: "RelatedOrder"
        items:
          type: "string"
        maxItems: 999
        minItems: 1
  CtSupplyChainInfo:
    type: "object"
    properties:
      availabilityDate:
        type: "string"
        xml:
          name: "AvailabilityDate"
        minLength: 1
        maxLength: 2147483647
      orderDocumentInfo:
        xml:
          name: "OrderDocumentInfo"
        $ref: "#/definitions/CtOrderDocumentInfo"
      quantityOrdered:
        type: "integer"
        xml:
          name: "QuantityOrdered"
        minimum: 0.0
      quantityBackOrdered:
        type: "integer"
        xml:
          name: "QuantityBackOrdered"
        minimum: 0.0
      quantityCanceled:
        type: "integer"
        xml:
          name: "QuantityCanceled"
        minimum: 0.0
      quantityShipped:
        type: "integer"
        xml:
          name: "QuantityShipped"
        minimum: 0.0
      quantityToShip:
        type: "integer"
        xml:
          name: "QuantityToShip"
        minimum: 0.0
      price:
        type: "number"
        xml:
          name: "Price"
      exchangeOrderId:
        type: "string"
        xml:
          name: "ExchangeOrderId"
        minLength: 1
        maxLength: 2147483647
      exchangeDocumentId:
        type: "string"
        xml:
          name: "ExchangeDocumentId"
        minLength: 1
        maxLength: 2147483647
      trackingNumber:
        type: "string"
        xml:
          name: "TrackingNumber"
        minLength: 1
        maxLength: 2147483647
      carrier:
        type: "string"
        xml:
          name: "Carrier"
        minLength: 1
        maxLength: 2147483647
      shippedDate:
        type: "string"
        format: "date-time"
        xml:
          name: "ShippedDate"
      claimRMANumber:
        type: "string"
        minLength: 1
        maxLength: 2147483647
  PartnerRequest:
    type: "object"
    properties:
      partner:
        type: "array"
        xml:
          name: "Partner"
        items:
          $ref: "#/definitions/CtPartner"
        maxItems: 999
        minItems: 0
    xml:
      name: "PartnerRequest"
  ProcessCallLogDetailResponse:
    type: "object"
    required:
    - "errors"
    properties:
      callId:
        type: "string"
        xml:
          name: "CallId"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Public/OCEProcessCallLogDetailV1.0.xsd"
      responseCode:
        type: "string"
        xml:
          name: "ResponseCode"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Public/OCEProcessCallLogDetailV1.0.xsd"
      responseDescription:
        type: "string"
        xml:
          name: "ResponseDescription"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Public/OCEProcessCallLogDetailV1.0.xsd"
      errors:
        xml:
          name: "Errors"
        $ref: "#/definitions/CtErrorList"
    xml:
      name: "ProcessCallLogDetailResponse"
      namespace: "http://oce.att.com/OCE/Namespaces/Types/Public/OCEProcessCallLogDetailV1.0.xsd"
  MessageBodyWorkers:
    type: "object"
  CtRoles:
    type: "object"
    required:
    - "endDate"
    - "roleDescription"
    - "roleId"
    - "roleName"
    - "roleStatus"
    - "startDate"
    properties:
      roleId:
        type: "string"
        xml:
          name: "RoleId"
      roleName:
        type: "string"
        xml:
          name: "RoleName"
      roleDescription:
        type: "string"
        xml:
          name: "RoleDescription"
      priority:
        type: "integer"
        format: "int32"
        xml:
          name: "Priority"
      startDate:
        type: "string"
        format: "date-time"
        xml:
          name: "StartDate"
      endDate:
        type: "string"
        format: "date-time"
        xml:
          name: "EndDate"
      roleStatus:
        type: "string"
        xml:
          name: "RoleStatus"
      accessDetails:
        type: "array"
        xml:
          name: "AccessDetails"
        items:
          $ref: "#/definitions/CtAccessDetails"
        maxItems: 999
        minItems: 0
      default:
        type: "boolean"
        default: false
  UserRoles:
    type: "object"
    properties:
      roleDetails:
        type: "array"
        xml:
          name: "RoleDetails"
        items:
          $ref: "#/definitions/CtQueueMetadataUserRoles"
        maxItems: 999
        minItems: 0
  EmailContentRuleType:
    type: "object"
    required:
    - "status"
    properties:
      ruleId:
        type: "string"
        xml:
          name: "RuleId"
      ruleName:
        type: "string"
        xml:
          name: "RuleName"
      channel:
        type: "string"
        xml:
          name: "Channel"
      activeStatus:
        type: "boolean"
        xml:
          name: "ActiveStatus"
        default: false
      priority:
        type: "integer"
        format: "int32"
        xml:
          name: "Priority"
      exclusiveFlag:
        type: "boolean"
        xml:
          name: "ExclusiveFlag"
        default: false
      enterpriseType:
        type: "string"
        xml:
          name: "EnterpriseType"
      service:
        type: "string"
        xml:
          name: "Service"
      serviceType:
        type: "string"
        xml:
          name: "ServiceType"
      status:
        type: "string"
        xml:
          name: "Status"
      subStatus:
        type: "string"
        xml:
          name: "SubStatus"
      emailContentID:
        type: "string"
        xml:
          name: "EmailContentID"
      emailContentName:
        type: "string"
        xml:
          name: "EmailContentName"
      emailTemplateID:
        type: "string"
        xml:
          name: "EmailTemplateID"
      emailTemplateName:
        type: "string"
        xml:
          name: "EmailTemplateName"
      emailContentType:
        type: "string"
        xml:
          name: "EmailContentType"
      textContentID:
        type: "string"
        xml:
          name: "TextContentID"
      textContentName:
        type: "string"
        xml:
          name: "TextContentName"
      billing:
        type: "string"
        xml:
          name: "Billing"
      lnp:
        type: "string"
        xml:
          name: "Lnp"
      byod:
        type: "string"
        xml:
          name: "Byod"
      fulfillmentType:
        type: "string"
        xml:
          name: "FulfillmentType"
      item:
        type: "string"
        xml:
          name: "Item"
      sku:
        type: "string"
        xml:
          name: "Sku"
      language:
        type: "string"
        xml:
          name: "Language"
      whiteGlove:
        type: "string"
        xml:
          name: "WhiteGlove"
      locationID:
        type: "string"
        xml:
          name: "LocationID"
      log:
        type: "string"
        xml:
          name: "Log"
      lastModifiedBy:
        type: "string"
        xml:
          name: "LastModifiedBy"
      multipleRules:
        type: "array"
        xml:
          name: "MultipleRules"
        items:
          type: "string"
        maxItems: 99
        minItems: 0
  CtAccountList:
    type: "object"
    required:
    - "account"
    properties:
      account:
        type: "array"
        xml:
          name: "Account"
        items:
          $ref: "#/definitions/CtAccount"
        maxItems: 999
        minItems: 1
  CtContractDetails:
    type: "object"
    properties:
      installmentPlanID:
        type: "integer"
        format: "int64"
        xml:
          name: "InstallmentPlanID"
      contractDisplayName:
        type: "string"
        xml:
          name: "ContractDisplayName"
        minLength: 1
        maxLength: 2147483647
      installmentPlanDef:
        type: "string"
        xml:
          name: "InstallmentPlanDef"
        minLength: 1
        maxLength: 2147483647
      annualPercentageRate:
        type: "number"
        xml:
          name: "AnnualPercentageRate"
      financeCharge:
        type: "number"
        xml:
          name: "FinanceCharge"
      amountFinanced:
        type: "number"
        xml:
          name: "AmountFinanced"
      balancedAmount:
        type: "number"
        xml:
          name: "BalancedAmount"
      totalSalePrice:
        type: "number"
        xml:
          name: "TotalSalePrice"
      downPayment:
        type: "number"
        xml:
          name: "DownPayment"
      downPaymentPercent:
        type: "number"
        xml:
          name: "DownPaymentPercent"
      prepaidFinanceCharge:
        type: "number"
        xml:
          name: "PrepaidFinanceCharge"
      installmentAmount:
        type: "number"
        xml:
          name: "InstallmentAmount"
      installmentStatus:
        type: "string"
        xml:
          name: "InstallmentStatus"
        minLength: 1
        maxLength: 2147483647
      installmentType:
        type: "string"
        xml:
          name: "InstallmentType"
        minLength: 1
        maxLength: 2147483647
      contractType:
        type: "string"
        xml:
          name: "ContractType"
        enum:
        - "REGULAR"
        - "LEASE"
        - "INSTALLMENT"
        - "NOCOMMIT"
      contractSystem:
        type: "string"
        xml:
          name: "ContractSystem"
        enum:
        - "OPTICAL"
      contractSent:
        type: "string"
        xml:
          name: "ContractSent"
        enum:
        - "Y"
        - "N"
      contractLength:
        type: "integer"
        xml:
          name: "ContractLength"
        minimum: 0.0
      isEIP:
        type: "boolean"
        xml:
          name: "IsEIP"
        default: false
  CtB2BList:
    type: "object"
    required:
    - "b2B"
    properties:
      b2B:
        type: "array"
        xml:
          name: "B2B"
        items:
          $ref: "#/definitions/CtB2B"
        maxItems: 999
        minItems: 1
  CtServiceFacilityAndQualification:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "string"
        xml:
          name: "Id"
        pattern: "SERVICE_QLFY_[0-9]{2}"
      addressRef:
        type: "string"
        xml:
          name: "AddressRef"
        pattern: "ADDRESS_[0-9]{2}"
      preferredNetworkType:
        type: "string"
        xml:
          name: "PreferredNetworkType"
        minLength: 1
        maxLength: 2147483647
      profileCode:
        type: "string"
        xml:
          name: "ProfileCode"
        minLength: 0
        maxLength: 10
      frequency17MhzIndicator:
        type: "boolean"
        xml:
          name: "Frequency17MhzIndicator"
        default: false
      vectoringIndicator:
        type: "boolean"
        xml:
          name: "VectoringIndicator"
        default: false
      cpeRequiredIndicator:
        type: "boolean"
        xml:
          name: "CpeRequiredIndicator"
        default: false
      facilityCheck:
        xml:
          name: "FacilityCheck"
        $ref: "#/definitions/CtFacilityCheck"
      isPOTSAvailable:
        type: "boolean"
        xml:
          name: "IsPOTSAvailable"
        default: false
      isDSLAvailable:
        type: "boolean"
        xml:
          name: "IsDSLAvailable"
        default: false
  LookupAuditResponse:
    type: "object"
    properties:
      auditResponse:
        type: "array"
        xml:
          name: "AuditResponse"
          namespace: "http://www.att.com/ooce/core"
        items:
          $ref: "#/definitions/AuditResponse"
        maxItems: 999
        minItems: 0
      errors:
        xml:
          name: "Errors"
        $ref: "#/definitions/CtErrorList"
    xml:
      name: "LookupAuditResponse"
      namespace: "http://www.att.com/ooce/core"
  FraudNegativeRuleCollectionResponse:
    type: "object"
    required:
    - "errors"
    properties:
      metaInformation:
        xml:
          name: "MetaInformation"
        $ref: "#/definitions/CtMetaInformation"
      fraudNegativeRule:
        type: "array"
        xml:
          name: "FraudNegativeRule"
        items:
          $ref: "#/definitions/CtFraudNegativeRule"
        maxItems: 999
        minItems: 0
      errors:
        xml:
          name: "Errors"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtErrorList"
    xml:
      name: "FraudNegativeRuleCollectionResponse"
  FraudRuleCollectionResponse:
    type: "object"
    required:
    - "errors"
    properties:
      metaInformation:
        xml:
          name: "MetaInformation"
        $ref: "#/definitions/CtMetaInformation"
      fraudRules:
        type: "array"
        xml:
          name: "FraudRules"
        items:
          $ref: "#/definitions/CtFraudRule"
        maxItems: 999
        minItems: 0
      errors:
        xml:
          name: "Errors"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtErrorList"
    xml:
      name: "FraudRuleCollectionResponse"
  CtFraudRule:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "string"
        xml:
          name: "ID"
      name:
        type: "string"
        xml:
          name: "Name"
      displayName:
        type: "string"
        xml:
          name: "DisplayName"
      channel:
        type: "string"
        xml:
          name: "Channel"
      sequence:
        type: "integer"
        format: "int32"
        xml:
          name: "Sequence"
      lookBackDays:
        type: "integer"
        format: "int32"
        xml:
          name: "LookBackDays"
        default: 0
      runOnUpdate:
        type: "integer"
        format: "int32"
        xml:
          name: "RunOnUpdate"
        default: 0
      lastModifiedBy:
        type: "string"
        xml:
          name: "LastModifiedBy"
      createdBy:
        type: "string"
        xml:
          name: "CreatedBy"
      lastModifiedDate:
        type: "string"
        format: "date-time"
        xml:
          name: "LastModifiedDate"
      creationDate:
        type: "string"
        format: "date-time"
        xml:
          name: "CreationDate"
      conditions:
        type: "array"
        xml:
          name: "Conditions"
        items:
          $ref: "#/definitions/CtCondition"
        maxItems: 999
        minItems: 0
      result:
        xml:
          name: "Result"
        $ref: "#/definitions/CtRuleResult"
      isActive:
        type: "integer"
        format: "int32"
        xml:
          name: "IsActive"
        default: 0
      sno:
        type: "integer"
        format: "int32"
  CtB2B:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "string"
        xml:
          name: "Id"
        pattern: "B2B_[0-9]{2}"
      b2BContractProvider:
        type: "string"
        xml:
          name: "B2BContractProvider"
        minLength: 1
        maxLength: 2147483647
      b2BContractType:
        type: "string"
        xml:
          name: "B2BContractType"
        minLength: 1
        maxLength: 2147483647
      b2BSalesRepCode:
        type: "string"
        xml:
          name: "B2BSalesRepCode"
        minLength: 1
        maxLength: 2147483647
      b2BFAN:
        type: "string"
        xml:
          name: "B2BFAN"
        minLength: 1
        maxLength: 2147483647
      b2BskipUpgradeEligibility:
        type: "boolean"
        xml:
          name: "B2BskipUpgradeEligibility"
        default: false
      b2BIgnoreDepositRequired:
        type: "boolean"
        xml:
          name: "B2BIgnoreDepositRequired"
        default: false
      b2BsibEnrollment:
        type: "string"
        xml:
          name: "B2BsibEnrollment"
        minLength: 1
        maxLength: 2147483647
      b2BMIRIneligible:
        type: "boolean"
        xml:
          name: "B2BMIRIneligible"
        default: false
      b2BFANBusinessName:
        type: "string"
        xml:
          name: "B2BFANBusinessName"
        minLength: 1
        maxLength: 2147483647
      majorAccountNumber:
        type: "string"
        xml:
          name: "MajorAccountNumber"
        minLength: 1
        maxLength: 2147483647
      taxExemptInd:
        type: "boolean"
        xml:
          name: "TaxExemptInd"
        default: false
      exemptOrderId:
        type: "string"
        xml:
          name: "ExemptOrderId"
        minLength: 1
        maxLength: 2147483647
      businessType:
        type: "string"
        xml:
          name: "BusinessType"
        minLength: 1
        maxLength: 2147483647
  CtWirelessHardGoodChars:
    type: "object"
    properties:
      techType:
        type: "string"
        xml:
          name: "TechType"
        enum:
        - "GSM"
        - "TDMA"
        - "GSM_GAIT"
        - "GAIT"
        - "TDMA_GAIT"
        - "GSM_UMTS"
        - "UMTS"
        - "LTE"
      equipmentType:
        type: "string"
        xml:
          name: "EquipmentType"
        enum:
        - "GPRS"
        - "DIGITAL"
        - "EDGE"
      imei:
        type: "string"
        xml:
          name: "Imei"
        minLength: 1
        maxLength: 2147483647
      imeiType:
        type: "string"
        xml:
          name: "ImeiType"
        minLength: 1
        maxLength: 2147483647
      usoc:
        type: "string"
        xml:
          name: "Usoc"
        minLength: 1
        maxLength: 2147483647
      connectionType:
        type: "string"
        xml:
          name: "ConnectionType"
        minLength: 1
        maxLength: 2147483647
      zodSequenceNo:
        type: "string"
        xml:
          name: "ZodSequenceNo"
        minLength: 1
        maxLength: 2147483647
      equipmentUpgradeIndicator:
        type: "string"
        xml:
          name: "EquipmentUpgradeIndicator"
        enum:
        - "U"
        - "D"
        - "X"
        - "R"
        - "N"
        - "C"
        - "F"
      phoneType:
        type: "string"
        xml:
          name: "PhoneType"
        minLength: 1
        maxLength: 2147483647
  CtShippingInfo:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "string"
        xml:
          name: "Id"
        pattern: "SHIPPING_INFO_[0-9]{2}"
      shippingInfoSequence:
        type: "integer"
        xml:
          name: "ShippingInfoSequence"
      nameRef:
        type: "string"
        xml:
          name: "NameRef"
        pattern: "NAME_[0-9]{2}"
      addressRef:
        type: "string"
        xml:
          name: "AddressRef"
        pattern: "ADDRESS_[0-9]{2}"
      shippingCode:
        type: "string"
        xml:
          name: "ShippingCode"
        minLength: 1
        maxLength: 2147483647
      shippingPriceCode:
        type: "string"
        xml:
          name: "ShippingPriceCode"
        minLength: 1
        maxLength: 2147483647
      shippingMethod:
        type: "string"
        xml:
          name: "ShippingMethod"
        minLength: 1
        maxLength: 2147483647
      shipmentCommitDate:
        xml:
          name: "ShipmentCommitDate"
        $ref: "#/definitions/CtShipmentCommitDate"
      carrierPreference:
        type: "string"
        xml:
          name: "CarrierPreference"
        minLength: 1
        maxLength: 2147483647
      additionalDetails:
        xml:
          name: "AdditionalDetails"
        $ref: "#/definitions/CtAdditionalDetails"
  CtOrderDetails:
    type: "object"
    properties:
      order:
        xml:
          name: "Order"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/Order"
      orderTasks:
        xml:
          name: "OrderTasks"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModelExtensionV1.0.xsd"
        $ref: "#/definitions/CtOrderTaskList"
      relatedOrders:
        xml:
          name: "RelatedOrders"
        $ref: "#/definitions/CtRelatedOrders"
      childOrders:
        xml:
          name: "ChildOrders"
        $ref: "#/definitions/CtChildOrders"
      orderLogs:
        type: "array"
        xml:
          name: "OrderLogs"
        items:
          $ref: "#/definitions/CtOrderLog"
        maxItems: 999
        minItems: 0
      currentDateTime:
        type: "string"
        format: "date-time"
        xml:
          name: "CurrentDateTime"
      emailMsg:
        type: "string"
        xml:
          name: "EmailMsg"
      errors:
        xml:
          name: "Errors"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtErrorList"
  BulkOrderUpdateRequest:
    type: "object"
    required:
    - "errors"
    properties:
      processOrderRequest:
        type: "array"
        xml:
          name: "ProcessOrderRequest"
        items:
          $ref: "#/definitions/ProcessOrderRequest"
        maxItems: 999
        minItems: 0
      jobName:
        type: "string"
        xml:
          name: "JobName"
      errors:
        xml:
          name: "Errors"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtErrorList"
    xml:
      name: "BulkOrderUpdateRequest"
  Response:
    type: "object"
    required:
    - "errors"
    properties:
      requestId:
        type: "string"
        xml:
          name: "RequestId"
      customerOrderNumber:
        type: "string"
        xml:
          name: "CustomerOrderNumber"
      responseCode:
        type: "string"
        xml:
          name: "ResponseCode"
      orderNumber:
        type: "string"
        xml:
          name: "OrderNumber"
      errors:
        xml:
          name: "Errors"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtErrorList"
      orderTasks:
        xml:
          name: "OrderTasks"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModelExtensionV1.0.xsd"
        $ref: "#/definitions/CtOrderTaskList"
    xml:
      name: "Response"
  SmartVideoAdminRequest:
    type: "object"
    properties:
      svcontent:
        $ref: "#/definitions/CtSmartVideoSource"
    xml:
      name: "SmartVideoAdminRequest"
  CtItemInfo:
    type: "object"
    properties:
      itemNumber:
        type: "string"
        xml:
          name: "ItemNumber"
        minLength: 1
        maxLength: 2147483647
      quantityCanceled:
        type: "integer"
        xml:
          name: "QuantityCanceled"
        minimum: 0.0
      cancelDate:
        type: "string"
        format: "date-time"
        xml:
          name: "CancelDate"
  CtBillingInfo:
    type: "object"
    properties:
      nameRef:
        type: "string"
        xml:
          name: "NameRef"
        pattern: "NAME_[0-9]{2}"
      addressRef:
        type: "string"
        xml:
          name: "AddressRef"
        pattern: "ADDRESS_[0-9]{2}"
      lastUpdated:
        type: "string"
        format: "date-time"
        xml:
          name: "LastUpdated"
      authentication:
        xml:
          name: "Authentication"
        $ref: "#/definitions/CtAuthentication"
      cassAddress:
        xml:
          name: "CassAddress"
        $ref: "#/definitions/CtCassAddress"
      accountStatus:
        type: "string"
        xml:
          name: "AccountStatus"
        enum:
        - "ACTIVE"
        - "SUSPENDED"
        - "RESERVED"
        - "CANCELED"
      previousAddressIndicator:
        type: "string"
        xml:
          name: "PreviousAddressIndicator"
        enum:
        - "Y"
        - "N"
      previousAddressRef:
        type: "string"
        xml:
          name: "PreviousAddressRef"
        pattern: "ADDRESS_[0-9]{2}"
      previousPhoneNumber:
        type: "string"
        xml:
          name: "PreviousPhoneNumber"
        minLength: 1
        maxLength: 2147483647
        pattern: "[0-9]{10}"
      nextBillingCycleDate:
        type: "string"
        format: "date-time"
        xml:
          name: "NextBillingCycleDate"
  ResendEmailRequest:
    type: "object"
    properties:
      orderMarkerId:
        type: "string"
        xml:
          name: "OrderMarkerId"
      orderId:
        type: "string"
        xml:
          name: "OrderId"
      toEmailAddress:
        type: "string"
        xml:
          name: "ToEmailAddress"
    xml:
      name: "ResendEmailRequest"
  CtLandlordInfo:
    type: "object"
    properties:
      landlordName:
        type: "string"
        xml:
          name: "LandlordName"
        minLength: 1
        maxLength: 2147483647
      landlordPhoneNumber:
        type: "string"
        xml:
          name: "LandlordPhoneNumber"
        minLength: 1
        maxLength: 2147483647
        pattern: "[0-9]{10}"
      landlordPermission:
        type: "string"
        xml:
          name: "LandlordPermission"
        enum:
        - "Y"
        - "N"
  CtAttributeInfo:
    type: "object"
    properties:
      attributeKey:
        type: "string"
        xml:
          name: "AttributeKey"
      attributeCode:
        type: "string"
        xml:
          name: "AttributeCode"
      attributeValue:
        type: "string"
        xml:
          name: "AttributeValue"
      attributeOperations:
        type: "array"
        xml:
          name: "AttributeOperations"
        items:
          $ref: "#/definitions/CtOperationInfo"
        maxItems: 999
        minItems: 0
  CtPartnerAssignment:
    type: "object"
    required:
    - "program"
    properties:
      program:
        type: "string"
        xml:
          name: "Program"
      partnerInfos:
        xml:
          name: "PartnerInfos"
        $ref: "#/definitions/PartnerInfos"
  CtSearchCondition:
    type: "object"
    properties:
      key:
        type: "string"
        xml:
          name: "Key"
      value:
        type: "array"
        xml:
          name: "Value"
        items:
          $ref: "#/definitions/CtValues"
        maxItems: 999
        minItems: 0
  C2SStatusManagementResponse:
    type: "object"
    required:
    - "errors"
    properties:
      c2SContent:
        type: "array"
        xml:
          name: "C2SContent"
        items:
          $ref: "#/definitions/CtC2SContent"
        maxItems: 999
        minItems: 0
      errors:
        xml:
          name: "Errors"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtErrorList"
      notes:
        type: "string"
        xml:
          name: "Notes"
    xml:
      name: "C2SStatusManagementResponse"
  CtPaymentOptionList:
    type: "object"
    required:
    - "paymentOption"
    properties:
      paymentOption:
        type: "array"
        xml:
          name: "PaymentOption"
        items:
          $ref: "#/definitions/CtPaymentOption"
        maxItems: 999
        minItems: 1
  CtUnparsedAddress:
    type: "object"
    required:
    - "addressLine1"
    - "city"
    properties:
      addressLine1:
        type: "string"
        xml:
          name: "AddressLine1"
        minLength: 1
        maxLength: 2147483647
      addressLine2:
        type: "string"
        xml:
          name: "AddressLine2"
        minLength: 1
        maxLength: 2147483647
      addressLine3:
        type: "string"
        xml:
          name: "AddressLine3"
        minLength: 1
        maxLength: 2147483647
      postOfficeBox:
        type: "string"
        xml:
          name: "PostOfficeBox"
        minLength: 1
        maxLength: 2147483647
      city:
        type: "string"
        xml:
          name: "City"
        minLength: 1
        maxLength: 2147483647
      state:
        type: "string"
        xml:
          name: "State"
        enum:
        - "AA"
        - "AK"
        - "AL"
        - "AR"
        - "AZ"
        - "AP"
        - "AE"
        - "CA"
        - "CO"
        - "CT"
        - "DC"
        - "DE"
        - "FL"
        - "FPO"
        - "GA"
        - "GU"
        - "HI"
        - "IA"
        - "ID"
        - "IL"
        - "IN"
        - "KS"
        - "KY"
        - "LA"
        - "MA"
        - "MD"
        - "ME"
        - "MI"
        - "MN"
        - "MO"
        - "MS"
        - "MT"
        - "NC"
        - "ND"
        - "NE"
        - "NH"
        - "NJ"
        - "NM"
        - "NV"
        - "NY"
        - "OH"
        - "OK"
        - "OR"
        - "PA"
        - "PR"
        - "RI"
        - "SC"
        - "SD"
        - "TN"
        - "TX"
        - "UT"
        - "VA"
        - "VI"
        - "VT"
        - "WA"
        - "WI"
        - "WV"
        - "WY"
      province:
        type: "string"
        xml:
          name: "Province"
        minLength: 1
        maxLength: 30
      zip:
        type: "string"
        xml:
          name: "Zip"
        minLength: 5
        maxLength: 9
        pattern: "[0-9]{5}([0-9]{4})?"
      internationalZip:
        type: "string"
        xml:
          name: "InternationalZip"
        minLength: 1
        maxLength: 10
      county:
        type: "string"
        xml:
          name: "County"
        minLength: 1
        maxLength: 2147483647
      country:
        type: "string"
        xml:
          name: "Country"
        minLength: 1
        maxLength: 2147483647
      attention:
        type: "string"
        xml:
          name: "Attention"
        minLength: 1
        maxLength: 2147483647
      addInstructions:
        type: "string"
        xml:
          name: "AddInstructions"
        minLength: 1
        maxLength: 2147483647
      urbanizationCode:
        type: "string"
        xml:
          name: "UrbanizationCode"
        minLength: 1
        maxLength: 2147483647
      ruralRoute:
        xml:
          name: "RuralRoute"
        $ref: "#/definitions/CtRuralRouteInfo"
      elevation:
        xml:
          name: "Elevation"
        $ref: "#/definitions/CtTypeValueInfo"
      structure:
        xml:
          name: "Structure"
        $ref: "#/definitions/CtTypeValueInfo"
      unit:
        xml:
          name: "Unit"
        $ref: "#/definitions/CtTypeValueInfo"
  CtBTM:
    type: "object"
    required:
    - "subscriberNumber"
    properties:
      subscriberNumber:
        type: "string"
        xml:
          name: "SubscriberNumber"
        minLength: 1
        maxLength: 2147483647
      equipmentType:
        type: "string"
        xml:
          name: "EquipmentType"
        enum:
        - "C"
        - "G"
      totalAmount:
        type: "number"
        xml:
          name: "TotalAmount"
  CtBTN:
    type: "object"
    properties:
      paymentAmount:
        type: "number"
        xml:
          name: "PaymentAmount"
      customerCode:
        type: "string"
        xml:
          name: "CustomerCode"
        minLength: 1
        maxLength: 2147483647
      tn:
        type: "string"
        xml:
          name: "TN"
        minLength: 1
        maxLength: 2147483647
  CtTradeInInfo:
    type: "object"
    properties:
      claimId:
        type: "string"
        xml:
          name: "ClaimId"
        minLength: 1
        maxLength: 2147483647
      exchangeType:
        type: "string"
        xml:
          name: "ExchangeType"
        minLength: 1
        maxLength: 2147483647
      installmentPlanID:
        type: "string"
        xml:
          name: "InstallmentPlanID"
        minLength: 1
        maxLength: 2147483647
      deviceClearingAgreement:
        type: "string"
        xml:
          name: "DeviceClearingAgreement"
        minLength: 1
        maxLength: 2147483647
      nonComplianceFee:
        type: "number"
        xml:
          name: "NonComplianceFee"
      payupAmount:
        type: "number"
        xml:
          name: "PayupAmount"
  UserProfileCollectionResponse:
    type: "object"
    required:
    - "errors"
    properties:
      profiles:
        type: "array"
        xml:
          name: "Profiles"
        items:
          $ref: "#/definitions/CtUserProfile"
        maxItems: 99
        minItems: 0
      metaInformation:
        xml:
          name: "MetaInformation"
        $ref: "#/definitions/CtMetaInformation"
      errors:
        xml:
          name: "Errors"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtErrorList"
    xml:
      name: "UserProfileCollectionResponse"
  MultiPart:
    type: "object"
    properties:
      contentDisposition:
        $ref: "#/definitions/ContentDisposition"
      entity:
        type: "object"
      headers:
        type: "object"
        additionalProperties:
          type: "array"
          items:
            type: "string"
      mediaType:
        $ref: "#/definitions/MediaType"
      messageBodyWorkers:
        $ref: "#/definitions/MessageBodyWorkers"
      parent:
        $ref: "#/definitions/MultiPart"
      providers:
        $ref: "#/definitions/Providers"
      bodyParts:
        type: "array"
        items:
          $ref: "#/definitions/BodyPart"
      parameterizedHeaders:
        type: "object"
        additionalProperties:
          type: "array"
          items:
            $ref: "#/definitions/ParameterizedHeader"
  QueueMetaDataCreateResponse:
    type: "object"
    required:
    - "errors"
    properties:
      queueMetaData:
        xml:
          name: "QueueMetaData"
        $ref: "#/definitions/CtQueueMetaData"
      errors:
        xml:
          name: "Errors"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtErrorList"
    xml:
      name: "QueueMetaDataCreateResponse"
  FraudNegativeRuleResponse:
    type: "object"
    required:
    - "errors"
    properties:
      fraudNegativeRule:
        xml:
          name: "FraudNegativeRule"
        $ref: "#/definitions/CtFraudNegativeRule"
      errors:
        xml:
          name: "Errors"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtErrorList"
    xml:
      name: "FraudNegativeRuleResponse"
  CtAccount:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "string"
        xml:
          name: "Id"
        pattern: "ACCOUNT_[0-9]{2}"
      accountSequenceNumber:
        type: "integer"
        xml:
          name: "AccountSequenceNumber"
      accountCategory:
        type: "string"
        xml:
          name: "AccountCategory"
        enum:
        - "WIRELINE_ACCOUNT"
        - "MOBILITY_ACCOUNT"
        - "UVERSE_ACCOUNT"
        - "DTV_ACCOUNT"
      accountSubCategory:
        type: "string"
        xml:
          name: "AccountSubCategory"
        enum:
        - "NEW"
        - "EXISTING"
        - "PREVIOUS"
        - "ANONYMOUS"
      paymentArrangement:
        type: "string"
        xml:
          name: "PaymentArrangement"
        enum:
        - "POSTPAID"
        - "PREPAY"
        - "PREPAID"
        - "POSTPAID_LIMITED"
      billingAccountNumber:
        type: "string"
        xml:
          name: "BillingAccountNumber"
        minLength: 1
        maxLength: 2147483647
      businessAccountName:
        type: "string"
        xml:
          name: "BusinessAccountName"
        minLength: 1
        maxLength: 2147483647
      primaryCTN:
        type: "string"
        xml:
          name: "PrimaryCTN"
        minLength: 1
        maxLength: 2147483647
      billingLanguagePreference:
        type: "string"
        xml:
          name: "BillingLanguagePreference"
        enum:
        - "ENGLISH"
        - "SPANISH"
        - "OTHER"
      billingAccountTelephoneNumber:
        type: "string"
        xml:
          name: "BillingAccountTelephoneNumber"
        minLength: 1
        maxLength: 2147483647
        pattern: "[0-9]{10}"
      billingInfo:
        xml:
          name: "BillingInfo"
        $ref: "#/definitions/CtBillingInfo"
      serviceLocationRef:
        type: "string"
        xml:
          name: "ServiceLocationRef"
        pattern: "ADDRESS_[0-9]{2}"
      anchorCTN:
        type: "string"
        xml:
          name: "AnchorCTN"
        minLength: 1
        maxLength: 2147483647
        pattern: "[0-9]{10}"
      targetCTN:
        type: "string"
        xml:
          name: "TargetCTN"
        minLength: 1
        maxLength: 2147483647
        pattern: "[0-9]{10}"
      creditCheck:
        xml:
          name: "CreditCheck"
        $ref: "#/definitions/CtCreditClassInfo"
      bankingPartner:
        xml:
          name: "BankingPartner"
        $ref: "#/definitions/CtBankingPartner"
      creditAlert:
        xml:
          name: "CreditAlert"
        $ref: "#/definitions/CtCreditAlert"
      billingDeliveryPreference:
        type: "string"
        xml:
          name: "BillingDeliveryPreference"
        enum:
        - "PAPERLESS"
        - "PAPER"
      eloa:
        xml:
          name: "ELOA"
        $ref: "#/definitions/CtELOA"
      bigData:
        type: "string"
        xml:
          name: "BigData"
        enum:
        - "I"
        - "D"
      gigaPowerIndicator:
        type: "string"
        xml:
          name: "GigaPowerIndicator"
        enum:
        - "Y"
        - "N"
      contractAcceptance:
        xml:
          name: "ContractAcceptance"
        $ref: "#/definitions/CtContractAcceptance"
      unifiedAccount:
        xml:
          name: "UnifiedAccount"
        $ref: "#/definitions/CtUnifiedAccount"
      liabilityType:
        type: "string"
        xml:
          name: "LiabilityType"
        minLength: 1
        maxLength: 2147483647
      delinquentAccount:
        type: "boolean"
        xml:
          name: "DelinquentAccount"
        default: false
      accountType:
        type: "string"
        xml:
          name: "AccountType"
        enum:
        - "F"
        - "A"
        - "M"
        - "COMMERCIAL"
        - "BUSINESS"
        - "EXCP_CTRL"
        - "GOVERNMENT"
        - "INDIVIDUAL"
        - "SPECIAL"
        - "INTERNAL"
        - "RESELLER"
        - "NATIONAL"
        - "SINGLE_NON_COMMERCIAL"
        - "N_A"
      accountSubType:
        type: "string"
        xml:
          name: "AccountSubType"
        enum:
        - "P"
        - "R"
        - "G"
        - "H"
        - "S"
        - "E"
        - "T"
        - "L"
        - "M"
        - "N"
        - "N_A"
      enterpriseType:
        type: "string"
        xml:
          name: "EnterpriseType"
        enum:
        - "IRU"
        - "CRU"
        - "CIRU"
        - "CON"
        - "GBS"
        - "SBA"
      b2BRef:
        type: "string"
        xml:
          name: "B2BRef"
        pattern: "B2B_[0-9]{2}"
      passCode:
        type: "string"
        xml:
          name: "PassCode"
        minLength: 1
        maxLength: 2147483647
      langId:
        type: "string"
        xml:
          name: "LangId"
        minLength: 1
        maxLength: 2147483647
      landLineNumber:
        type: "string"
        xml:
          name: "LandLineNumber"
        minLength: 1
        maxLength: 2147483647
        pattern: "[0-9]{10}"
      customerCode:
        type: "string"
        xml:
          name: "CustomerCode"
        minLength: 1
        maxLength: 2147483647
      consentToCC:
        type: "boolean"
        xml:
          name: "ConsentToCC"
        default: false
      market:
        type: "string"
        xml:
          name: "Market"
        minLength: 1
        maxLength: 2147483647
      subMarket:
        type: "string"
        xml:
          name: "SubMarket"
        minLength: 1
        maxLength: 2147483647
      priceCode:
        type: "string"
        xml:
          name: "PriceCode"
        minLength: 1
        maxLength: 2147483647
      spokenLanguagePreference:
        type: "string"
        xml:
          name: "SpokenLanguagePreference"
        enum:
        - "ARABIC"
        - "ENGLISH"
        - "CANTONESE"
        - "FILIPINO"
        - "JAPANESE"
        - "KOREAN"
        - "MANDARIN"
        - "POLISH"
        - "RUSSIAN"
        - "SPANISH"
        - "VIETNAMESE"
        - "OTHER"
      accountCrossmarketIndicator:
        type: "boolean"
        xml:
          name: "AccountCrossmarketIndicator"
        default: false
      provisioningSystems:
        xml:
          name: "ProvisioningSystems"
        $ref: "#/definitions/CtProvisioningSystems"
      existingAutoBillStatus:
        type: "string"
        xml:
          name: "ExistingAutoBillStatus"
        minLength: 1
        maxLength: 2147483647
      winBackIndicator:
        type: "boolean"
        xml:
          name: "WinBackIndicator"
        default: false
      thirdPartyCombinedBillIndicator:
        type: "string"
        xml:
          name: "ThirdPartyCombinedBillIndicator"
        enum:
        - "Y"
        - "N"
      additionalDetails:
        xml:
          name: "AdditionalDetails"
        $ref: "#/definitions/CtAdditionalDetails"
      isPaperlessBillingUpdated:
        type: "boolean"
        xml:
          name: "IsPaperlessBillingUpdated"
        default: false
      effectiveDate:
        type: "string"
        format: "date-time"
        xml:
          name: "EffectiveDate"
      futureDateCPToken:
        type: "string"
        xml:
          name: "FutureDateCPToken"
        minLength: 1
        maxLength: 2147483647
      negotiateConflictCustomer:
        xml:
          name: "NegotiateConflictCustomer"
        $ref: "#/definitions/CtNegotiateConflictCustomer"
      ebillReason:
        type: "string"
        enum:
        - "PROMOTION"
        - "VOLUNTARY"
      ctnvalidated:
        type: "boolean"
        default: false
  CtBankAccountDetails:
    type: "object"
    properties:
      accountHolderName:
        type: "string"
        xml:
          name: "AccountHolderName"
        minLength: 1
        maxLength: 2147483647
      accountNumber:
        type: "string"
        xml:
          name: "AccountNumber"
        minLength: 1
        maxLength: 2147483647
      routingNumber:
        type: "string"
        xml:
          name: "RoutingNumber"
        minLength: 1
        maxLength: 2147483647
      accountType:
        type: "string"
        xml:
          name: "AccountType"
        enum:
        - "CHECKING"
        - "SAVINGS"
  CtBulkUpdateRequest:
    type: "object"
    required:
    - "applicationName"
    - "channel"
    - "comment"
    - "currentLineStatus"
    - "currentLineSubStatus"
    - "lineStatus"
    - "lineSubStatus"
    - "losgId"
    properties:
      channel:
        type: "string"
      applicationName:
        type: "string"
      losgId:
        type: "string"
      lineStatus:
        type: "string"
        xml:
          name: "LineStatus"
      lineSubStatus:
        type: "string"
        xml:
          name: "LineSubStatus"
      comment:
        type: "string"
        xml:
          name: "Comment"
      currentLineStatus:
        type: "string"
        xml:
          name: "CurrentLineStatus"
      currentLineSubStatus:
        type: "string"
        xml:
          name: "CurrentLineSubStatus"
  CtConflictingServiceInfos:
    type: "object"
    properties:
      conflictingServiceInfo:
        type: "array"
        xml:
          name: "ConflictingServiceInfo"
        items:
          $ref: "#/definitions/CtConflictingServiceInfo"
        maxItems: 999
        minItems: 0
  CtOrganizationUnit:
    type: "object"
    required:
    - "organizationUnitName"
    properties:
      organizationUnitName:
        type: "string"
        xml:
          name: "OrganizationUnitName"
      taskLimit:
        type: "integer"
        format: "int32"
        xml:
          name: "TaskLimit"
      taskTimeOut:
        type: "integer"
        format: "int32"
        xml:
          name: "TaskTimeOut"
      globalTimeOut:
        type: "integer"
        format: "int32"
        xml:
          name: "GlobalTimeOut"
      childOrganizationUnits:
        type: "array"
        xml:
          name: "ChildOrganizationUnits"
        items:
          $ref: "#/definitions/CtOrganizationUnit"
        maxItems: 999
        minItems: 0
  Queue:
    type: "object"
    required:
    - "channel"
    - "countOfOrders"
    - "lineComboFlag"
    - "priority"
    - "queueInfo"
    - "queueName"
    - "shortDescription"
    properties:
      queueName:
        type: "string"
        xml:
          name: "QueueName"
      channel:
        type: "string"
        xml:
          name: "Channel"
      queueInfo:
        type: "string"
        xml:
          name: "QueueInfo"
      priority:
        type: "integer"
        format: "int32"
        xml:
          name: "Priority"
      shortDescription:
        type: "string"
        xml:
          name: "ShortDescription"
      lineComboFlag:
        type: "boolean"
        xml:
          name: "LineComboFlag"
        default: false
      slaParametersList:
        xml:
          name: "SlaParametersList"
        $ref: "#/definitions/SlaParametersList"
      ownershipDetails:
        type: "array"
        xml:
          name: "OwnershipDetails"
        items:
          $ref: "#/definitions/OwnershipDetails"
        maxItems: 999
        minItems: 0
      countOfOrders:
        type: "integer"
        format: "int32"
        xml:
          name: "CountOfOrders"
  OwnerDetails:
    type: "object"
    properties:
      owner:
        type: "array"
        xml:
          name: "Owner"
        items:
          $ref: "#/definitions/CtOwner"
        maxItems: 999
        minItems: 0
  AuditLogResponse:
    type: "object"
    properties:
      metaInformation:
        xml:
          name: "MetaInformation"
        $ref: "#/definitions/CtMetaInformation"
      auditLogs:
        type: "array"
        xml:
          name: "AuditLogs"
        items:
          $ref: "#/definitions/CtAuditLog"
        maxItems: 999
        minItems: 0
      xmlInfo:
        type: "array"
        xml:
          name: "XmlInfo"
        items:
          $ref: "#/definitions/CtXmlInfo"
        maxItems: 999
        minItems: 0
    xml:
      name: "AuditLogResponse"
  CtConsentDetails:
    type: "object"
    required:
    - "consentDetail"
    properties:
      consentDetail:
        type: "array"
        xml:
          name: "ConsentDetail"
        items:
          $ref: "#/definitions/CtConsentDetail"
        maxItems: 999
        minItems: 1
  EmailTemplate:
    type: "object"
    properties:
      templateId:
        type: "string"
        xml:
          name: "TemplateId"
      templateName:
        type: "string"
        xml:
          name: "TemplateName"
      templateDescription:
        type: "string"
        xml:
          name: "TemplateDescription"
      fromAddress:
        type: "string"
        xml:
          name: "FromAddress"
      subjectLine:
        type: "string"
        xml:
          name: "SubjectLine"
      to:
        type: "string"
        xml:
          name: "To"
      createdBy:
        type: "string"
        xml:
          name: "CreatedBy"
      lastModifiedBy:
        type: "string"
        xml:
          name: "LastModifiedBy"
      log:
        type: "string"
        xml:
          name: "Log"
      active:
        type: "boolean"
        xml:
          name: "Active"
        default: false
      channel:
        type: "string"
      smsContent:
        type: "string"
        xml:
          name: "SmsContent"
      number:
        type: "string"
        xml:
          name: "Number"
      notificationType:
        type: "string"
      microTemplates:
        xml:
          name: "MicroTemplates"
        $ref: "#/definitions/CTAssociatedContents"
      htmlcontent:
        type: "string"
  CtValidation:
    type: "object"
    properties:
      code:
        type: "string"
        xml:
          name: "Code"
        minLength: 1
        maxLength: 2147483647
      message:
        type: "string"
        xml:
          name: "Message"
        minLength: 1
        maxLength: 2147483647
  CtPreCalculatedTax:
    type: "object"
    properties:
      taxableCost:
        type: "number"
        xml:
          name: "TaxableCost"
      taxableMSRP:
        type: "number"
        xml:
          name: "TaxableMSRP"
      taxableUnitPrice:
        type: "number"
        xml:
          name: "TaxableUnitPrice"
      orderTaxAreaID:
        type: "integer"
        format: "int64"
        xml:
          name: "OrderTaxAreaID"
      shipFromTaxAreaID:
        type: "integer"
        format: "int64"
        xml:
          name: "ShipFromTaxAreaID"
      shipToTaxAreaID:
        type: "integer"
        format: "int64"
        xml:
          name: "ShipToTaxAreaID"
      exemptionID:
        type: "number"
        format: "double"
        xml:
          name: "ExemptionID"
  CtCallRecord:
    type: "object"
    required:
    - "marker"
    - "taskTime"
    properties:
      taskTime:
        type: "string"
        format: "date-time"
        xml:
          name: "TaskTime"
      marker:
        type: "string"
        xml:
          name: "Marker"
  CtAuthentication:
    type: "object"
    properties:
      dob:
        type: "string"
        xml:
          name: "DOB"
        minLength: 1
        maxLength: 2147483647
      driversLicense:
        xml:
          name: "DriversLicense"
        $ref: "#/definitions/CtDriversLicense"
      stateId:
        xml:
          name: "StateId"
        $ref: "#/definitions/CtStateId"
      ssn:
        type: "string"
        xml:
          name: "SSN"
        minLength: 1
        maxLength: 2147483647
      federalTaxId:
        type: "string"
        xml:
          name: "FederalTaxId"
        minLength: 1
        maxLength: 2147483647
      lastFourOfSSN:
        type: "string"
        xml:
          name: "LastFourOfSSN"
        minLength: 1
        maxLength: 2147483647
      securityVerification:
        xml:
          name: "SecurityVerification"
        $ref: "#/definitions/CtSecurityVerification"
      employerInfo:
        xml:
          name: "EmployerInfo"
        $ref: "#/definitions/CtEmployerInfo"
      gender:
        type: "string"
        xml:
          name: "Gender"
        enum:
        - "MALE"
        - "FEMALE"
        - "UNSPECIFIED"
      motherMaidenName:
        type: "string"
        xml:
          name: "MotherMaidenName"
        minLength: 1
        maxLength: 2147483647
      ssnrefusedIndicator:
        type: "boolean"
        default: false
  CtCondition:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "string"
        xml:
          name: "ID"
      field:
        type: "string"
        xml:
          name: "Field"
      operator:
        type: "string"
        xml:
          name: "Operator"
        minLength: 1
        maxLength: 2147483647
      value:
        type: "string"
        xml:
          name: "Value"
      isActive:
        type: "integer"
        format: "int32"
        xml:
          name: "IsActive"
      fileName:
        type: "string"
        xml:
          name: "FileName"
      type:
        type: "string"
        xml:
          name: "Type"
        enum:
        - "QUALIFICATION"
        - "PARAMETER"
      sequence:
        type: "integer"
        format: "int32"
        xml:
          name: "Sequence"
  CtNameList:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "array"
        xml:
          name: "Name"
        items:
          $ref: "#/definitions/CtName"
        maxItems: 999
        minItems: 1
  UpdateOrderStatusRequest:
    type: "object"
    required:
    - "errors"
    properties:
      orderId:
        type: "string"
        xml:
          name: "OrderId"
      conversationId:
        type: "string"
        xml:
          name: "ConversationId"
      status:
        type: "string"
        xml:
          name: "Status"
      subStatus:
        type: "string"
        xml:
          name: "SubStatus"
      queueType:
        type: "string"
        xml:
          name: "QueueType"
      queueSubType:
        type: "string"
        xml:
          name: "QueueSubType"
      updatedBy:
        type: "string"
        xml:
          name: "UpdatedBy"
      notes:
        type: "string"
        xml:
          name: "Notes"
      lastModifiedDateTime:
        type: "string"
        format: "date-time"
        xml:
          name: "LastModifiedDateTime"
      errors:
        xml:
          name: "Errors"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtErrorList"
    xml:
      name: "UpdateOrderStatusRequest"
  CtConsentDetail:
    type: "object"
    properties:
      consentType:
        type: "string"
        xml:
          name: "ConsentType"
        enum:
        - "TEXT"
        - "VOICE"
        - "BOTH"
      consentCategory:
        type: "string"
        xml:
          name: "ConsentCategory"
        minLength: 1
        maxLength: 2147483647
      consentSelection:
        type: "string"
        xml:
          name: "ConsentSelection"
        enum:
        - "OPT_IN"
        - "OPT_OUT"
      isConsentUpdatedInCAPM:
        type: "string"
        xml:
          name: "IsConsentUpdatedInCAPM"
        enum:
        - "Y"
        - "N"
  CtCallDetail:
    type: "object"
    properties:
      accountValidated:
        type: "string"
        xml:
          name: "AccountValidated"
      callNote:
        type: "string"
        xml:
          name: "CallNote"
      callStatus:
        type: "string"
        xml:
          name: "CallStatus"
      contactReason:
        type: "string"
        xml:
          name: "ContactReason"
      contactResolution:
        type: "string"
        xml:
          name: "ContactResolution"
      contactType:
        type: "string"
        xml:
          name: "ContactType"
      customerName:
        type: "string"
        xml:
          name: "CustomerName"
      customerOrderNumber:
        type: "string"
        xml:
          name: "CustomerOrderNumber"
      customerPlacedOrder:
        type: "boolean"
        xml:
          name: "CustomerPlacedOrder"
        default: false
      cutomerOrderType:
        type: "string"
        xml:
          name: "CutomerOrderType"
      isLocked:
        type: "boolean"
        xml:
          name: "IsLocked"
        default: false
      isIVR:
        type: "boolean"
        xml:
          name: "IsIVR"
        default: false
      isUnmasked:
        type: "boolean"
        xml:
          name: "IsUnmasked"
        default: false
      noteType:
        type: "string"
        xml:
          name: "NoteType"
      program:
        type: "string"
        xml:
          name: "Program"
      agentId:
        type: "string"
        xml:
          name: "AgentId"
      salesChannel:
        type: "string"
        xml:
          name: "SalesChannel"
      validationField:
        type: "string"
        xml:
          name: "ValidationField"
      websiteError:
        type: "string"
        xml:
          name: "WebsiteError"
      callStartTime:
        type: "string"
        format: "date-time"
        xml:
          name: "CallStartTime"
      callEndTime:
        type: "string"
        format: "date-time"
        xml:
          name: "CallEndTime"
      callbackQueue:
        type: "string"
        xml:
          name: "CallbackQueue"
      callendReason:
        type: "string"
        xml:
          name: "CallendReason"
      followupDate:
        type: "string"
        xml:
          name: "FollowupDate"
      callbackNumber:
        type: "string"
        xml:
          name: "CallbackNumber"
      localTimezone:
        type: "string"
        xml:
          name: "LocalTimezone"
      callbackPreference:
        type: "string"
        xml:
          name: "CallbackPreference"
      markerId:
        type: "string"
        xml:
          name: "MarkerId"
      callId:
        type: "string"
        xml:
          name: "CallId"
      sendSurveyEmail:
        type: "boolean"
        xml:
          name: "SendSurveyEmail"
        default: false
      alternativeEmailID:
        type: "string"
        xml:
          name: "AlternativeEmailID"
      oceorderNumber:
        type: "string"
  ShippingCodeList:
    type: "object"
    required:
    - "shippingCode"
    properties:
      shippingCode:
        type: "string"
        xml:
          name: "ShippingCode"
  SearchMetaData:
    type: "object"
    required:
    - "accountCategoryInReq"
    - "accountCategoryInRes"
    - "billingInReq"
    - "billingInRes"
    - "contractLengthInReq"
    - "contractLengthInRes"
    - "contractTypeInReq"
    - "contractTypeInRes"
    - "enterpriseTypeInReq"
    - "enterpriseTypeInRes"
    - "fulfillmentMethodInReq"
    - "fulfillmentMethodInRes"
    - "lineActionInReq"
    - "lineActionInRes"
    - "orderSourceInReq"
    - "orderSourceInRes"
    - "productCategoryInReq"
    - "productCategoryInRes"
    - "queueNameInReq"
    - "queueNameInRes"
    - "statusInReq"
    - "statusInRes"
    - "subStatusInReq"
    - "subStatusInRes"
    properties:
      orderSource:
        type: "array"
        items:
          type: "string"
      orderSourceInRes:
        type: "string"
      orderSourceInReq:
        type: "string"
      enterpriseType:
        type: "array"
        items:
          type: "string"
      enterpriseTypeInReq:
        type: "string"
      enterpriseTypeInRes:
        type: "string"
      lineAction:
        type: "array"
        items:
          type: "string"
      lineActionInReq:
        type: "string"
      lineActionInRes:
        type: "string"
      productCategory:
        type: "array"
        items:
          type: "string"
      productCategoryInReq:
        type: "string"
      productCategoryInRes:
        type: "string"
      contractType:
        type: "array"
        items:
          type: "string"
      contractTypeInReq:
        type: "string"
      contractTypeInRes:
        type: "string"
      contractLength:
        type: "array"
        items:
          type: "string"
      contractLengthInReq:
        type: "string"
      contractLengthInRes:
        type: "string"
      accountCategory:
        type: "array"
        items:
          type: "string"
      accountCategoryInReq:
        type: "string"
      accountCategoryInRes:
        type: "string"
      billing:
        type: "array"
        items:
          type: "string"
      billingInReq:
        type: "string"
      billingInRes:
        type: "string"
      status:
        type: "array"
        items:
          type: "string"
      statusInReq:
        type: "string"
      statusInRes:
        type: "string"
      subStatus:
        type: "array"
        items:
          type: "string"
      subStatusInReq:
        type: "string"
      subStatusInRes:
        type: "string"
      fulfillmentMethod:
        type: "array"
        items:
          type: "string"
      fulfillmentMethodInReq:
        type: "string"
      fulfillmentMethodInRes:
        type: "string"
      queueName:
        type: "array"
        items:
          type: "string"
      queueNameInReq:
        type: "string"
      queueNameInRes:
        type: "string"
      contactType:
        type: "array"
        items:
          type: "string"
      salesChannel:
        type: "array"
        items:
          type: "string"
      orderType:
        type: "array"
        items:
          type: "string"
      websiteError:
        type: "array"
        items:
          type: "string"
      program:
        type: "array"
        items:
          type: "string"
      escalationType:
        type: "array"
        items:
          type: "string"
      escalationReason:
        type: "array"
        items:
          type: "string"
      callbackPreference:
        type: "array"
        items:
          type: "string"
      stakeholder:
        type: "array"
        items:
          type: "string"
      localTimezone:
        type: "array"
        items:
          type: "string"
      contactReason:
        type: "array"
        items:
          type: "string"
      contactResolution:
        type: "array"
        items:
          type: "string"
      escalationTeam:
        type: "array"
        xml:
          name: "EscalationTeam"
        items:
          $ref: "#/definitions/CtEscalationTeam"
      callbackQueue:
        type: "array"
        xml:
          name: "CallbackQueue"
        items:
          type: "string"
      callEndReason:
        type: "array"
        xml:
          name: "CallEndReason"
        items:
          type: "string"
      outboundCallPreference:
        type: "array"
        xml:
          name: "OutboundCallPreference"
        items:
          type: "string"
    xml:
      name: "searchMetaData"
  CtSharedPlanCharacteristics:
    type: "object"
    properties:
      planType:
        type: "string"
        xml:
          name: "PlanType"
        minLength: 1
        maxLength: 2147483647
      familyGroupId:
        type: "string"
        xml:
          name: "FamilyGroupId"
        minLength: 1
        maxLength: 2147483647
      dataGroupId:
        type: "string"
        xml:
          name: "DataGroupId"
        minLength: 1
        maxLength: 2147483647
      groupReferenceCode:
        type: "string"
        xml:
          name: "GroupReferenceCode"
        minLength: 1
        maxLength: 2147483647
      primarySubscriberNumber:
        type: "string"
        xml:
          name: "PrimarySubscriberNumber"
        minLength: 1
        maxLength: 2147483647
        pattern: "[0-9]{10}"
  FetchEmailTemplate:
    type: "object"
    required:
    - "errors"
    - "markerId"
    - "orderID"
    properties:
      orderID:
        type: "string"
      markerId:
        type: "string"
      emailTo:
        type: "string"
      templateName:
        type: "string"
      combo:
        type: "string"
      actualEmailContent:
        type: "string"
      emailSubject:
        type: "string"
      emailFrom:
        type: "string"
      mailBox:
        type: "string"
      errors:
        xml:
          name: "Errors"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtErrorList"
    xml:
      name: "FetchEmailTemplate"
  Survey:
    type: "object"
    properties:
      qa:
        type: "array"
        xml:
          name: "QA"
        items:
          $ref: "#/definitions/CtQA"
        maxItems: 999
        minItems: 0
  Template:
    type: "object"
    required:
    - "htmlContent"
    - "sequence"
    - "templateId"
    - "templateName"
    - "textualContent"
    properties:
      htmlContent:
        type: "string"
        xml:
          name: "HtmlContent"
      sequence:
        type: "string"
        xml:
          name: "Sequence"
      templateId:
        type: "string"
        xml:
          name: "TemplateId"
      templateName:
        type: "string"
        xml:
          name: "TemplateName"
      textualContent:
        type: "string"
        xml:
          name: "TextualContent"
  CtUpgradeInfo:
    type: "object"
    properties:
      relationship:
        type: "string"
        xml:
          name: "Relationship"
        enum:
        - "DONOR"
        - "RECIPIENT"
      relatedMobileNumber:
        type: "string"
        xml:
          name: "RelatedMobileNumber"
        minLength: 1
        maxLength: 2147483647
  CtBulkUpdateResponse:
    type: "object"
    required:
    - "applicationName"
    - "channel"
    - "customerOrderNumber"
    - "losgId"
    - "response"
    properties:
      customerOrderNumber:
        type: "string"
        xml:
          name: "CustomerOrderNumber"
      channel:
        type: "string"
      applicationName:
        type: "string"
      losgId:
        type: "string"
      response:
        type: "string"
        xml:
          name: "Response"
  EmailNotificationResponse:
    type: "object"
    required:
    - "errors"
    properties:
      templateId:
        type: "string"
        xml:
          name: "TemplateId"
      notes:
        type: "string"
        xml:
          name: "Notes"
      errors:
        xml:
          name: "Errors"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtErrorList"
    xml:
      name: "EmailNotificationResponse"
  CtOperationInfo:
    type: "object"
    required:
    - "operationName"
    properties:
      operationName:
        type: "array"
        xml:
          name: "OperationName"
        items:
          type: "string"
        maxItems: 999
        minItems: 1
  CtFuseError:
    type: "object"
    properties:
      errorCode:
        type: "string"
      errorDescription:
        type: "string"
  CtPartner:
    type: "object"
    required:
    - "changedBy"
    - "partnerName"
    properties:
      partnerID:
        type: "string"
        xml:
          name: "PartnerID"
      partnerName:
        type: "string"
        xml:
          name: "PartnerName"
      changedBy:
        type: "string"
        xml:
          name: "ChangedBy"
      dateChanged:
        type: "string"
        format: "date-time"
        xml:
          name: "DateChanged"
      active:
        type: "boolean"
        xml:
          name: "Active"
        default: false
  Error:
    type: "object"
    properties:
      errorCode:
        type: "object"
      errorDescription:
        type: "object"
  CtPhoneNumberExtension:
    type: "object"
    required:
    - "phoneNumber"
    properties:
      phoneNumber:
        type: "string"
        xml:
          name: "PhoneNumber"
        minLength: 1
        maxLength: 2147483647
        pattern: "[0-9]{10}"
      extension:
        type: "string"
        xml:
          name: "Extension"
        minLength: 1
        maxLength: 2147483647
      contactPhoneType:
        type: "string"
        xml:
          name: "ContactPhoneType"
        enum:
        - "HOME_PHONE"
        - "WORK_PHONE"
        - "CELL_PHONE"
        - "OTHER"
      consentDetails:
        xml:
          name: "ConsentDetails"
        $ref: "#/definitions/CtConsentDetails"
  C2SOrderStatusMappingResponse:
    type: "object"
    required:
    - "errors"
    properties:
      c2SOrderStatusMapping:
        type: "array"
        xml:
          name: "C2SOrderStatusMapping"
        items:
          $ref: "#/definitions/CtC2SOrderStatusMapping"
        maxItems: 999
        minItems: 0
      notes:
        type: "string"
        xml:
          name: "Notes"
      errors:
        xml:
          name: "Errors"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtErrorList"
    xml:
      name: "C2SOrderStatusMappingResponse"
  CtConflictLandlordInfo:
    type: "object"
    properties:
      contact:
        xml:
          name: "Contact"
        $ref: "#/definitions/CtNegotiateConflictContact"
  CtActivationInfo:
    type: "object"
    properties:
      rowId:
        type: "string"
        xml:
          name: "RowId"
        minLength: 1
        maxLength: 2147483647
      mobileNumber:
        type: "string"
        xml:
          name: "MobileNumber"
        minLength: 1
        maxLength: 2147483647
        pattern: "[0-9]{10}"
      activationStatus:
        type: "string"
        xml:
          name: "ActivationStatus"
        minLength: 1
        maxLength: 2147483647
  BulkProcessResponse:
    type: "object"
    properties:
      orders:
        xml:
          name: "Orders"
        $ref: "#/definitions/Orders"
      errors:
        xml:
          name: "Errors"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtErrorList"
    xml:
      name: "BulkProcessResponse"
  CtPaymentToken:
    type: "object"
    required:
    - "paymentToken"
    properties:
      paymentAmount:
        type: "number"
        xml:
          name: "PaymentAmount"
      paymentToken:
        type: "string"
        xml:
          name: "PaymentToken"
        minLength: 1
        maxLength: 2147483647
  CtOrderCreationRequest:
    type: "object"
    required:
    - "fraudCheck"
    - "savePhoenixOrderID"
    properties:
      id:
        type: "integer"
        format: "int32"
        xml:
          name: "ID"
      companyName:
        type: "string"
        xml:
          name: "CompanyName"
      manager:
        type: "string"
        xml:
          name: "Manager"
      agentID:
        type: "string"
        xml:
          name: "AgentID"
      ctn:
        type: "string"
        xml:
          name: "CTN"
      tcmid:
        type: "string"
        xml:
          name: "TCMID"
      firstName:
        type: "string"
        xml:
          name: "FirstName"
      lastName:
        type: "string"
        xml:
          name: "LastName"
      ban:
        type: "string"
        xml:
          name: "BAN"
      fan:
        type: "string"
        xml:
          name: "FAN"
      emailAddress:
        type: "string"
        xml:
          name: "EmailAddress"
      phoenixOrderNumber:
        type: "string"
        xml:
          name: "PhoenixOrderNumber"
      fraudCheck:
        type: "boolean"
        xml:
          name: "FraudCheck"
        default: false
      savePhoenixOrderID:
        type: "boolean"
        xml:
          name: "SavePhoenixOrderID"
        default: false
      callID:
        type: "string"
        xml:
          name: "CallID"
      fraudCheckResults:
        xml:
          name: "FraudCheckResults"
        $ref: "#/definitions/FraudCheckResults"
  CtOrderLog:
    type: "object"
    required:
    - "comment"
    - "logDate"
    - "updatedBy"
    properties:
      updatedBy:
        type: "string"
        xml:
          name: "UpdatedBy"
      comment:
        type: "string"
        xml:
          name: "Comment"
      logDate:
        type: "string"
        format: "date-time"
        xml:
          name: "LogDate"
  EmailContentCollectionResponse:
    type: "object"
    required:
    - "errors"
    properties:
      emailContent:
        type: "array"
        xml:
          name: "EmailContent"
        items:
          $ref: "#/definitions/CtEmailContent"
        maxItems: 99
        minItems: 0
      templateResponse:
        type: "array"
        xml:
          name: "TemplateResponse"
        items:
          $ref: "#/definitions/CtEmailContent"
        maxItems: 99
        minItems: 0
      errors:
        xml:
          name: "Errors"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtErrorList"
      notes:
        type: "string"
        xml:
          name: "Notes"
    xml:
      name: "EmailContentCollectionResponse"
  MediaType:
    type: "object"
    properties:
      type:
        type: "string"
      subtype:
        type: "string"
      parameters:
        type: "object"
        additionalProperties:
          type: "string"
      wildcardType:
        type: "boolean"
        default: false
      wildcardSubtype:
        type: "boolean"
        default: false
  CtDayAndTime:
    type: "object"
    properties:
      anyDayOfTheWeek:
        type: "string"
        xml:
          name: "AnyDayOfTheWeek"
      monday:
        type: "string"
        xml:
          name: "Monday"
      tuesday:
        type: "string"
        xml:
          name: "Tuesday"
      wednesday:
        type: "string"
        xml:
          name: "Wednesday"
      thursday:
        type: "string"
        xml:
          name: "Thursday"
      friday:
        type: "string"
        xml:
          name: "Friday"
      saturday:
        type: "string"
        xml:
          name: "Saturday"
      sunday:
        type: "string"
        xml:
          name: "Sunday"
  CtUpdateInfos:
    type: "object"
    properties:
      updateInfo:
        type: "array"
        xml:
          name: "UpdateInfo"
        items:
          $ref: "#/definitions/CtUpdateInfo"
        maxItems: 999
        minItems: 0
  CTAssociatedContents:
    type: "object"
    properties:
      emailContent:
        type: "array"
        xml:
          name: "EmailContent"
        items:
          $ref: "#/definitions/CtEmailContent"
        maxItems: 99
        minItems: 0
  CtDateLimit:
    type: "object"
    required:
    - "count"
    - "recent"
    - "value"
    properties:
      count:
        type: "integer"
        format: "int32"
        xml:
          name: "Count"
      value:
        type: "string"
        xml:
          name: "Value"
      recent:
        type: "integer"
        format: "int32"
        xml:
          name: "Recent"
  SlaDetailsList:
    type: "object"
    required:
    - "slaDetail"
    properties:
      slaDetail:
        type: "array"
        xml:
          name: "SlaDetail"
        items:
          $ref: "#/definitions/CtSlaDetail"
        maxItems: 999
        minItems: 1
  CtIPTVLineItemChars:
    type: "object"
  EmailDynamicDataResponse:
    type: "object"
    properties:
      emailDynamicDataRequest:
        type: "array"
        items:
          $ref: "#/definitions/EmailDynamicDataRequest"
        maxItems: 999
        minItems: 0
      metaInformation:
        xml:
          name: "MetaInformation"
        $ref: "#/definitions/CtMetaInformation"
      notes:
        type: "string"
        xml:
          name: "Notes"
      errors:
        xml:
          name: "Errors"
        $ref: "#/definitions/CtErrorList"
    xml:
      name: "EmailDynamicDataResponse"
  BulkUpdateRequest:
    type: "object"
    required:
    - "fromDate"
    - "jobId"
    - "requestId"
    - "toDate"
    - "updateType"
    properties:
      jobId:
        type: "string"
        xml:
          name: "JobId"
      requestId:
        type: "string"
        xml:
          name: "RequestId"
      updateType:
        type: "string"
      noOfDays:
        type: "integer"
        format: "int32"
      fromDate:
        type: "string"
      toDate:
        type: "string"
      service:
        type: "string"
      status:
        type: "string"
      followUpDate:
        type: "string"
      preference:
        type: "string"
    xml:
      name: "BulkUpdateRequest"
  CtActualSchedule:
    type: "object"
    properties:
      selectedAppointmentDate:
        type: "string"
        xml:
          name: "SelectedAppointmentDate"
        minLength: 1
        maxLength: 2147483647
        pattern: "[0-9]{4}-[0-9]{2}-[0-9]{2}"
      selectedAppointmentTime:
        type: "string"
        xml:
          name: "SelectedAppointmentTime"
        minLength: 1
        maxLength: 2147483647
      startTime:
        type: "string"
        xml:
          name: "StartTime"
        minLength: 1
        maxLength: 2147483647
      endTime:
        type: "string"
        xml:
          name: "EndTime"
        minLength: 1
        maxLength: 2147483647
  C2SOrderStatusMappingRequest:
    type: "object"
    properties:
      c2SOrderStatusMapping:
        xml:
          name: "C2SOrderStatusMapping"
        $ref: "#/definitions/CtC2SOrderStatusMapping"
    xml:
      name: "C2SOrderStatusMappingRequest"
  EmailTriggerResponse:
    type: "object"
    properties:
      emailTriggerRequest:
        type: "array"
        items:
          $ref: "#/definitions/EmailTriggerRequest"
        maxItems: 999
        minItems: 0
      metaInformation:
        xml:
          name: "MetaInformation"
        $ref: "#/definitions/CtMetaInformation"
      notes:
        type: "string"
        xml:
          name: "Notes"
      errors:
        xml:
          name: "Errors"
        $ref: "#/definitions/CtErrorList"
    xml:
      name: "EmailTriggerResponse"
  Notification:
    type: "object"
    required:
    - "channel"
    - "innerTemplateId"
    - "innerTemplateText"
    - "notificationMethod"
    - "outerTemplateId"
    - "outerTemplateText"
    - "version"
    properties:
      outerTemplateId:
        type: "string"
        xml:
          name: "OuterTemplateId"
      innerTemplateText:
        type: "string"
        xml:
          name: "InnerTemplateText"
      innerTemplateId:
        type: "string"
        xml:
          name: "InnerTemplateId"
      outerTemplateText:
        type: "string"
        xml:
          name: "OuterTemplateText"
      notificationMethod:
        type: "string"
        xml:
          name: "NotificationMethod"
      recipients:
        xml:
          name: "Recipients"
        $ref: "#/definitions/CtRecipients"
      attributes:
        type: "array"
        xml:
          name: "Attributes"
        items:
          $ref: "#/definitions/CtDynamicAttribute"
        maxItems: 99
        minItems: 0
      version:
        type: "string"
        xml:
          name: "Version"
      channel:
        type: "string"
        xml:
          name: "Channel"
    xml:
      name: "Notification"
  CtQueueType:
    type: "object"
    required:
    - "age"
    - "count"
    - "type"
    properties:
      type:
        type: "string"
        xml:
          name: "Type"
      count:
        type: "string"
        xml:
          name: "Count"
      age:
        xml:
          name: "Age"
        $ref: "#/definitions/CtAge"
  CtPartnerInfo:
    type: "object"
    required:
    - "partner"
    - "percentage"
    properties:
      partner:
        xml:
          name: "Partner"
        $ref: "#/definitions/CtPartner"
      percentage:
        type: "integer"
        xml:
          name: "Percentage"
  CtPromotion:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "string"
        xml:
          name: "Id"
        pattern: "PROMOTION_[0-9]{2}"
      promotionCode:
        type: "string"
        xml:
          name: "PromotionCode"
        minLength: 1
        maxLength: 2147483647
      promotionId:
        type: "string"
        xml:
          name: "PromotionId"
        minLength: 1
        maxLength: 2147483647
      displayLevel:
        type: "string"
        xml:
          name: "DisplayLevel"
        enum:
        - "ORDER"
        - "LOSG"
        - "ITEM"
      displaySequence:
        type: "integer"
        xml:
          name: "DisplaySequence"
      baseOfferId:
        type: "string"
        xml:
          name: "BaseOfferId"
        minLength: 1
        maxLength: 2147483647
      parentPricePlanCode:
        type: "string"
        xml:
          name: "ParentPricePlanCode"
        minLength: 1
        maxLength: 2147483647
      componentConfiguration:
        type: "array"
        xml:
          name: "ComponentConfiguration"
        items:
          $ref: "#/definitions/CtComponentConfiguration"
        maxItems: 999
        minItems: 0
      promotionName:
        type: "string"
        xml:
          name: "PromotionName"
        minLength: 1
        maxLength: 2147483647
      amount:
        type: "number"
        xml:
          name: "Amount"
      percent:
        type: "number"
        format: "double"
        xml:
          name: "Percent"
      fixedAmount:
        type: "number"
        xml:
          name: "FixedAmount"
      duration:
        type: "integer"
        xml:
          name: "Duration"
      promotionType:
        type: "string"
        xml:
          name: "PromotionType"
        enum:
        - "OFFER"
        - "REWARD"
        - "PROMOTION"
      promotionCycle:
        type: "string"
        xml:
          name: "PromotionCycle"
        enum:
        - "MONTHLY"
        - "QUATERLY"
        - "WEEKLY"
        - "ONETIME"
      unitOfMeasurement:
        type: "string"
        xml:
          name: "UnitOfMeasurement"
        enum:
        - "FLATOFF"
        - "PERCENTAGE"
      effectiveInDays:
        type: "integer"
        xml:
          name: "EffectiveInDays"
        minimum: 0.0
      isComplexDiscount:
        type: "boolean"
        xml:
          name: "IsComplexDiscount"
        default: false
      couponCode:
        type: "string"
        xml:
          name: "CouponCode"
        minLength: 1
        maxLength: 2147483647
      additionalDetails:
        xml:
          name: "AdditionalDetails"
        $ref: "#/definitions/CtAdditionalDetails"
  CtIPTVLOSChars:
    type: "object"
  CtLastPaymentMethod:
    type: "object"
    properties:
      customerAgreementVersion:
        type: "string"
        xml:
          name: "CustomerAgreementVersion"
        minLength: 1
        maxLength: 2147483647
      totalAmount:
        type: "number"
        xml:
          name: "TotalAmount"
      lpmlast4Digits:
        type: "string"
      lpmpaymentType:
        type: "string"
        enum:
        - "ACH"
        - "CREDIT_CARD"
      lpmpaymentTypeName:
        type: "string"
        enum:
        - "AMERICAN_EXPRESS"
        - "DISCOVER"
        - "MASTERCARD"
        - "VISA"
        - "DINER_S_CLUB"
        - "OPTIMA"
        - "UNKNOWN"
        - "CHECKING"
        - "SAVINGS"
      lpmreferenceNumber:
        type: "string"
  SlaParametersList:
    type: "object"
    required:
    - "slaParameters"
    properties:
      slaParameters:
        type: "array"
        xml:
          name: "SlaParameters"
        items:
          $ref: "#/definitions/CtSlaParameters"
        maxItems: 999
        minItems: 1
  EmailContentResponse:
    type: "object"
    properties:
      emailContent:
        type: "array"
        xml:
          name: "EmailContent"
        items:
          $ref: "#/definitions/CtEmailContent"
        maxItems: 999
        minItems: 0
      metaInformation:
        xml:
          name: "MetaInformation"
        $ref: "#/definitions/CtMetaInformation"
      notes:
        type: "string"
        xml:
          name: "Notes"
      errors:
        xml:
          name: "Errors"
        $ref: "#/definitions/CtErrorList"
    xml:
      name: "EmailContentResponse"
  CtSecurityVerification:
    type: "object"
    properties:
      pin:
        type: "string"
        xml:
          name: "Pin"
        minLength: 1
        maxLength: 2147483647
      securityQuestion:
        type: "string"
        xml:
          name: "SecurityQuestion"
        minLength: 1
        maxLength: 2147483647
      securityAnswer:
        type: "string"
        xml:
          name: "SecurityAnswer"
        minLength: 1
        maxLength: 2147483647
      federalTaxId:
        type: "string"
        xml:
          name: "FederalTaxId"
        minLength: 1
        maxLength: 2147483647
  QueueTypes:
    type: "object"
    required:
    - "currentDateTime"
    properties:
      queueTypes:
        type: "array"
        xml:
          name: "QueueTypes"
        items:
          $ref: "#/definitions/CtQueueType"
        maxItems: 99
        minItems: 0
      currentDateTime:
        type: "string"
        format: "date-time"
        xml:
          name: "CurrentDateTime"
    xml:
      name: "QueueTypes"
  LookupResponse:
    type: "object"
    properties:
      lookupResult:
        type: "array"
        items:
          $ref: "#/definitions/LookupResult"
        maxItems: 999
        minItems: 0
      error:
        $ref: "#/definitions/Error"
    xml:
      name: "lookupResponse"
  BulkFeedActivatationResponse:
    type: "object"
    properties:
      requestId:
        type: "string"
        xml:
          name: "RequestId"
        minLength: 1
        maxLength: 2147483647
      feedType:
        type: "string"
        xml:
          name: "FeedType"
        enum:
        - "YODA_ACTIVATION_FEED"
        - "GDDN_ATLAS_FEED"
        - "SHIP_TRACKER_FEED"
        - "BULK_STATUS_UPDATE"
      feedResponse:
        type: "array"
        xml:
          name: "FeedResponse"
        items:
          $ref: "#/definitions/CtFeedResponse"
        maxItems: 999
        minItems: 0
      bulkUpdateResponse:
        type: "array"
        xml:
          name: "BulkUpdateResponse"
        items:
          $ref: "#/definitions/CtBulkUpdateResponse"
        maxItems: 999
        minItems: 0
    xml:
      name: "BulkFeedActivatationResponse"
  CtMoveInfo:
    type: "object"
    properties:
      isFullyAuthenticated:
        type: "boolean"
        xml:
          name: "IsFullyAuthenticated"
        default: false
      fromServiceAddressRef:
        type: "string"
        xml:
          name: "FromServiceAddressRef"
        pattern: "ADDRESS_[0-9]{2}"
      fromBillingAddressRef:
        type: "string"
        xml:
          name: "FromBillingAddressRef"
        pattern: "ADDRESS_[0-9]{2}"
      fromTelephoneNumber:
        type: "string"
        xml:
          name: "FromTelephoneNumber"
        minLength: 1
        maxLength: 2147483647
        pattern: "[0-9]{10}"
      disconnectDate:
        type: "string"
        format: "date-time"
        xml:
          name: "DisconnectDate"
      actualDisconnectDate:
        type: "string"
        format: "date-time"
        xml:
          name: "ActualDisconnectDate"
  TemplateResponse:
    type: "object"
    required:
    - "errors"
    properties:
      errors:
        xml:
          name: "Errors"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtErrorList"
      metaInformation:
        xml:
          name: "MetaInformation"
        $ref: "#/definitions/CtMetaInformation"
      templates:
        type: "array"
        xml:
          name: "Templates"
        items:
          $ref: "#/definitions/CtTemplates"
        maxItems: 999
        minItems: 0
    xml:
      name: "TemplateResponse"
  CtSmartVideoSource:
    type: "object"
    properties:
      id:
        type: "string"
        xml:
          name: "ID"
      startDateTime:
        type: "string"
        xml:
          name: "StartDateTime"
      endDateTime:
        type: "string"
        xml:
          name: "EndDateTime"
      smartVideoSource:
        type: "string"
        xml:
          name: "SmartVideoSource"
      createdDate:
        type: "string"
        format: "date-time"
        xml:
          name: "CreatedDate"
      lastUpdatedBy:
        type: "string"
        xml:
          name: "LastUpdatedBy"
      lastUpdatedDate:
        type: "string"
        format: "date-time"
        xml:
          name: "LastUpdatedDate"
  CtPayment:
    type: "object"
    properties:
      amount:
        type: "number"
        xml:
          name: "Amount"
      currencyType:
        type: "string"
        xml:
          name: "CurrencyType"
        enum:
        - "USD"
      noOfInstallment:
        type: "integer"
        xml:
          name: "NoOfInstallment"
        minimum: 0.0
      paymentOptionRef:
        type: "string"
        xml:
          name: "PaymentOptionRef"
        pattern: "PAYMENT_OPTION_[0-9]{2}"
  CtElementValues:
    type: "object"
    properties:
      elementValues:
        type: "string"
        xml:
          name: "ElementValues"
      fromDate:
        type: "string"
        format: "date-time"
        xml:
          name: "FromDate"
      toDate:
        type: "string"
        format: "date-time"
        xml:
          name: "ToDate"
      fromTime:
        type: "string"
        format: "date-time"
        xml:
          name: "FromTime"
      toTime:
        type: "string"
        format: "date-time"
        xml:
          name: "ToTime"
      fileName:
        type: "string"
        xml:
          name: "FileName"
  CallerValidateRequest:
    type: "object"
    properties:
      billingAccountNumber:
        type: "string"
        xml:
          name: "BillingAccountNumber"
      passcode:
        type: "string"
        xml:
          name: "Passcode"
      ctn:
        type: "string"
        xml:
          name: "CTN"
      imei:
        type: "string"
        xml:
          name: "IMEI"
      validationType:
        type: "string"
        xml:
          name: "ValidationType"
    xml:
      name: "CallerValidateRequest"
  CtXmlInfo:
    type: "object"
    properties:
      auditLogId:
        type: "string"
        xml:
          name: "AuditLogId"
      xmlData:
        type: "string"
        xml:
          name: "XmlData"
  StatusesObject:
    type: "object"
    properties:
      metaInformation:
        $ref: "#/definitions/MetaInformation"
      statuses:
        type: "array"
        items:
          $ref: "#/definitions/Statuses"
        maxItems: 999
        minItems: 0
      error:
        type: "array"
        items:
          $ref: "#/definitions/Error"
        maxItems: 999
        minItems: 0
    xml:
      name: "statusesObject"
  CtUpgradeQualificationInfo:
    type: "object"
    properties:
      offerCategory:
        type: "string"
        xml:
          name: "OfferCategory"
        enum:
        - "E_STD"
        - "E_IPH"
        - "STD"
        - "IPH"
        - "NE"
        - "IP"
        - "SHR"
        - "NOTDEFINED"
      qualificationLevel:
        type: "string"
        xml:
          name: "QualificationLevel"
        minLength: 1
        maxLength: 2147483647
      qualificationType:
        type: "string"
        xml:
          name: "QualificationType"
        minLength: 1
        maxLength: 2147483647
      qualificationMessage:
        type: "string"
        xml:
          name: "QualificationMessage"
        minLength: 1
        maxLength: 2147483647
      policyCategory:
        type: "string"
        xml:
          name: "PolicyCategory"
        minLength: 1
        maxLength: 2147483647
      deviceType:
        type: "string"
        xml:
          name: "DeviceType"
        minLength: 1
        maxLength: 2147483647
      isUpgradeFeeWaived:
        type: "boolean"
        xml:
          name: "IsUpgradeFeeWaived"
        default: false
      discountUOM:
        type: "string"
        xml:
          name: "DiscountUOM"
        minLength: 1
        maxLength: 2147483647
      priceList:
        type: "string"
        xml:
          name: "PriceList"
        minLength: 1
        maxLength: 2147483647
      minimumCommitment:
        type: "integer"
        xml:
          name: "MinimumCommitment"
        minimum: 0.0
      minimumMRC:
        type: "number"
        format: "double"
        xml:
          name: "MinimumMRC"
      maximumMRC:
        type: "number"
        format: "double"
        xml:
          name: "MaximumMRC"
      contractExtended:
        type: "string"
        xml:
          name: "ContractExtended"
        enum:
        - "SUCCESS"
        - "FAILURE"
        - "PENDING"
        - "NOT_REQUIRED"
      contractExtendedSource:
        type: "string"
        xml:
          name: "ContractExtendedSource"
        minLength: 1
        maxLength: 2147483647
      approvalNumber:
        type: "string"
        xml:
          name: "ApprovalNumber"
        minLength: 1
        maxLength: 2147483647
      newAEUChecker:
        type: "boolean"
        xml:
          name: "NewAEUChecker"
        default: false
      upgradeEligibilityDate:
        type: "string"
        format: "date-time"
        xml:
          name: "UpgradeEligibilityDate"
      isParked:
        type: "boolean"
        xml:
          name: "IsParked"
        default: false
      isReversed:
        type: "boolean"
        xml:
          name: "IsReversed"
        default: false
  CtParsedAddress:
    type: "object"
    required:
    - "city"
    properties:
      addressStreetLine:
        type: "string"
        xml:
          name: "AddressStreetLine"
        minLength: 1
        maxLength: 2147483647
      houseNumberPrefix:
        type: "string"
        xml:
          name: "HouseNumberPrefix"
        minLength: 1
        maxLength: 2147483647
      houseNumber:
        type: "string"
        xml:
          name: "HouseNumber"
        minLength: 1
        maxLength: 2147483647
      houseNumberSuffix:
        type: "string"
        xml:
          name: "HouseNumberSuffix"
        minLength: 1
        maxLength: 2147483647
      directionPrefix:
        type: "string"
        xml:
          name: "DirectionPrefix"
        minLength: 1
        maxLength: 2147483647
      direction:
        type: "string"
        xml:
          name: "Direction"
        minLength: 1
        maxLength: 2147483647
      assignedStreetNumber:
        type: "string"
        xml:
          name: "AssignedStreetNumber"
        minLength: 1
        maxLength: 2147483647
      streetName:
        type: "string"
        xml:
          name: "StreetName"
        minLength: 1
        maxLength: 2147483647
      streetNameSuffix:
        type: "string"
        xml:
          name: "StreetNameSuffix"
        minLength: 1
        maxLength: 2147483647
      streetType:
        type: "string"
        xml:
          name: "StreetType"
        minLength: 1
        maxLength: 2147483647
      structure:
        type: "string"
        xml:
          name: "Structure"
        minLength: 1
        maxLength: 2147483647
      structureNum:
        type: "string"
        xml:
          name: "StructureNum"
        minLength: 1
        maxLength: 2147483647
      level:
        type: "string"
        xml:
          name: "Level"
        minLength: 1
        maxLength: 2147483647
      levelNum:
        type: "string"
        xml:
          name: "LevelNum"
        minLength: 1
        maxLength: 2147483647
      apartmentUnit:
        type: "string"
        xml:
          name: "ApartmentUnit"
        minLength: 1
        maxLength: 2147483647
      apartmentUnitNum:
        type: "string"
        xml:
          name: "ApartmentUnitNum"
        minLength: 1
        maxLength: 2147483647
      postOfficeBox:
        type: "string"
        xml:
          name: "PostOfficeBox"
        minLength: 1
        maxLength: 2147483647
      ruralRouteBoxNumber:
        type: "string"
        xml:
          name: "RuralRouteBoxNumber"
        minLength: 1
        maxLength: 2147483647
      ruralRouteCenterNumber:
        type: "string"
        xml:
          name: "RuralRouteCenterNumber"
        minLength: 1
        maxLength: 2147483647
      city:
        type: "string"
        xml:
          name: "City"
        minLength: 1
        maxLength: 2147483647
      state:
        type: "string"
        xml:
          name: "State"
        enum:
        - "AA"
        - "AK"
        - "AL"
        - "AR"
        - "AZ"
        - "AP"
        - "AE"
        - "CA"
        - "CO"
        - "CT"
        - "DC"
        - "DE"
        - "FL"
        - "FPO"
        - "GA"
        - "GU"
        - "HI"
        - "IA"
        - "ID"
        - "IL"
        - "IN"
        - "KS"
        - "KY"
        - "LA"
        - "MA"
        - "MD"
        - "ME"
        - "MI"
        - "MN"
        - "MO"
        - "MS"
        - "MT"
        - "NC"
        - "ND"
        - "NE"
        - "NH"
        - "NJ"
        - "NM"
        - "NV"
        - "NY"
        - "OH"
        - "OK"
        - "OR"
        - "PA"
        - "PR"
        - "RI"
        - "SC"
        - "SD"
        - "TN"
        - "TX"
        - "UT"
        - "VA"
        - "VI"
        - "VT"
        - "WA"
        - "WI"
        - "WV"
        - "WY"
      province:
        type: "string"
        xml:
          name: "Province"
        minLength: 1
        maxLength: 30
      zip:
        type: "string"
        xml:
          name: "Zip"
        minLength: 5
        maxLength: 9
        pattern: "[0-9]{5}([0-9]{4})?"
      internationalZip:
        type: "string"
        xml:
          name: "InternationalZip"
        minLength: 1
        maxLength: 10
      zipGeoCode:
        type: "string"
        xml:
          name: "ZipGeoCode"
        minLength: 1
        maxLength: 2147483647
      zipCodeExtension:
        type: "string"
        xml:
          name: "ZipCodeExtension"
        minLength: 1
        maxLength: 2147483647
      county:
        type: "string"
        xml:
          name: "County"
        minLength: 1
        maxLength: 2147483647
      countyCode:
        type: "string"
        xml:
          name: "CountyCode"
        minLength: 1
        maxLength: 2147483647
      country:
        type: "string"
        xml:
          name: "Country"
        minLength: 1
        maxLength: 2147483647
      urbanizationCode:
        type: "string"
        xml:
          name: "UrbanizationCode"
        minLength: 1
        maxLength: 2147483647
      attention:
        type: "string"
        xml:
          name: "Attention"
        minLength: 1
        maxLength: 2147483647
      addressMatchCode:
        type: "string"
        xml:
          name: "AddressMatchCode"
        minLength: 1
        maxLength: 2147483647
      rateZoneBanCode:
        type: "string"
        xml:
          name: "RateZoneBanCode"
        minLength: 1
        maxLength: 2147483647
      siteId:
        type: "string"
        xml:
          name: "SiteId"
        minLength: 1
        maxLength: 2147483647
      siteAddrId:
        type: "string"
        xml:
          name: "SiteAddrId"
        minLength: 1
        maxLength: 2147483647
      legalEntity:
        type: "string"
        xml:
          name: "LegalEntity"
        minLength: 1
        maxLength: 2147483647
      buildingType:
        type: "string"
        xml:
          name: "BuildingType"
        minLength: 1
        maxLength: 2147483647
      tarCode:
        type: "string"
        xml:
          name: "TarCode"
        minLength: 1
        maxLength: 2147483647
      rateCenterCode:
        type: "string"
        xml:
          name: "RateCenterCode"
        minLength: 1
        maxLength: 2147483647
      exchangeCode:
        type: "string"
        xml:
          name: "ExchangeCode"
        minLength: 1
        maxLength: 2147483647
      primaryNpaNxx:
        type: "string"
        xml:
          name: "PrimaryNpaNxx"
        minLength: 1
        maxLength: 2147483647
      clli8:
        type: "string"
        xml:
          name: "Clli8"
        minLength: 1
        maxLength: 2147483647
      linkKey:
        type: "string"
        xml:
          name: "LinkKey"
        enum:
        - "M"
        - "U"
        - "D"
        - "B"
        - "F"
        - "E"
        - "P"
        - "G"
        - "L"
        - "H"
        - "I"
        - "C"
        - "A"
        - "S"
      lastDisconnectedTransportType:
        type: "string"
        xml:
          name: "LastDisconnectedTransportType"
        minLength: 1
        maxLength: 2147483647
      lastNADType:
        type: "string"
        xml:
          name: "LastNADType"
        enum:
        - "RG"
        - "VDSL"
        - "NA"
        - "IG"
        - "UNKNOWN"
        - "INID"
        - "UVRG"
        - "UVRG_X"
        - "BPIG"
      videoHubOffice:
        type: "string"
        xml:
          name: "VideoHubOffice"
        minLength: 1
        maxLength: 2147483647
      smartMoves:
        type: "string"
        xml:
          name: "SmartMoves"
        minLength: 1
        maxLength: 2147483647
      exhaustCode:
        type: "string"
        xml:
          name: "ExhaustCode"
        minLength: 1
        maxLength: 2147483647
      disconnectDate:
        type: "string"
        format: "date-time"
        xml:
          name: "DisconnectDate"
      addInstructions:
        type: "string"
        xml:
          name: "AddInstructions"
        minLength: 1
        maxLength: 2147483647
      addressChanged:
        type: "string"
        xml:
          name: "AddressChanged"
        enum:
        - "Y"
        - "N"
      addressType:
        type: "string"
        xml:
          name: "AddressType"
        enum:
        - "UNITED_STATES"
        - "RURAL_ROUTE"
        - "MILITARY"
        - "P_O_BOX"
        - "INTERNATIONAL"
        - "PUERTO_RICO_USVI"
      rsagValidation:
        type: "boolean"
        xml:
          name: "RsagValidation"
        default: false
      telephoneNumber:
        type: "string"
        xml:
          name: "TelephoneNumber"
        minLength: 1
        maxLength: 2147483647
        pattern: "[0-9]{10}"
      incorporatedIndicator:
        type: "boolean"
        xml:
          name: "IncorporatedIndicator"
        default: false
      confidence:
        type: "integer"
        format: "int64"
        xml:
          name: "Confidence"
  OrderStatusRequest:
    type: "object"
    properties:
      id:
        type: "string"
      parentStatusId:
        type: "string"
      status:
        type: "string"
      createdBy:
        type: "string"
      channel:
        type: "string"
      modifiedDate:
        type: "string"
        format: "date-time"
      modifiedBy:
        type: "string"
      emailContentId:
        type: "string"
    xml:
      name: "OrderStatusRequest"
  CtOrganization:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
        xml:
          name: "Name"
      childOrganizations:
        type: "array"
        xml:
          name: "ChildOrganizations"
        items:
          $ref: "#/definitions/CtOrganization"
        maxItems: 999
        minItems: 0
  MetaInformation:
    type: "object"
    required:
    - "limit"
    - "offset"
    - "total"
    properties:
      offset:
        type: "string"
      limit:
        type: "string"
      total:
        type: "string"
  CtE911Info:
    type: "object"
    required:
    - "homeAlarmSystemIndicator"
    - "id"
    - "tc911"
    properties:
      id:
        type: "string"
        xml:
          name: "Id"
        pattern: "E911INFO_[0-9]{2}"
      addressRef:
        type: "string"
        xml:
          name: "AddressRef"
        pattern: "ADDRESS_[0-9]{2}"
      noMatchFound:
        type: "object"
        xml:
          name: "NoMatchFound"
      homeAlarmSystemIndicator:
        type: "string"
        xml:
          name: "HomeAlarmSystemIndicator"
        enum:
        - "Y"
        - "N"
      tc911:
        xml:
          name: "TC911"
        $ref: "#/definitions/CtTCAccepted"
  CtUpdateInfo:
    type: "object"
    properties:
      sectionName:
        type: "string"
        xml:
          name: "SectionName"
      fieldName:
        type: "string"
        xml:
          name: "FieldName"
      oldValue:
        type: "string"
        xml:
          name: "OldValue"
      newValue:
        type: "string"
        xml:
          name: "NewValue"
  ProcessOrderRequest:
    type: "object"
    required:
    - "errors"
    - "order"
    properties:
      orders:
        xml:
          name: "Orders"
        $ref: "#/definitions/Orders"
      order:
        xml:
          name: "Order"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/Order"
      orderTasks:
        xml:
          name: "OrderTasks"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModelExtensionV1.0.xsd"
        $ref: "#/definitions/CtOrderTaskList"
      relatedOrders:
        xml:
          name: "RelatedOrders"
        $ref: "#/definitions/CtRelatedOrders"
      orderLogs:
        type: "array"
        xml:
          name: "OrderLogs"
        items:
          $ref: "#/definitions/CtOrderLog"
        maxItems: 999
        minItems: 0
      errors:
        xml:
          name: "Errors"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtErrorList"
      updateInfos:
        xml:
          name: "UpdateInfos"
        $ref: "#/definitions/CtUpdateInfos"
      transactionLogs:
        type: "array"
        xml:
          name: "TransactionLogs"
        items:
          $ref: "#/definitions/CtTransactionLog"
        maxItems: 999
        minItems: 0
    xml:
      name: "ProcessOrderRequest"
  Providers:
    type: "object"
  CtInstallationInstruction:
    type: "object"
    required:
    - "answers"
    - "question"
    properties:
      question:
        type: "string"
        xml:
          name: "Question"
      answers:
        type: "string"
        xml:
          name: "Answers"
  CtProductDetails:
    type: "object"
    properties:
      productDescription:
        type: "string"
        xml:
          name: "ProductDescription"
        minLength: 1
        maxLength: 2147483647
      action:
        type: "string"
        xml:
          name: "Action"
      previousProductTransportType:
        type: "string"
        xml:
          name: "PreviousProductTransportType"
        minLength: 1
        maxLength: 2147483647
      productCode:
        type: "string"
        xml:
          name: "ProductCode"
      packageCode:
        type: "string"
        xml:
          name: "PackageCode"
  CtDSLMemberInfo:
    type: "object"
    properties:
      memberId:
        type: "string"
        xml:
          name: "MemberId"
      authenticated:
        type: "boolean"
        xml:
          name: "Authenticated"
        default: false
      reuseDSLMemberId:
        type: "boolean"
        xml:
          name: "Reuse_DSLMemberId"
        default: false
  CtEscalationSearch:
    type: "object"
    properties:
      accountNumber:
        type: "string"
        xml:
          name: "AccountNumber"
      assignedTo:
        type: "string"
        xml:
          name: "AssignedTo"
      callId:
        type: "string"
        xml:
          name: "CallId"
      callbackName:
        type: "string"
        xml:
          name: "CallbackName"
      callbackNumber:
        type: "string"
        xml:
          name: "CallbackNumber"
      callbackPreference:
        type: "string"
        xml:
          name: "CallbackPreference"
      caseId:
        type: "string"
        xml:
          name: "CaseId"
      caseStatus:
        type: "string"
        xml:
          name: "CaseStatus"
      contactReason:
        type: "string"
        xml:
          name: "ContactReason"
      contactResolution:
        type: "string"
        xml:
          name: "ContactResolution"
      contactType:
        type: "string"
        xml:
          name: "ContactType"
      customerOrderNumber:
        type: "string"
        xml:
          name: "CustomerOrderNumber"
      escalationComment:
        type: "string"
        xml:
          name: "EscalationComment"
      escalationCreatedBy:
        type: "string"
        xml:
          name: "EscalationCreatedBy"
      escalationCreatedDate:
        type: "string"
        format: "date-time"
        xml:
          name: "EscalationCreatedDate"
      escalationReason:
        type: "string"
        xml:
          name: "EscalationReason"
      escalationTeam:
        type: "string"
        xml:
          name: "EscalationTeam"
      escalationType:
        type: "string"
        xml:
          name: "EscalationType"
      escalatonAge:
        type: "string"
        xml:
          name: "EscalatonAge"
      sla1:
        type: "string"
        xml:
          name: "SLA1"
      sla2:
        type: "string"
        xml:
          name: "SLA2"
      lastUpdated:
        type: "string"
        format: "date-time"
        xml:
          name: "LastUpdated"
      localTimezone:
        type: "string"
        xml:
          name: "LocalTimezone"
      program:
        type: "string"
        xml:
          name: "Program"
      lastUpdatedBy:
        type: "string"
        xml:
          name: "LastUpdatedBy"
      stakeholder:
        type: "string"
        xml:
          name: "Stakeholder"
      oceorderNumber:
        type: "string"
  CtConflictingServiceInfo:
    type: "object"
    properties:
      id:
        type: "string"
        xml:
          name: "Id"
        pattern: "CONF_SRV_INFO_[0-9]{2}"
      addressRef:
        type: "string"
        xml:
          name: "AddressRef"
        pattern: "ADDRESS_[0-9]{2}"
      productDetail:
        type: "array"
        xml:
          name: "ProductDetail"
        items:
          $ref: "#/definitions/CtProductDetails"
        maxItems: 999
        minItems: 0
      accountNumber:
        type: "string"
        xml:
          name: "AccountNumber"
        minLength: 1
        maxLength: 2147483647
      changeType:
        type: "string"
        xml:
          name: "ChangeType"
      disconnectNumber:
        type: "string"
        xml:
          name: "DisconnectNumber"
        minLength: 1
        maxLength: 2147483647
        pattern: "[0-9]{10}"
      customerCode:
        type: "string"
        xml:
          name: "CustomerCode"
        minLength: 1
        maxLength: 2147483647
      legacyExistIndicator:
        type: "boolean"
        xml:
          name: "LegacyExistIndicator"
        default: false
      btn:
        xml:
          name: "BTN"
        $ref: "#/definitions/CtBTN"
      disconnectDate:
        type: "string"
        format: "date-time"
        xml:
          name: "DisconnectDate"
      actualDisconnectDate:
        type: "string"
        format: "date-time"
        xml:
          name: "ActualDisconnectDate"
      region:
        type: "string"
        xml:
          name: "Region"
        enum:
        - "SOUTHWEST"
        - "WEST"
        - "MIDWEST"
        - "EAST"
        - "SOUTHEAST"
        - "UVERSE"
        - "ACCESSORY"
      state:
        type: "string"
        xml:
          name: "State"
        enum:
        - "AA"
        - "AK"
        - "AL"
        - "AR"
        - "AZ"
        - "AP"
        - "AE"
        - "CA"
        - "CO"
        - "CT"
        - "DC"
        - "DE"
        - "FL"
        - "FPO"
        - "GA"
        - "GU"
        - "HI"
        - "IA"
        - "ID"
        - "IL"
        - "IN"
        - "KS"
        - "KY"
        - "LA"
        - "MA"
        - "MD"
        - "ME"
        - "MI"
        - "MN"
        - "MO"
        - "MS"
        - "MT"
        - "NC"
        - "ND"
        - "NE"
        - "NH"
        - "NJ"
        - "NM"
        - "NV"
        - "NY"
        - "OH"
        - "OK"
        - "OR"
        - "PA"
        - "PR"
        - "RI"
        - "SC"
        - "SD"
        - "TN"
        - "TX"
        - "UT"
        - "VA"
        - "VI"
        - "VT"
        - "WA"
        - "WI"
        - "WV"
        - "WY"
      referallOfCalls:
        type: "boolean"
        xml:
          name: "ReferallOfCalls"
        default: false
      dslmemberInfo:
        $ref: "#/definitions/CtDSLMemberInfo"
  CtOrderTask:
    type: "object"
    required:
    - "callbackPreference"
    properties:
      orderNumber:
        type: "string"
        xml:
          name: "OrderNumber"
      customerOrderNumber:
        type: "string"
        xml:
          name: "CustomerOrderNumber"
      queueType:
        type: "string"
        xml:
          name: "QueueType"
      queueSubType:
        type: "string"
        xml:
          name: "QueueSubType"
      taskId:
        type: "string"
        xml:
          name: "TaskId"
      taskStatus:
        type: "string"
        xml:
          name: "TaskStatus"
        enum:
        - "OPEN"
        - "ASSIGNED"
        - "CLAIMED"
        - "ONHOLD"
        - "COMPLETED"
        - "NEW"
        - "INPROGRESS"
        - "REJECTED"
        - "CANCELED"
        - "UNCLAIMED"
        - "SUSPENDED"
      csrId:
        type: "string"
        xml:
          name: "CsrId"
      createdBy:
        type: "string"
        xml:
          name: "CreatedBy"
      lastModifiedBy:
        type: "string"
        xml:
          name: "LastModifiedBy"
      lastModifiedDateTime:
        type: "string"
        format: "date-time"
        xml:
          name: "LastModifiedDateTime"
      creationDateTime:
        type: "string"
        format: "date-time"
        xml:
          name: "CreationDateTime"
      childOrderNumber:
        type: "string"
        xml:
          name: "ChildOrderNumber"
      programName:
        type: "string"
        xml:
          name: "ProgramName"
      lineAction:
        type: "string"
        xml:
          name: "LineAction"
      lineCount:
        type: "integer"
        format: "int32"
        xml:
          name: "LineCount"
      lineCombination:
        xml:
          name: "LineCombination"
        $ref: "#/definitions/CtLineCombo"
      callbackPreference:
        type: "string"
        xml:
          name: "CallbackPreference"
      applicationName:
        type: "string"
        xml:
          name: "ApplicationName"
      repComments:
        type: "string"
        xml:
          name: "RepComments"
      queuePriorityValue:
        type: "string"
        xml:
          name: "QueuePriorityValue"
  CtNegativeComplexType:
    type: "object"
    required:
    - "id"
    - "negativeType"
    properties:
      id:
        type: "string"
        xml:
          name: "ID"
      isProtected:
        type: "boolean"
        xml:
          name: "IsProtected"
        default: false
      negativeType:
        type: "string"
        xml:
          name: "NegativeType"
      address1:
        type: "string"
        xml:
          name: "Address1"
      address2:
        type: "string"
        xml:
          name: "Address2"
      city:
        type: "string"
        xml:
          name: "City"
      state:
        type: "string"
        xml:
          name: "State"
      zipCode:
        type: "string"
        xml:
          name: "ZipCode"
      country:
        type: "string"
        xml:
          name: "Country"
      addressType:
        type: "string"
        xml:
          name: "AddressType"
      province:
        type: "string"
        xml:
          name: "Province"
      internationalZipCode:
        type: "string"
        xml:
          name: "InternationalZipCode"
  CtFalloutHistory:
    type: "object"
    required:
    - "fallouts"
    properties:
      fallouts:
        type: "array"
        xml:
          name: "Fallouts"
        items:
          $ref: "#/definitions/CtFallouts"
        maxItems: 999
        minItems: 1
  CtSearchConditions:
    type: "object"
    properties:
      searchCondition:
        type: "array"
        xml:
          name: "SearchCondition"
        items:
          $ref: "#/definitions/CtSearchCondition"
        maxItems: 999
        minItems: 0
  CtSaveProfile:
    type: "object"
    properties:
      profileName:
        type: "string"
        xml:
          name: "ProfileName"
        minLength: 1
        maxLength: 2147483647
      profileOwnerId:
        type: "string"
        xml:
          name: "ProfileOwnerId"
        minLength: 1
        maxLength: 2147483647
  AuditResponse:
    type: "object"
    required:
    - "auditlogId"
    - "comments"
    - "conversationId"
    - "correlationId"
    - "csrId"
    - "customerOrderNumber"
    - "externalSystemIp"
    - "insertedBy"
    - "insertedDate"
    - "interfaceName"
    - "ipv4"
    - "ipv6"
    - "isExternal"
    - "lastUpdatedBy"
    - "lastUpdatedDate"
    - "layer"
    - "logType"
    - "operationName"
    - "orderId"
    - "request"
    - "requestHeader"
    - "requestId"
    - "requestTime"
    - "rerunId"
    - "rerunSeq"
    - "response"
    - "responseTime"
    - "serverName"
    - "serviceName"
    - "status"
    - "timeDelay"
    properties:
      requestId:
        type: "string"
      interfaceName:
        type: "string"
      layer:
        type: "string"
      serviceName:
        type: "string"
      operationName:
        type: "string"
      request:
        type: "string"
      requestHeader:
        type: "string"
      response:
        type: "string"
      requestTime:
        type: "string"
        format: "date-time"
      responseTime:
        type: "string"
        format: "date-time"
      rerunId:
        type: "string"
      timeDelay:
        type: "number"
      orderId:
        type: "string"
      csrId:
        type: "string"
      conversationId:
        type: "string"
      logType:
        type: "string"
      ipv4:
        type: "string"
      ipv6:
        type: "string"
      serverName:
        type: "string"
      auditlogId:
        type: "number"
      insertedBy:
        type: "string"
      insertedDate:
        type: "string"
        format: "date-time"
      lastUpdatedBy:
        type: "string"
      lastUpdatedDate:
        type: "string"
        format: "date-time"
      correlationId:
        type: "string"
      rerunSeq:
        type: "number"
      customerOrderNumber:
        type: "string"
      isExternal:
        type: "string"
      externalSystemIp:
        type: "string"
      status:
        type: "string"
      comments:
        type: "string"
  CtOrder:
    type: "object"
    properties:
      groups:
        xml:
          name: "Groups"
        $ref: "#/definitions/Groups"
      oceorderNumber:
        type: "string"
  CtProvisioningSystem:
    type: "object"
    properties:
      systemName:
        type: "string"
        xml:
          name: "SystemName"
        minLength: 1
        maxLength: 2147483647
      systemOrderRef:
        type: "string"
        xml:
          name: "SystemOrderRef"
        minLength: 1
        maxLength: 2147483647
      systemOrderRefType:
        type: "string"
        xml:
          name: "SystemOrderRefType"
        enum:
        - "PROVISIONING"
        - "UNIFICATION"
        - "BOTH"
  CtFraudNegativeRule:
    type: "object"
    properties:
      id:
        type: "string"
        xml:
          name: "ID"
      name:
        type: "string"
        xml:
          name: "Name"
      displayName:
        type: "string"
        xml:
          name: "DisplayName"
      enterpriseType:
        type: "string"
        xml:
          name: "EnterpriseType"
        enum:
        - "CONSUMER"
        - "PREMIER"
      type:
        $ref: "#/definitions/CtNegativeValueType"
      lastModifiedBy:
        type: "string"
        xml:
          name: "LastModifiedBy"
      createdBy:
        type: "string"
        xml:
          name: "CreatedBy"
      lastModifiedDate:
        type: "string"
        format: "date-time"
        xml:
          name: "LastModifiedDate"
      creationDate:
        type: "string"
        format: "date-time"
        xml:
          name: "CreationDate"
      isActive:
        type: "boolean"
        xml:
          name: "IsActive"
        default: false
      channel:
        type: "string"
        xml:
          name: "Channel"
  CtGroupIdRefs:
    type: "object"
    required:
    - "groupRef"
    properties:
      groupRef:
        type: "array"
        xml:
          name: "GroupRef"
        items:
          type: "string"
        maxItems: 999
        minItems: 1
  CtACH:
    type: "object"
    properties:
      paymentToken:
        xml:
          name: "PaymentToken"
        $ref: "#/definitions/CtPaymentToken"
      bankAccountDetails:
        xml:
          name: "BankAccountDetails"
        $ref: "#/definitions/CtBankAccountDetails"
      paymentAmount:
        type: "number"
        xml:
          name: "PaymentAmount"
      preAuthDetail:
        xml:
          name: "PreAuthDetail"
        $ref: "#/definitions/CtPreAuthDetail"
      paymentConfirmationDetail:
        xml:
          name: "PaymentConfirmationDetail"
        $ref: "#/definitions/CtPaymentConfirmationDetail"
      accountNumberLast4Digits:
        type: "string"
        xml:
          name: "AccountNumberLast4Digits"
        minLength: 1
        maxLength: 2147483647
  CtRuleResult:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "string"
        xml:
          name: "ID"
      status:
        type: "string"
        xml:
          name: "Status"
        enum:
        - "SYS_RECEIVED"
        - "SYS_PROCESSING"
        - "IN_QUEUE"
        - "SYS_HOLD"
        - "REP_PROCESSING"
        - "FOLLOWUP_REQUIRED"
        - "PENDING"
        - "SUBMITTED"
        - "SHIPPED"
        - "ACTIVATED"
        - "CANCELED"
        - "COMPLETED"
      subStatus:
        type: "string"
        xml:
          name: "SubStatus"
  CSRRoles:
    type: "object"
    required:
    - "errors"
    - "userId"
    properties:
      userId:
        type: "string"
        xml:
          name: "UserId"
      roles:
        type: "array"
        xml:
          name: "Roles"
        items:
          $ref: "#/definitions/CtRoles"
        maxItems: 999
        minItems: 0
      errors:
        xml:
          name: "Errors"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtErrorList"
    xml:
      name: "CSRRoles"
  CtGroup:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "string"
        xml:
          name: "Id"
        pattern: "[[_:A-Za-z]-[:]][[-._:A-Za-z0-9]-[:]]*"
      name:
        type: "string"
        xml:
          name: "Name"
        minLength: 1
        maxLength: 2147483647
      type:
        type: "string"
        xml:
          name: "Type"
        enum:
        - "BUNDLE"
        - "PACKAGE"
        - "SHARED_PLAN"
        - "INCLUDED"
        - "LINE_OF_SERVICE"
        - "SUBORDINANT"
      sequence:
        type: "integer"
        xml:
          name: "Sequence"
      subTotal:
        xml:
          name: "SubTotal"
        $ref: "#/definitions/CtPriceInfo"
      price:
        type: "number"
        xml:
          name: "Price"
      promotionRefs:
        xml:
          name: "PromotionRefs"
        $ref: "#/definitions/CtPromotionRefs"
      groupCharacteristics:
        xml:
          name: "GroupCharacteristics"
        $ref: "#/definitions/CtGroupCharacteristics"
      additionalDetails:
        xml:
          name: "AdditionalDetails"
        $ref: "#/definitions/CtAdditionalDetails"
  CtProfileOwnerId:
    type: "object"
    properties:
      paymentAmount:
        type: "number"
        xml:
          name: "PaymentAmount"
      profileOwnerId:
        type: "string"
        xml:
          name: "ProfileOwnerId"
        minLength: 1
        maxLength: 2147483647
      last4Digits:
        type: "string"
        xml:
          name: "Last4Digits"
        minLength: 1
        maxLength: 2147483647
  Program:
    type: "object"
    required:
    - "countOfOrders"
    - "priority"
    - "programName"
    properties:
      programName:
        type: "string"
        xml:
          name: "ProgramName"
      priority:
        type: "integer"
        format: "int32"
        xml:
          name: "Priority"
      countOfOrders:
        type: "integer"
        format: "int32"
        xml:
          name: "CountOfOrders"
  FormDataContentDisposition:
    type: "object"
    properties:
      type:
        type: "string"
      parameters:
        type: "object"
        additionalProperties:
          type: "string"
      fileName:
        type: "string"
      creationDate:
        type: "string"
        format: "date-time"
      modificationDate:
        type: "string"
        format: "date-time"
      readDate:
        type: "string"
        format: "date-time"
      size:
        type: "integer"
        format: "int64"
      name:
        type: "string"
  UpdateResponse:
    type: "object"
    properties:
      status:
        type: "string"
      error:
        $ref: "#/definitions/Error"
    xml:
      name: "updateResponse"
  CtPromotionRefs:
    type: "object"
    required:
    - "promotionRef"
    properties:
      promotionRef:
        type: "array"
        xml:
          name: "PromotionRef"
        items:
          type: "string"
        maxItems: 999
        minItems: 1
  CtFeedRequest:
    type: "object"
    properties:
      customerOrderNumber:
        type: "string"
        xml:
          name: "CustomerOrderNumber"
        minLength: 1
        maxLength: 2147483647
      csrId:
        type: "string"
        minLength: 1
        maxLength: 2147483647
      bulkOrderJobName:
        type: "string"
        minLength: 1
        maxLength: 2147483647
      isProvisioningOrder:
        type: "boolean"
        default: false
      orderChangeSystem:
        type: "string"
        xml:
          name: "OrderChangeSystem"
        minLength: 1
        maxLength: 2147483647
      shippingFeedInfo:
        type: "array"
        xml:
          name: "ShippingFeedInfo"
        items:
          $ref: "#/definitions/CtShippingFeedInfo"
        maxItems: 999
        minItems: 0
      activationInfo:
        type: "array"
        xml:
          name: "ActivationInfo"
        items:
          $ref: "#/definitions/CtActivationInfo"
        maxItems: 999
        minItems: 0
      storeInfo:
        type: "array"
        xml:
          name: "StoreInfo"
        items:
          $ref: "#/definitions/CtStoreInfo"
        maxItems: 999
        minItems: 0
      bulkUpdateInfo:
        type: "array"
        xml:
          name: "BulkUpdateInfo"
        items:
          $ref: "#/definitions/CtBulkUpdateRequest"
        maxItems: 999
        minItems: 0
  UpdateRequest:
    type: "object"
    required:
    - "updateLookupRequest"
    properties:
      updateLookupRequest:
        $ref: "#/definitions/UpdateLookupRequest"
    xml:
      name: "updateRequest"
  CtSpecialHandlingMessage:
    type: "object"
    required:
    - "businessReason"
    - "elements"
    - "fromDate"
    - "id"
    - "message"
    - "status"
    - "toDate"
    properties:
      id:
        type: "string"
        xml:
          name: "Id"
      fromDate:
        type: "string"
        format: "date-time"
        xml:
          name: "FromDate"
      toDate:
        type: "string"
        format: "date-time"
        xml:
          name: "ToDate"
      businessReason:
        type: "string"
        xml:
          name: "BusinessReason"
      message:
        type: "string"
        xml:
          name: "Message"
      status:
        type: "boolean"
        xml:
          name: "Status"
        default: false
      elements:
        type: "array"
        xml:
          name: "Elements"
        items:
          $ref: "#/definitions/CtElements"
        maxItems: 999
        minItems: 1
      lastupdatedBy:
        type: "string"
        xml:
          name: "LastupdatedBy"
      lastupdatedDate:
        type: "string"
        format: "date-time"
        xml:
          name: "LastupdatedDate"
      channel:
        type: "string"
        xml:
          name: "Channel"
      shmname:
        type: "string"
  CtTypeValueInfo:
    type: "object"
    required:
    - "type"
    - "value"
    properties:
      type:
        type: "string"
        xml:
          name: "Type"
        minLength: 1
        maxLength: 2147483647
      value:
        type: "string"
        xml:
          name: "Value"
        minLength: 1
        maxLength: 2147483647
  EmailDynamicDataRequest:
    type: "object"
    properties:
      id:
        type: "string"
        xml:
          name: "Id"
      variableName:
        type: "string"
        xml:
          name: "VariableName"
      variableValue:
        type: "string"
        xml:
          name: "VariableValue"
      active:
        type: "boolean"
        xml:
          name: "Active"
        default: false
      type:
        type: "string"
        xml:
          name: "Type"
      log:
        type: "string"
      createdBy:
        type: "string"
      channel:
        type: "string"
  OrderCountResponse:
    type: "object"
    required:
    - "errors"
    properties:
      imei:
        xml:
          name: "Imei"
        $ref: "#/definitions/CtImei"
      ctn:
        xml:
          name: "Ctn"
        $ref: "#/definitions/CtCtn"
      ban:
        xml:
          name: "Ban"
        $ref: "#/definitions/CtBan"
      email:
        xml:
          name: "Email"
        $ref: "#/definitions/CtEmail"
      errors:
        xml:
          name: "Errors"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtErrorList"
    xml:
      name: "OrderCountResponse"
  CtPriceInfo:
    type: "object"
    properties:
      amount:
        type: "number"
        xml:
          name: "Amount"
      currencyType:
        type: "string"
        xml:
          name: "CurrencyType"
        enum:
        - "USD"
      installmentEligibility:
        type: "string"
        xml:
          name: "InstallmentEligibility"
        enum:
        - "Y"
        - "N"
      msrp:
        type: "number"
        xml:
          name: "MSRP"
      priceType:
        type: "string"
        xml:
          name: "PriceType"
        enum:
        - "RC"
        - "NRC"
        - "DUE_TODAY"
        - "DEBT"
        - "NOT_APPLICABLE"
      taxInfo:
        xml:
          name: "TaxInfo"
        $ref: "#/definitions/CtTaxPriceInfo"
      total:
        type: "number"
        xml:
          name: "Total"
  CtSchedulingInfo:
    type: "object"
    required:
    - "id"
    - "nameRef"
    properties:
      id:
        type: "string"
        xml:
          name: "Id"
        pattern: "SCHEDULINGINFO_[0-9]{2}"
      landlordInfo:
        xml:
          name: "LandlordInfo"
        $ref: "#/definitions/CtLandlordInfo"
      connectechInstallationOption:
        type: "array"
        xml:
          name: "ConnectechInstallationOption"
        items:
          $ref: "#/definitions/CtConnecTechInstallationOption"
        maxItems: 2
        minItems: 0
      nameRef:
        type: "string"
        xml:
          name: "NameRef"
        pattern: "NAME_[0-9]{2}"
      scheduleAsSoonAsPossible:
        type: "boolean"
        xml:
          name: "ScheduleAsSoonAsPossible"
        default: false
      scheduleByDayAndTime:
        xml:
          name: "ScheduleByDayAndTime"
        $ref: "#/definitions/CtDayAndTime"
      actualSchedule:
        xml:
          name: "ActualSchedule"
        $ref: "#/definitions/CtActualSchedule"
      confirmedSchedule:
        xml:
          name: "ConfirmedSchedule"
        $ref: "#/definitions/CtActualSchedule"
      billingInstallments:
        type: "boolean"
        xml:
          name: "BillingInstallments"
        default: false
      appointmentComment:
        type: "string"
        xml:
          name: "AppointmentComment"
        minLength: 1
        maxLength: 2147483647
      installType:
        type: "string"
        xml:
          name: "InstallType"
        minLength: 1
        maxLength: 2147483647
      dispatchType:
        type: "string"
        xml:
          name: "DispatchType"
        minLength: 1
        maxLength: 2147483647
      reservationId:
        type: "string"
        xml:
          name: "ReservationId"
        minLength: 1
        maxLength: 2147483647
      eventCode:
        type: "string"
        xml:
          name: "EventCode"
        minLength: 1
        maxLength: 2147483647
      isEventCodeEnteredManually:
        type: "boolean"
        xml:
          name: "IsEventCodeEnteredManually"
        default: false
      isRealTimeCalendar:
        type: "boolean"
        xml:
          name: "IsRealTimeCalendar"
        default: false
  CtTCAccepted:
    type: "object"
    required:
    - "accepted"
    properties:
      accepted:
        type: "string"
        xml:
          name: "Accepted"
        default: "Y"
        enum:
        - "Y"
        - "N"
      timestamp:
        type: "string"
        format: "date-time"
        xml:
          name: "Timestamp"
      version:
        type: "string"
        xml:
          name: "Version"
        minLength: 1
        maxLength: 2147483647
      deviceInstallAgreementType:
        type: "string"
        xml:
          name: "DeviceInstallAgreementType"
        minLength: 1
        maxLength: 2147483647
      econsentAgreementType:
        type: "string"
        xml:
          name: "EconsentAgreementType"
        minLength: 1
        maxLength: 2147483647
  CtMetaInformation:
    type: "object"
    required:
    - "limit"
    - "offset"
    - "total"
    properties:
      offset:
        type: "string"
        xml:
          name: "Offset"
      limit:
        type: "string"
        xml:
          name: "Limit"
      total:
        type: "string"
        xml:
          name: "Total"
      totalLineItems:
        type: "integer"
        format: "int32"
        xml:
          name: "TotalLineItems"
  CtContractAcceptance:
    type: "object"
    required:
    - "acceptance"
    - "contractLength"
    - "versionNumber"
    properties:
      acceptance:
        type: "string"
        xml:
          name: "Acceptance"
        enum:
        - "Y"
        - "N"
      contractLength:
        type: "string"
        xml:
          name: "ContractLength"
        minLength: 1
        maxLength: 2147483647
      versionNumber:
        type: "string"
        xml:
          name: "VersionNumber"
        minLength: 1
        maxLength: 2147483647
  CtChannel:
    type: "object"
    properties:
      name:
        type: "string"
        xml:
          name: "Name"
      taskLimit:
        type: "integer"
        format: "int32"
        xml:
          name: "TaskLimit"
  CtRepDetails:
    type: "object"
    properties:
      repID:
        type: "string"
        xml:
          name: "RepID"
        minLength: 1
        maxLength: 2147483647
      repAction:
        type: "string"
        xml:
          name: "RepAction"
        enum:
        - "AGENT_SUBMITTED"
        - "AGENT_ASSISTED"
      type:
        type: "string"
        xml:
          name: "Type"
        enum:
        - "PRIMARY"
        - "SECONDARY"
      dealerCode:
        type: "string"
        xml:
          name: "DealerCode"
        minLength: 1
        maxLength: 2147483647
  CtSHM:
    type: "object"
    required:
    - "errors"
    - "specialHandlingMessage"
    properties:
      specialHandlingMessage:
        type: "array"
        xml:
          name: "SpecialHandlingMessage"
        items:
          type: "string"
        maxItems: 999
        minItems: 1
      notes:
        type: "string"
        xml:
          name: "Notes"
      errors:
        xml:
          name: "Errors"
        $ref: "#/definitions/CtErrorList"
  BulkUpdateResponse:
    type: "object"
    properties:
      requestId:
        type: "string"
        xml:
          name: "RequestId"
      totalOrderCount:
        type: "integer"
        format: "int32"
      successCount:
        type: "integer"
        format: "int32"
      failureCount:
        type: "integer"
        format: "int32"
      orders:
        type: "array"
        xml:
          name: "Orders"
        items:
          $ref: "#/definitions/CtOrders"
        maxItems: 999
        minItems: 0
      errors:
        xml:
          name: "Errors"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtErrorList"
    xml:
      name: "BulkUpdateResponse"
  CtDirecTVLineItemChars:
    type: "object"
  CtEmailTemplate:
    type: "object"
    properties:
      orderID:
        type: "string"
        xml:
          name: "OrderID"
      markerId:
        type: "string"
        xml:
          name: "MarkerId"
      emailTo:
        type: "string"
        xml:
          name: "EmailTo"
      emailFrom:
        type: "string"
        xml:
          name: "EmailFrom"
      templateName:
        type: "string"
        xml:
          name: "TemplateName"
      combo:
        type: "string"
        xml:
          name: "Combo"
      actualEmailContent:
        type: "string"
        xml:
          name: "ActualEmailContent"
      emailSubject:
        type: "string"
        xml:
          name: "EmailSubject"
      mailBox:
        type: "string"
        xml:
          name: "MailBox"
  ProcessCallLogDetailRequest:
    type: "object"
    required:
    - "callEndTime"
    - "callId"
    - "callRecords"
    - "callStartTime"
    - "customerCalledNumber"
    - "timeStamp"
    properties:
      callId:
        type: "string"
        xml:
          name: "CallId"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Public/OCEProcessCallLogDetailV1.0.xsd"
      timeStamp:
        type: "string"
        format: "date-time"
        xml:
          name: "TimeStamp"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Public/OCEProcessCallLogDetailV1.0.xsd"
      customerCalledNumber:
        type: "string"
        xml:
          name: "CustomerCalledNumber"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Public/OCEProcessCallLogDetailV1.0.xsd"
      customerOrderNumber:
        type: "string"
        xml:
          name: "CustomerOrderNumber"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Public/OCEProcessCallLogDetailV1.0.xsd"
      ani:
        type: "integer"
        format: "int64"
        xml:
          name: "ANI"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Public/OCEProcessCallLogDetailV1.0.xsd"
      callStartTime:
        type: "string"
        format: "date-time"
        xml:
          name: "CallStartTime"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Public/OCEProcessCallLogDetailV1.0.xsd"
      callEndTime:
        type: "string"
        format: "date-time"
        xml:
          name: "CallEndTime"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Public/OCEProcessCallLogDetailV1.0.xsd"
      callRecords:
        xml:
          name: "CallRecords"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Public/OCEProcessCallLogDetailV1.0.xsd"
        $ref: "#/definitions/CtCallRecords"
      additionalDetails:
        xml:
          name: "AdditionalDetails"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Public/OCEProcessCallLogDetailV1.0.xsd"
        $ref: "#/definitions/CtAdditionalDetails"
    xml:
      name: "ProcessCallLogDetailRequest"
      namespace: "http://oce.att.com/OCE/Namespaces/Types/Public/OCEProcessCallLogDetailV1.0.xsd"
  CallDetailResponse:
    type: "object"
    required:
    - "errors"
    properties:
      callDetail:
        xml:
          name: "CallDetail"
        $ref: "#/definitions/CtCallDetail"
      callId:
        type: "string"
        xml:
          name: "CallId"
      orderNumber:
        type: "string"
        xml:
          name: "OrderNumber"
      exitMarker:
        type: "string"
        xml:
          name: "ExitMarker"
      program:
        type: "string"
        xml:
          name: "Program"
      numOfTimesCustomerCalled:
        type: "integer"
        format: "int32"
        xml:
          name: "NumOfTimesCustomerCalled"
      isLocked:
        type: "boolean"
        xml:
          name: "IsLocked"
        default: false
      authenticated:
        type: "integer"
        format: "int32"
        xml:
          name: "Authenticated"
      isIVR:
        type: "boolean"
        xml:
          name: "IsIVR"
        default: false
      lockedBy:
        type: "string"
        xml:
          name: "LockedBy"
      note:
        type: "string"
        xml:
          name: "Note"
      sendSurveyEmail:
        type: "boolean"
        xml:
          name: "SendSurveyEmail"
        default: false
      errors:
        xml:
          name: "Errors"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtErrorList"
      ivrreference:
        type: "string"
    xml:
      name: "CallDetailResponse"
  CtLoSGCharacteristics:
    type: "object"
    required:
    - "loSGType"
    - "productCategory"
    properties:
      loSGReferenceId:
        type: "string"
        xml:
          name: "LoSGReferenceId"
        minLength: 1
        maxLength: 2147483647
      loSGSequenceNumber:
        type: "integer"
        xml:
          name: "LoSGSequenceNumber"
      loSGType:
        type: "string"
        xml:
          name: "LoSGType"
        enum:
        - "NO_CHANGE"
        - "NEW"
        - "AL"
        - "ALF"
        - "UP"
        - "UNLOCK"
        - "UNIFY"
        - "ACC"
        - "DISCONNECT"
        - "CHANGE"
        - "AMEND"
        - "WINOVER"
        - "WINBACK"
        - "DEVICE"
        - "REWARDS_GIFT"
      productCategory:
        type: "string"
        xml:
          name: "ProductCategory"
        enum:
        - "WIRELESS"
        - "INTERNET"
        - "IPTV"
        - "VOIP"
        - "DIRECTV"
        - "MISC"
      isPrimary:
        type: "boolean"
        xml:
          name: "IsPrimary"
        default: false
      dealerCode:
        type: "string"
        xml:
          name: "DealerCode"
        minLength: 1
        maxLength: 2147483647
      market:
        type: "string"
        xml:
          name: "Market"
        minLength: 1
        maxLength: 2147483647
      subMarket:
        type: "string"
        xml:
          name: "SubMarket"
        minLength: 1
        maxLength: 2147483647
      preferredAreaCode:
        type: "string"
        xml:
          name: "PreferredAreaCode"
        minLength: 1
        maxLength: 2147483647
      serviceArea:
        type: "string"
        xml:
          name: "ServiceArea"
        minLength: 1
        maxLength: 2147483647
      serviceAreaName:
        type: "string"
        xml:
          name: "ServiceAreaName"
        minLength: 1
        maxLength: 2147483647
      priceCode:
        type: "string"
        xml:
          name: "PriceCode"
        minLength: 1
        maxLength: 2147483647
      accountRef:
        type: "string"
        xml:
          name: "AccountRef"
        pattern: "ACCOUNT_[0-9]{2}"
      requestedExecutionDate:
        type: "string"
        format: "date-time"
        xml:
          name: "RequestedExecutionDate"
      effectiveDate:
        type: "string"
        format: "date-time"
        xml:
          name: "EffectiveDate"
      loSGStatus:
        xml:
          name: "LoSGStatus"
        $ref: "#/definitions/CtLoSGStatus"
      serviceLocationRef:
        type: "string"
        xml:
          name: "ServiceLocationRef"
        pattern: "ADDRESS_[0-9]{2}"
      subscriberNameRef:
        type: "string"
        xml:
          name: "SubscriberNameRef"
        pattern: "NAME_[0-9]{2}"
      serviceQualificationRef:
        type: "string"
        xml:
          name: "ServiceQualificationRef"
        pattern: "SERVICE_QLFY_[0-9]{2}"
      conflictingServiceInfoRefs:
        xml:
          name: "ConflictingServiceInfoRefs"
        $ref: "#/definitions/CtConflictingServiceInfoRefs"
      profileCode:
        type: "string"
        xml:
          name: "ProfileCode"
        minLength: 0
        maxLength: 10
      schedulingInfoRef:
        type: "string"
        xml:
          name: "SchedulingInfoRef"
        pattern: "SCHEDULINGINFO_[0-9]{2}"
      installationInstructions:
        xml:
          name: "InstallationInstructions"
        $ref: "#/definitions/CtInstallationInstructionList"
      numberPortInfo:
        xml:
          name: "NumberPortInfo"
        $ref: "#/definitions/CtPortNumberInfo"
      installType:
        type: "string"
        xml:
          name: "InstallType"
        enum:
        - "SELF"
        - "TECH"
      notes:
        type: "string"
        xml:
          name: "Notes"
        minLength: 1
        maxLength: 2147483647
      wirelessLOSChars:
        xml:
          name: "WirelessLOSChars"
        $ref: "#/definitions/CtWirelessLOSChars"
      internetLOSChars:
        xml:
          name: "InternetLOSChars"
        $ref: "#/definitions/CtInternetLOSChars"
      direcTVLOSChars:
        xml:
          name: "DirecTVLOSChars"
        $ref: "#/definitions/CtDirecTVLOSChars"
      b2B:
        xml:
          name: "B2B"
        $ref: "#/definitions/CtB2B"
      followUpDate:
        type: "string"
        format: "date-time"
        xml:
          name: "FollowUpDate"
      depositStatus:
        type: "string"
        xml:
          name: "DepositStatus"
        minLength: 1
        maxLength: 2147483647
      invokeAWPAPI:
        type: "boolean"
        xml:
          name: "InvokeAWPAPI"
        default: false
      isQualifiedForAutomation:
        type: "boolean"
        xml:
          name: "IsQualifiedForAutomation"
        default: false
      isAutomationEnabled:
        type: "boolean"
        xml:
          name: "IsAutomationEnabled"
        default: false
      isAutomationSuccess:
        type: "boolean"
        xml:
          name: "IsAutomationSuccess"
        default: false
      compensation:
        xml:
          name: "Compensation"
        $ref: "#/definitions/CtCompensation"
      fulfillmentMethod:
        type: "string"
        xml:
          name: "FulfillmentMethod"
        minLength: 1
        maxLength: 2147483647
      shippingInfoRef:
        type: "string"
        xml:
          name: "ShippingInfoRef"
        pattern: "SHIPPING_INFO_[0-9]{2}"
      additionalDetails:
        xml:
          name: "AdditionalDetails"
        $ref: "#/definitions/CtAdditionalDetails"
      childOrderID:
        type: "string"
        xml:
          name: "ChildOrderID"
        minLength: 1
        maxLength: 2147483647
      tcrefs:
        $ref: "#/definitions/CtTCIdRefs"
      udls:
        $ref: "#/definitions/CtUDLs"
      voiploschars:
        $ref: "#/definitions/CtVOIPLOSChars"
      tcaccepted:
        $ref: "#/definitions/CtTCAccepted"
      iptvloschars:
        $ref: "#/definitions/CtIPTVLOSChars"
      assuccessFlag:
        type: "boolean"
        default: false
  FormDataBodyPart:
    type: "object"
    properties:
      contentDisposition:
        $ref: "#/definitions/ContentDisposition"
      entity:
        type: "object"
      headers:
        type: "object"
        additionalProperties:
          type: "array"
          items:
            type: "string"
      mediaType:
        $ref: "#/definitions/MediaType"
      messageBodyWorkers:
        $ref: "#/definitions/MessageBodyWorkers"
      parent:
        $ref: "#/definitions/MultiPart"
      providers:
        $ref: "#/definitions/Providers"
      name:
        type: "string"
      value:
        type: "string"
      simple:
        type: "boolean"
        default: false
      formDataContentDisposition:
        $ref: "#/definitions/FormDataContentDisposition"
      parameterizedHeaders:
        type: "object"
        additionalProperties:
          type: "array"
          items:
            $ref: "#/definitions/ParameterizedHeader"
  CtAR:
    type: "object"
    properties:
      arindicator:
        type: "boolean"
        default: false
      ponumber:
        type: "string"
  Groups:
    type: "object"
    properties:
      group:
        type: "array"
        xml:
          name: "Group"
        items:
          $ref: "#/definitions/Group"
        maxItems: 999
        minItems: 0
  ScheduledJobsUpdateRequest:
    type: "object"
    properties:
      currentStatus:
        type: "string"
      currentSubStatus:
        type: "string"
      targetStatus:
        type: "string"
      targetSubStatus:
        type: "string"
      activeFlag:
        type: "boolean"
        xml:
          name: "ActiveFlag"
        default: false
      threshold:
        type: "integer"
        format: "int32"
      channel:
        type: "string"
    xml:
      name: "ScheduledJobsUpdateRequest"
  LineSubStatus:
    type: "object"
    required:
    - "lineSubStatusValue"
    properties:
      lineSubStatusValue:
        type: "string"
        xml:
          name: "LineSubStatusValue"
      productCategory:
        type: "string"
        xml:
          name: "ProductCategory"
      status:
        type: "string"
        xml:
          name: "Status"
  CtHardGood:
    type: "object"
    properties:
      byod:
        type: "boolean"
        xml:
          name: "BYOD"
        default: false
      hardGoodType:
        type: "string"
        xml:
          name: "HardGoodType"
        enum:
        - "DEVICE"
        - "SIM"
        - "STB"
        - "DVR"
        - "MODEM"
        - "COLLATERAL"
        - "ACCESSORY"
      productImageUrl:
        type: "string"
        xml:
          name: "ProductImageUrl"
        minLength: 1
        maxLength: 2147483647
      make:
        type: "string"
        xml:
          name: "Make"
        minLength: 1
        maxLength: 2147483647
      model:
        type: "string"
        xml:
          name: "Model"
        minLength: 1
        maxLength: 2147483647
      manufacturerCode:
        type: "string"
        xml:
          name: "ManufacturerCode"
        minLength: 1
        maxLength: 2147483647
      serialNumber:
        type: "string"
        xml:
          name: "SerialNumber"
        minLength: 1
        maxLength: 2147483647
      fid:
        type: "string"
        xml:
          name: "Fid"
        minLength: 1
        maxLength: 2147483647
      deliveryPromiseNoteEnglish:
        type: "string"
        xml:
          name: "DeliveryPromiseNoteEnglish"
        minLength: 1
        maxLength: 2147483647
      deliveryPromiseNoteSpanish:
        type: "string"
        xml:
          name: "DeliveryPromiseNoteSpanish"
        minLength: 1
        maxLength: 2147483647
      preOrder:
        type: "boolean"
        xml:
          name: "PreOrder"
        default: false
      availabilityDate:
        type: "string"
        format: "date-time"
        xml:
          name: "AvailabilityDate"
      isShippedHot:
        type: "boolean"
        xml:
          name: "IsShippedHot"
        default: false
      shipmentCommitDate:
        xml:
          name: "ShipmentCommitDate"
        $ref: "#/definitions/CtShipmentCommitDate"
      deliveryByDate:
        xml:
          name: "DeliveryByDate"
        $ref: "#/definitions/CtDeliveryByDate"
      networkAccessDeviceType:
        type: "string"
        xml:
          name: "NetworkAccessDeviceType"
        minLength: 1
        maxLength: 2147483647
      csn:
        type: "string"
        xml:
          name: "CSN"
        minLength: 1
        maxLength: 2147483647
      iccid:
        type: "string"
        xml:
          name: "ICCID"
        minLength: 1
        maxLength: 2147483647
      whiteGloveDeliveryPartner:
        type: "string"
        xml:
          name: "WhiteGloveDeliveryPartner"
        enum:
        - "ENJOY"
      wirelessHardGoodChars:
        xml:
          name: "WirelessHardGoodChars"
        $ref: "#/definitions/CtWirelessHardGoodChars"
  CtBan:
    type: "object"
    required:
    - "count"
    - "value"
    properties:
      count:
        type: "integer"
        format: "int32"
        xml:
          name: "Count"
      value:
        type: "string"
        xml:
          name: "Value"
      dateLimit:
        type: "array"
        xml:
          name: "DateLimit"
        items:
          $ref: "#/definitions/CtDateLimit"
        maxItems: 99
        minItems: 0
  OrderCreationToolRequest:
    type: "object"
    properties:
      orderCreationRequest:
        xml:
          name: "OrderCreationRequest"
        $ref: "#/definitions/CtOrderCreationRequest"
    xml:
      name: "OrderCreationToolRequest"
  CtFallouts:
    type: "object"
    properties:
      falloutAPI:
        type: "string"
        xml:
          name: "FalloutAPI"
        minLength: 1
        maxLength: 2147483647
      falloutCode:
        type: "string"
        xml:
          name: "FalloutCode"
        minLength: 1
        maxLength: 2147483647
      falloutDesc:
        type: "string"
        xml:
          name: "FalloutDesc"
        minLength: 1
        maxLength: 2147483647
      falloutDateTime:
        type: "string"
        format: "date-time"
        xml:
          name: "FalloutDateTime"
  CtListing:
    type: "object"
    properties:
      name:
        type: "string"
        xml:
          name: "Name"
        minLength: 1
        maxLength: 2147483647
      nameRef:
        type: "string"
        xml:
          name: "NameRef"
        pattern: "NAME_[0-9]{2}"
      listing:
        xml:
          name: "Listing"
        $ref: "#/definitions/CtListingType"
      omitAddress:
        type: "boolean"
        xml:
          name: "OmitAddress"
        default: false
  CtOrderStatus:
    type: "object"
    required:
    - "status"
    properties:
      status:
        type: "string"
        xml:
          name: "Status"
        enum:
        - "RECEIVED"
        - "IN_PROGRESS"
        - "ATTENTION_REQUIRED"
        - "CANCELED"
        - "COMPLETED"
        - "PENDING_APPROVAL"
        - "APPROVED"
        - "ACCEPTED"
        - "ACTIVATED"
        - "COMPLETE"
        - "NETWORK_ACTIVE"
        - "SUSPENDED"
        - "ONHOLD"
        - "PENDING"
        - "SYSTEM_RECEIVED"
        - "READYFORPROCESSING"
      subStatus:
        type: "string"
        xml:
          name: "SubStatus"
        minLength: 1
        maxLength: 2147483647
      operation:
        type: "string"
        xml:
          name: "Operation"
        minLength: 1
        maxLength: 2147483647
      falloutCode:
        type: "string"
        xml:
          name: "FalloutCode"
        minLength: 1
        maxLength: 2147483647
      falloutDescription:
        type: "string"
        xml:
          name: "FalloutDescription"
        minLength: 1
        maxLength: 2147483647
  PartnerAssignmentResponse:
    type: "object"
    required:
    - "status"
    properties:
      status:
        type: "string"
        xml:
          name: "Status"
      partnerAssignment:
        type: "array"
        xml:
          name: "PartnerAssignment"
        items:
          $ref: "#/definitions/CtPartnerAssignment"
        maxItems: 999
        minItems: 0
      errors:
        xml:
          name: "Errors"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtErrorList"
    xml:
      name: "PartnerAssignmentResponse"
  CtSlaDetail:
    type: "object"
    properties:
      fulfillmentMethod:
        type: "string"
        xml:
          name: "FulfillmentMethod"
        minLength: 1
        maxLength: 2147483647
      atRisk:
        type: "integer"
        format: "int32"
        xml:
          name: "AtRisk"
      atViolation:
        type: "integer"
        format: "int32"
        xml:
          name: "AtViolation"
      slaBreach:
        type: "integer"
        format: "int32"
        xml:
          name: "SlaBreach"
      thresholdBreachEmail:
        type: "string"
        xml:
          name: "ThresholdBreachEmail"
      isSlaAlert:
        type: "boolean"
        default: false
  ResendEmailResponse:
    type: "object"
    required:
    - "errors"
    properties:
      notes:
        type: "string"
        xml:
          name: "Notes"
      errors:
        xml:
          name: "Errors"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtErrorList"
    xml:
      name: "ResendEmailResponse"
  CtTCIdRefs:
    type: "object"
    properties:
      tcref:
        type: "array"
        items:
          type: "string"
  CtInternetLineItemChars:
    type: "object"
    required:
    - "note"
    properties:
      bucketAllowance:
        type: "string"
        xml:
          name: "BucketAllowance"
        minLength: 1
        maxLength: 2147483647
      overageBucketAllowance:
        type: "string"
        xml:
          name: "OverageBucketAllowance"
        minLength: 1
        maxLength: 2147483647
      pricePerBucketAllowance:
        type: "number"
        xml:
          name: "PricePerBucketAllowance"
      maxOverageCharge:
        type: "number"
        xml:
          name: "MaxOverageCharge"
      planDownloadSpeed:
        type: "string"
        xml:
          name: "PlanDownloadSpeed"
        minLength: 1
        maxLength: 2147483647
      boltOnType:
        type: "string"
        xml:
          name: "BoltOnType"
        enum:
        - "BASE"
        - "CIB"
        - "SIB"
      note:
        type: "string"
        xml:
          name: "Note"
        minLength: 1
        maxLength: 2147483647
  PartnerReAssignmentResponse:
    type: "object"
    required:
    - "errors"
    properties:
      partnerReAssignmentInfo:
        type: "array"
        xml:
          name: "PartnerReAssignmentInfo"
        items:
          $ref: "#/definitions/CtPartnerReAssignment"
        maxItems: 999
        minItems: 0
      metaInformation:
        xml:
          name: "MetaInformation"
        $ref: "#/definitions/CtMetaInformation"
      errors:
        xml:
          name: "Errors"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtErrorList"
    xml:
      name: "PartnerReAssignmentResponse"
  CtEntityFunctions:
    type: "object"
    properties:
      entityName:
        type: "array"
        xml:
          name: "EntityName"
        items:
          type: "string"
        maxItems: 999
        minItems: 0
  EmailContentRequest:
    type: "object"
    properties:
      emailContent:
        xml:
          name: "EmailContent"
        $ref: "#/definitions/CtEmailContent"
    xml:
      name: "EmailContentRequest"
  CtNegotiateConflictContact:
    type: "object"
    required:
    - "cbr"
    properties:
      firstName:
        type: "string"
        xml:
          name: "FirstName"
        minLength: 1
        maxLength: 2147483647
      lastName:
        type: "string"
        xml:
          name: "LastName"
        minLength: 1
        maxLength: 2147483647
      companyName:
        type: "string"
        xml:
          name: "CompanyName"
        minLength: 1
        maxLength: 2147483647
      email:
        type: "string"
        xml:
          name: "Email"
        minLength: 1
        maxLength: 2147483647
      cbr:
        type: "string"
        xml:
          name: "CBR"
        minLength: 1
        maxLength: 2147483647
        pattern: "[0-9]{10}"
      cbrtype:
        type: "string"
  CtAccessDetails:
    type: "object"
    required:
    - "accessType"
    - "dataFunctions"
    - "entityFunctions"
    - "functionName"
    properties:
      functionName:
        type: "string"
        xml:
          name: "FunctionName"
      accessType:
        type: "string"
        xml:
          name: "AccessType"
        enum:
        - "READ"
        - "READ_WRITE"
      entityFunctions:
        xml:
          name: "EntityFunctions"
        $ref: "#/definitions/CtEntityFunctions"
      dataFunctions:
        xml:
          name: "DataFunctions"
        $ref: "#/definitions/CtDataFunctions"
  Characteristics:
    type: "object"
    properties:
      commonCharacteristics:
        xml:
          name: "CommonCharacteristics"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtCommonCharacteristics"
      wirelessLineItemChars:
        xml:
          name: "WirelessLineItemChars"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtWirelessLineItemChars"
      internetLineItemChars:
        xml:
          name: "InternetLineItemChars"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtInternetLineItemChars"
      direcTVLineItemChars:
        xml:
          name: "DirecTVLineItemChars"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtDirecTVLineItemChars"
      iptvlineItemChars:
        $ref: "#/definitions/CtIPTVLineItemChars"
      voiplineItemChars:
        $ref: "#/definitions/CtVOIPLineItemChars"
  CSROrganizations:
    type: "object"
    required:
    - "errors"
    - "userId"
    properties:
      userId:
        type: "string"
        xml:
          name: "UserId"
      organizations:
        type: "array"
        xml:
          name: "Organizations"
        items:
          $ref: "#/definitions/CtOrganization"
        maxItems: 999
        minItems: 0
      organizationUnit:
        type: "array"
        xml:
          name: "OrganizationUnit"
        items:
          $ref: "#/definitions/CtOrganizationUnit"
        maxItems: 999
        minItems: 0
      errors:
        xml:
          name: "Errors"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtErrorList"
      taskTimeOut:
        type: "integer"
        format: "int32"
        xml:
          name: "TaskTimeOut"
      globalTimeOut:
        type: "integer"
        format: "int32"
        xml:
          name: "GlobalTimeOut"
    xml:
      name: "CSROrganizations"
  SLABreachEmailResponse:
    type: "object"
    properties:
      metaInformation:
        xml:
          name: "MetaInformation"
        $ref: "#/definitions/CtMetaInformation"
      currentDateTime:
        type: "string"
        format: "date-time"
        xml:
          name: "CurrentDateTime"
      slabreachDetails:
        type: "array"
        items:
          $ref: "#/definitions/CtSLABreachDetail"
    xml:
      name: "SLABreachEmailResponse"
  CtPaymentOption:
    type: "object"
    required:
    - "id"
    - "paymentMethod"
    properties:
      id:
        type: "string"
        xml:
          name: "Id"
        pattern: "PAYMENT_OPTION_[0-9]{2}"
      paymentSequence:
        type: "integer"
        xml:
          name: "PaymentSequence"
      paymentMethod:
        xml:
          name: "PaymentMethod"
        $ref: "#/definitions/CtPaymentMethod"
      selectedOptionID:
        type: "integer"
        xml:
          name: "SelectedOptionID"
        minimum: 0.0
      autoBillReason:
        type: "string"
        xml:
          name: "AutoBillReason"
        enum:
        - "PROMOTION"
        - "VOLUNTARY"
        - "CREDIT_REQUIREMENT"
      depositOption:
        type: "string"
        xml:
          name: "DepositOption"
      autoBillIndicator:
        type: "string"
        xml:
          name: "AutoBillIndicator"
        enum:
        - "Y"
        - "N"
      isFixedAmount:
        type: "string"
        xml:
          name: "IsFixedAmount"
        enum:
        - "Y"
        - "N"
      additionalDetails:
        xml:
          name: "AdditionalDetails"
        $ref: "#/definitions/CtAdditionalDetails"
      capmconfig:
        $ref: "#/definitions/CtCAPMConfig"
  FormDataMultiPart:
    type: "object"
    properties:
      contentDisposition:
        $ref: "#/definitions/ContentDisposition"
      entity:
        type: "object"
      headers:
        type: "object"
        additionalProperties:
          type: "array"
          items:
            type: "string"
      mediaType:
        $ref: "#/definitions/MediaType"
      messageBodyWorkers:
        $ref: "#/definitions/MessageBodyWorkers"
      parent:
        $ref: "#/definitions/MultiPart"
      providers:
        $ref: "#/definitions/Providers"
      bodyParts:
        type: "array"
        items:
          $ref: "#/definitions/BodyPart"
      fields:
        type: "object"
        additionalProperties:
          type: "array"
          items:
            $ref: "#/definitions/FormDataBodyPart"
      parameterizedHeaders:
        type: "object"
        additionalProperties:
          type: "array"
          items:
            $ref: "#/definitions/ParameterizedHeader"
  CtNegativeEncryptionType:
    type: "object"
    required:
    - "id"
    - "negativeType"
    properties:
      id:
        type: "string"
        xml:
          name: "ID"
      isProtected:
        type: "boolean"
        xml:
          name: "IsProtected"
        default: false
      negativeType:
        type: "string"
        xml:
          name: "NegativeType"
      value:
        type: "string"
        xml:
          name: "Value"
  CtOrderDocumentInfo:
    type: "object"
    properties:
      location:
        type: "string"
        xml:
          name: "Location"
        minLength: 1
        maxLength: 2147483647
      activity:
        type: "string"
        xml:
          name: "Activity"
        minLength: 1
        maxLength: 2147483647
      orderId:
        type: "string"
        xml:
          name: "OrderId"
        minLength: 1
        maxLength: 2147483647
  CtPDP:
    type: "object"
    properties:
      isLTEPDP:
        type: "boolean"
        xml:
          name: "IsLTEPDP"
        default: false
      isDefaultPDP:
        type: "boolean"
        xml:
          name: "IsDefaultPDP"
        default: false
      ipaddress:
        type: "string"
      ipv6Address:
        type: "string"
      ipversionType:
        type: "string"
      pdptype:
        type: "string"
  ScheduledJobsUpdateResponse:
    type: "object"
    properties:
      totalCount:
        type: "integer"
        format: "int32"
      successCount:
        type: "integer"
        format: "int32"
      failureCount:
        type: "integer"
        format: "int32"
      orders:
        type: "array"
        xml:
          name: "Orders"
        items:
          $ref: "#/definitions/CtOrders"
        maxItems: 999
        minItems: 0
      notes:
        type: "string"
        xml:
          name: "Notes"
      errors:
        xml:
          name: "Errors"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtErrorList"
    xml:
      name: "ScheduledJobsUpdateResponse"
  CtTransactionLog:
    type: "object"
    properties:
      startTime:
        type: "string"
        format: "date-time"
        xml:
          name: "StartTime"
      endTime:
        type: "string"
        format: "date-time"
        xml:
          name: "EndTime"
      type:
        type: "string"
        xml:
          name: "Type"
      id:
        type: "string"
        xml:
          name: "Id"
      service:
        type: "string"
        xml:
          name: "Service"
      serviceType:
        type: "string"
        xml:
          name: "ServiceType"
      number:
        type: "string"
        xml:
          name: "Number"
      status:
        type: "string"
        xml:
          name: "Status"
      subStatus:
        type: "string"
        xml:
          name: "SubStatus"
      orderStatus:
        type: "string"
        xml:
          name: "OrderStatus"
      comments:
        type: "string"
        xml:
          name: "Comments"
      markerId:
        type: "string"
        xml:
          name: "MarkerId"
      orderId:
        type: "string"
        xml:
          name: "OrderId"
      updateInfos:
        xml:
          name: "UpdateInfos"
        $ref: "#/definitions/CtUpdateInfos"
      queueName:
        type: "string"
        xml:
          name: "QueueName"
      transactionStatus:
        type: "string"
        xml:
          name: "TransactionStatus"
      transactionName:
        type: "string"
        xml:
          name: "TransactionName"
      recordId:
        type: "string"
        xml:
          name: "RecordId"
      losgReferenceId:
        type: "string"
        xml:
          name: "LosgReferenceId"
      changedLosgReferenceId:
        type: "string"
        xml:
          name: "ChangedLosgReferenceId"
      version:
        type: "string"
        xml:
          name: "Version"
      markerKey:
        type: "string"
        xml:
          name: "MarkerKey"
      markerId1:
        type: "string"
        xml:
          name: "MarkerId1"
      markerType1:
        type: "string"
        xml:
          name: "MarkerType1"
      emailTemplate:
        xml:
          name: "EmailTemplate"
        $ref: "#/definitions/CtEmailTemplate"
  CtSlaParameters:
    type: "object"
    required:
    - "amberMax"
    - "amberMin"
    - "greenMax"
    - "greenMin"
    - "redMax"
    - "redMin"
    properties:
      fulfillmentMethod:
        type: "string"
        xml:
          name: "FulfillmentMethod"
        minLength: 1
        maxLength: 2147483647
      greenMin:
        type: "integer"
        format: "int32"
        xml:
          name: "GreenMin"
      greenMax:
        type: "integer"
        format: "int32"
        xml:
          name: "GreenMax"
      amberMin:
        type: "integer"
        format: "int32"
        xml:
          name: "AmberMin"
      amberMax:
        type: "integer"
        format: "int32"
        xml:
          name: "AmberMax"
      redMin:
        type: "integer"
        format: "int32"
        xml:
          name: "RedMin"
      redMax:
        type: "integer"
        format: "int32"
        xml:
          name: "RedMax"
  CtEmailTemplateContent:
    type: "object"
    properties:
      templateID:
        type: "string"
        xml:
          name: "TemplateID"
      templateName:
        type: "string"
        xml:
          name: "TemplateName"
      sequence:
        type: "integer"
        format: "int32"
  CtPortNumberInfo:
    type: "object"
    properties:
      taxId:
        type: "string"
        xml:
          name: "TaxId"
        minLength: 1
        maxLength: 2147483647
      ssn:
        type: "string"
        xml:
          name: "SSN"
        minLength: 1
        maxLength: 2147483647
      portRequestNumber:
        type: "string"
        xml:
          name: "PortRequestNumber"
        minLength: 1
        maxLength: 2147483647
      portStatus:
        type: "string"
        xml:
          name: "PortStatus"
        minLength: 1
        maxLength: 2147483647
      portTelephoneNumber:
        type: "string"
        xml:
          name: "PortTelephoneNumber"
        minLength: 1
        maxLength: 2147483647
        pattern: "[0-9]{10}"
      pinOrPassword:
        type: "string"
        xml:
          name: "PinOrPassword"
        minLength: 1
        maxLength: 2147483647
      customerCode:
        type: "string"
        xml:
          name: "CustomerCode"
        minLength: 1
        maxLength: 2147483647
      portEligibility:
        type: "string"
        xml:
          name: "PortEligibility"
        enum:
        - "Y"
        - "N"
      nonATTPortIn:
        type: "string"
        xml:
          name: "NonATTPortIn"
        enum:
        - "Y"
        - "N"
      nameRef:
        type: "string"
        xml:
          name: "NameRef"
        pattern: "NAME_[0-9]{2}"
      previousAddressRef:
        type: "string"
        xml:
          name: "PreviousAddressRef"
        pattern: "ADDRESS_[0-9]{2}"
      disconnectAcknowledged:
        xml:
          name: "DisconnectAcknowledged"
        $ref: "#/definitions/CtTCAccepted"
      esrn:
        type: "string"
        xml:
          name: "ESRN"
        minLength: 1
        maxLength: 2147483647
      lerglrn:
        type: "string"
        xml:
          name: "LERGLRN"
        minLength: 1
        maxLength: 2147483647
      lslrn:
        type: "string"
        xml:
          name: "LSLRN"
        minLength: 1
        maxLength: 2147483647
      shadowLRN:
        type: "string"
        xml:
          name: "ShadowLRN"
        minLength: 1
        maxLength: 2147483647
      currentSPID:
        type: "string"
        xml:
          name: "CurrentSPID"
        minLength: 1
        maxLength: 2147483647
      isShipmentInfoUpdated:
        type: "boolean"
        xml:
          name: "IsShipmentInfoUpdated"
        default: false
      ospaccountNumber:
        type: "string"
  OrderResponse:
    type: "object"
    required:
    - "errors"
    - "orderDetails"
    properties:
      metaInformation:
        xml:
          name: "MetaInformation"
        $ref: "#/definitions/CtMetaInformation"
      orderDetails:
        type: "array"
        xml:
          name: "OrderDetails"
        items:
          $ref: "#/definitions/CtOrderDetails"
        maxItems: 999
        minItems: 1
      errors:
        xml:
          name: "Errors"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtErrorList"
    xml:
      name: "OrderResponse"
  CtTaxAuthorities:
    type: "object"
    required:
    - "taxAuthorityCode"
    - "taxAuthorityValue"
    properties:
      taxAuthorityCode:
        type: "string"
        xml:
          name: "TaxAuthorityCode"
        minLength: 1
        maxLength: 2147483647
      taxAuthorityValue:
        type: "number"
        xml:
          name: "TaxAuthorityValue"
  CtQueuePriority:
    type: "object"
    required:
    - "priorityCriteria"
    - "priorityRank"
    - "priorityValues"
    properties:
      priorityCriteria:
        type: "string"
        xml:
          name: "PriorityCriteria"
      priorityValues:
        type: "string"
        xml:
          name: "PriorityValues"
      priorityRank:
        type: "integer"
        format: "int32"
        xml:
          name: "PriorityRank"
  FalloutAge:
    type: "object"
    required:
    - "newest"
    - "oldest"
    properties:
      newest:
        type: "string"
        format: "date-time"
        xml:
          name: "Newest"
      oldest:
        type: "string"
        format: "date-time"
        xml:
          name: "Oldest"
  CtShippingFeedInfo:
    type: "object"
    properties:
      rowId:
        type: "string"
        xml:
          name: "RowId"
        minLength: 1
        maxLength: 2147483647
      mobileNumber:
        type: "string"
        xml:
          name: "MobileNumber"
        minLength: 1
        maxLength: 2147483647
        pattern: "[0-9]{10}"
      productSku:
        type: "string"
        xml:
          name: "ProductSku"
        minLength: 1
        maxLength: 2147483647
      imei:
        type: "string"
        xml:
          name: "Imei"
        minLength: 1
        maxLength: 2147483647
      yodaId:
        type: "string"
        xml:
          name: "YodaId"
        minLength: 1
        maxLength: 2147483647
      clonedYodaId:
        type: "string"
        xml:
          name: "ClonedYodaId"
        minLength: 1
        maxLength: 2147483647
      iccid:
        type: "string"
        xml:
          name: "ICCID"
        minLength: 1
        maxLength: 2147483647
      quantityShipped:
        type: "integer"
        xml:
          name: "QuantityShipped"
        minimum: 0.0
      trackingNumber:
        type: "string"
        xml:
          name: "TrackingNumber"
        minLength: 1
        maxLength: 2147483647
      carrier:
        type: "string"
        xml:
          name: "Carrier"
        minLength: 1
        maxLength: 2147483647
      shippedDate:
        type: "string"
        format: "date-time"
        xml:
          name: "ShippedDate"
  BulkUpdateUserResponse:
    type: "object"
    properties:
      requestId:
        type: "string"
        xml:
          name: "RequestId"
      numberOfUsers:
        type: "integer"
        format: "int32"
        xml:
          name: "NumberOfUsers"
      errors:
        xml:
          name: "Errors"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtErrorList"
    xml:
      name: "BulkUpdateUserResponse"
  EmailMetaData:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "string"
        xml:
          name: "Id"
      name:
        type: "string"
        xml:
          name: "Name"
      category:
        type: "string"
        xml:
          name: "Category"
      active:
        type: "boolean"
        xml:
          name: "Active"
        default: false
      enableLock:
        type: "boolean"
        xml:
          name: "EnableLock"
        default: false
      log:
        type: "string"
        xml:
          name: "Log"
      channel:
        type: "string"
  CtCAPMConfig:
    type: "object"
    properties:
      merchantID:
        type: "string"
        xml:
          name: "MerchantID"
        minLength: 1
        maxLength: 2147483647
      sourceSystem:
        type: "string"
        xml:
          name: "SourceSystem"
        minLength: 1
        maxLength: 2147483647
      sourceLocation:
        type: "string"
        xml:
          name: "SourceLocation"
        minLength: 1
        maxLength: 2147483647
      sourceUser:
        type: "string"
        xml:
          name: "SourceUser"
        minLength: 1
        maxLength: 2147483647
  CtTCAcceptedNew:
    type: "object"
    required:
    - "accepted"
    - "id"
    properties:
      id:
        type: "string"
        xml:
          name: "Id"
        pattern: "TC_[0-9]{2}"
      agreementType:
        type: "string"
        xml:
          name: "AgreementType"
        enum:
        - "PROMTIONAL_ETF_SAVING"
        - "SUPPORT_PLUS"
        - "AUTO_PAY"
        - "MOBILE_ALERT"
        - "PAPERLESS_BILLING"
        - "DIRECTV"
        - "UVERSE_TV"
        - "UVERSE_INTERNET"
        - "NON_RECURR_INST_BILLING"
        - "CON"
        - "DEV"
        - "WCA"
        - "RIA"
        - "MI"
        - "MPP"
        - "MDPP"
        - "TOS"
      agreementText:
        type: "string"
        xml:
          name: "AgreementText"
        minLength: 1
        maxLength: 2147483647
      accepted:
        type: "string"
        xml:
          name: "Accepted"
        default: "Y"
        enum:
        - "Y"
        - "N"
      timestamp:
        type: "string"
        format: "date-time"
        xml:
          name: "Timestamp"
      version:
        type: "string"
        xml:
          name: "Version"
        minLength: 1
        maxLength: 2147483647
      isOrderLevel:
        type: "boolean"
        xml:
          name: "IsOrderLevel"
        default: false
  QueuePriorityList:
    type: "object"
    required:
    - "queuePriority"
    properties:
      queuePriority:
        type: "array"
        xml:
          name: "QueuePriority"
        items:
          $ref: "#/definitions/CtQueuePriority"
        maxItems: 999
        minItems: 1
  CtCreditCard:
    type: "object"
    required:
    - "creditCardHolderName"
    - "expirationYearMonth"
    properties:
      addressRef:
        type: "string"
        xml:
          name: "AddressRef"
        pattern: "ADDRESS_[0-9]{2}"
      expirationYearMonth:
        type: "string"
        xml:
          name: "ExpirationYearMonth"
        minLength: 1
        maxLength: 2147483647
      creditCardHolderName:
        type: "string"
        minLength: 1
        maxLength: 2147483647
      paymentToken:
        xml:
          name: "PaymentToken"
        $ref: "#/definitions/CtPaymentToken"
      creditCardType:
        type: "string"
        xml:
          name: "CreditCardType"
        enum:
        - "AMERICAN_EXPRESS"
        - "DISCOVER"
        - "MASTERCARD"
        - "VISA"
        - "DINER_S_CLUB"
        - "OPTIMA"
        - "UNKNOWN"
      creditCardName:
        type: "string"
        xml:
          name: "CreditCardName"
        minLength: 1
        maxLength: 2147483647
      creditCardNumber:
        type: "string"
        xml:
          name: "CreditCardNumber"
        minLength: 1
        maxLength: 2147483647
      cardBillingZipCode:
        type: "string"
        xml:
          name: "CardBillingZipCode"
        minLength: 5
        maxLength: 9
        pattern: "[0-9]{5}([0-9]{4})?"
      preAuthDetail:
        xml:
          name: "PreAuthDetail"
        $ref: "#/definitions/CtPreAuthDetail"
      paymentConfirmationDetail:
        xml:
          name: "PaymentConfirmationDetail"
        $ref: "#/definitions/CtPaymentConfirmationDetail"
      paymentAmount:
        type: "number"
        xml:
          name: "PaymentAmount"
      cardNotValidated:
        type: "boolean"
        xml:
          name: "CardNotValidated"
        default: false
      creditCardLast4Digits:
        type: "string"
        xml:
          name: "CreditCardLast4Digits"
        minLength: 1
        maxLength: 2147483647
      saveProfileIndicator:
        type: "boolean"
        xml:
          name: "SaveProfileIndicator"
        default: false
      saveProfile:
        xml:
          name: "SaveProfile"
        $ref: "#/definitions/CtSaveProfile"
      isGiftCard:
        type: "boolean"
        xml:
          name: "IsGiftCard"
        default: false
  CtInstallationInstructionList:
    type: "object"
    required:
    - "installationInstruction"
    properties:
      installationInstruction:
        type: "array"
        xml:
          name: "InstallationInstruction"
        items:
          $ref: "#/definitions/CtInstallationInstruction"
        maxItems: 999
        minItems: 1
  OrganizationUnit:
    type: "object"
    required:
    - "errors"
    properties:
      organizationUnit:
        type: "array"
        xml:
          name: "OrganizationUnit"
        items:
          $ref: "#/definitions/CtOrganizationUnit"
        maxItems: 999
        minItems: 0
      errors:
        xml:
          name: "Errors"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtErrorList"
      taskTimeOut:
        type: "integer"
        format: "int32"
        xml:
          name: "TaskTimeOut"
      globalTimeOut:
        type: "integer"
        format: "int32"
        xml:
          name: "GlobalTimeOut"
    xml:
      name: "OrganizationUnit"
  CtNegotiateConflictCustomer:
    type: "object"
    properties:
      existingCustomerInfo:
        xml:
          name: "ExistingCustomerInfo"
        $ref: "#/definitions/CtExistingCustomerInfo"
      conflictLandlordInfo:
        xml:
          name: "ConflictLandlordInfo"
        $ref: "#/definitions/CtConflictLandlordInfo"
  CtOrderSource:
    type: "object"
    required:
    - "application"
    - "channel"
    properties:
      clientIP:
        type: "string"
        xml:
          name: "ClientIP"
        minLength: 1
        maxLength: 2147483647
      locale:
        type: "string"
        xml:
          name: "Locale"
        minLength: 1
        maxLength: 2147483647
      region:
        type: "string"
        xml:
          name: "Region"
        minLength: 1
        maxLength: 2147483647
      countryCode:
        type: "string"
        xml:
          name: "CountryCode"
        minLength: 1
        maxLength: 2147483647
      city:
        type: "string"
        xml:
          name: "City"
        minLength: 1
        maxLength: 2147483647
      county:
        type: "string"
        xml:
          name: "County"
        minLength: 1
        maxLength: 2147483647
      clientType:
        type: "string"
        xml:
          name: "ClientType"
        enum:
        - "DESKTOP"
        - "MOBILE"
        - "EXPRESS"
      channel:
        type: "string"
        xml:
          name: "Channel"
        minLength: 1
        maxLength: 2147483647
      application:
        type: "string"
        xml:
          name: "Application"
        minLength: 1
        maxLength: 2147483647
      sequenceNumber:
        type: "integer"
        xml:
          name: "SequenceNumber"
        minimum: 0.0
      zip:
        type: "string"
        xml:
          name: "Zip"
        minLength: 1
        maxLength: 2147483647
      browserID:
        type: "string"
        xml:
          name: "BrowserID"
        minLength: 1
        maxLength: 254
      mediaSource:
        type: "string"
        xml:
          name: "MediaSource"
        minLength: 1
        maxLength: 2147483647
      additionalDetails:
        xml:
          name: "AdditionalDetails"
        $ref: "#/definitions/CtAdditionalDetails"
  CtAddress:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "string"
        xml:
          name: "Id"
        pattern: "ADDRESS_[0-9]{2}"
      addressId:
        type: "string"
        xml:
          name: "AddressId"
        minLength: 1
        maxLength: 2147483647
      unparsedAddress:
        xml:
          name: "UnparsedAddress"
        $ref: "#/definitions/CtUnparsedAddress"
      parsedAddress:
        xml:
          name: "ParsedAddress"
        $ref: "#/definitions/CtParsedAddress"
      additionalDetails:
        xml:
          name: "AdditionalDetails"
        $ref: "#/definitions/CtAdditionalDetails"
  CtDataFunctions:
    type: "object"
    properties:
      dataField:
        type: "array"
        xml:
          name: "DataField"
        items:
          type: "string"
        maxItems: 999
        minItems: 0
  UnmaskResponse:
    type: "object"
    required:
    - "errors"
    properties:
      account:
        xml:
          name: "Account"
        $ref: "#/definitions/CtAccount"
      paymentOption:
        xml:
          name: "PaymentOption"
        $ref: "#/definitions/CtPaymentOption"
      errors:
        xml:
          name: "Errors"
        $ref: "#/definitions/CtErrorList"
      group:
        xml:
          name: "Group"
        $ref: "#/definitions/CtGroup"
  FraudRuleRequest:
    type: "object"
    properties:
      fraudRule:
        xml:
          name: "FraudRule"
        $ref: "#/definitions/CtFraudRule"
    xml:
      name: "FraudRuleRequest"
  LoopBackDays:
    type: "object"
    required:
    - "errors"
    properties:
      id:
        type: "string"
        xml:
          name: "ID"
      notes:
        type: "string"
        xml:
          name: "Notes"
      lookBackDays:
        type: "integer"
        format: "int32"
        xml:
          name: "LookBackDays"
      createdDate:
        type: "string"
        format: "date-time"
        xml:
          name: "CreatedDate"
      lastUpdatedBy:
        type: "string"
        xml:
          name: "LastUpdatedBy"
      lastUpdatedDate:
        type: "string"
        xml:
          name: "LastUpdatedDate"
      log:
        type: "string"
        xml:
          name: "Log"
      syncLastUpdateDate:
        type: "string"
        xml:
          name: "SyncLastUpdateDate"
      syncLastUpdateBy:
        type: "string"
        xml:
          name: "SyncLastUpdateBy"
      errors:
        xml:
          name: "Errors"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtErrorList"
    xml:
      name: "LoopBackDays"
  CtOrderTaskList:
    type: "object"
    required:
    - "orderTask"
    properties:
      orderTask:
        type: "array"
        xml:
          name: "OrderTask"
        items:
          $ref: "#/definitions/CtOrderTask"
        maxItems: 999
        minItems: 1
  CtPartnerProgramAssignment:
    type: "object"
    required:
    - "partner"
    - "partnerProgramName"
    - "program"
    properties:
      id:
        type: "integer"
        xml:
          name: "ID"
      partnerProgramName:
        type: "string"
        xml:
          name: "PartnerProgramName"
      partner:
        type: "string"
        xml:
          name: "Partner"
      program:
        type: "string"
        xml:
          name: "Program"
      englishTFN:
        type: "string"
        xml:
          name: "EnglishTFN"
      englishHoursOfOperation:
        type: "string"
        xml:
          name: "EnglishHoursOfOperation"
      spanishTFN:
        type: "string"
        xml:
          name: "SpanishTFN"
      spanishHoursOfOperation:
        type: "string"
        xml:
          name: "SpanishHoursOfOperation"
      createdBy:
        type: "string"
        xml:
          name: "CreatedBy"
      createDate:
        type: "string"
        format: "date-time"
        xml:
          name: "CreateDate"
      lastUpdatedBy:
        type: "string"
        xml:
          name: "LastUpdatedBy"
      lastUpdatedDate:
        type: "string"
        format: "date-time"
        xml:
          name: "LastUpdatedDate"
  CtTCs:
    type: "object"
    properties:
      tcaccepted:
        type: "array"
        items:
          $ref: "#/definitions/CtTCAcceptedNew"
  PartnerAssignmentRequest:
    type: "object"
    properties:
      partnerAssignment:
        type: "array"
        xml:
          name: "PartnerAssignment"
        items:
          $ref: "#/definitions/CtPartnerAssignment"
        maxItems: 999
        minItems: 0
    xml:
      name: "PartnerAssignmentRequest"
  CtUDL:
    type: "object"
    properties:
      sequenceNumber:
        type: "string"
        xml:
          name: "SequenceNumber"
        minLength: 1
        maxLength: 2147483647
      label:
        type: "string"
        xml:
          name: "Label"
        minLength: 1
        maxLength: 2147483647
      value:
        type: "string"
        xml:
          name: "Value"
        minLength: 1
        maxLength: 2147483647
  CtApproverNameRefs:
    type: "object"
    required:
    - "approverNameRef"
    properties:
      approverNameRef:
        type: "array"
        xml:
          name: "ApproverNameRef"
        items:
          type: "string"
        maxItems: 999
        minItems: 1
  QueueMetaDataDetails:
    type: "object"
    required:
    - "errors"
    properties:
      queueInfo:
        type: "array"
        xml:
          name: "QueueInfo"
        items:
          $ref: "#/definitions/CtQueueMetaData"
        maxItems: 999
        minItems: 0
      errors:
        xml:
          name: "Errors"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtErrorList"
      metaInformation:
        xml:
          name: "MetaInformation"
        $ref: "#/definitions/CtMetaInformation"
    xml:
      name: "QueueMetaDataDetails"
  CtHotsurveyDetails:
    type: "object"
    required:
    - "callID"
    - "survey"
    properties:
      callID:
        type: "string"
        xml:
          name: "CallID"
      survey:
        xml:
          name: "Survey"
        $ref: "#/definitions/Survey"
  AlertEmailList:
    type: "object"
    required:
    - "alertEmail"
    properties:
      alertEmail:
        type: "array"
        xml:
          name: "AlertEmail"
        items:
          type: "string"
        maxItems: 999
        minItems: 1
  CtPaymentMethod:
    type: "object"
    properties:
      lastPaymentMethod:
        xml:
          name: "LastPaymentMethod"
        $ref: "#/definitions/CtLastPaymentMethod"
      creditCard:
        xml:
          name: "CreditCard"
        $ref: "#/definitions/CtCreditCard"
      capm:
        xml:
          name: "CAPM"
        $ref: "#/definitions/CtCAPMPayment"
      ach:
        xml:
          name: "ACH"
        $ref: "#/definitions/CtACH"
      btm:
        xml:
          name: "BTM"
        $ref: "#/definitions/CtBTM"
      btn:
        xml:
          name: "BTN"
        $ref: "#/definitions/CtBTN"
      cash:
        xml:
          name: "Cash"
        $ref: "#/definitions/CtPaymentToken"
      store:
        xml:
          name: "Store"
        $ref: "#/definitions/CtProfileOwnerId"
      ar:
        xml:
          name: "AR"
        $ref: "#/definitions/CtAR"
      paymentTokenOnly:
        xml:
          name: "PaymentTokenOnly"
        $ref: "#/definitions/CtPaymentToken"
  OrderNotificationResponse:
    type: "object"
    required:
    - "errors"
    properties:
      orderId:
        type: "string"
        xml:
          name: "OrderId"
      notes:
        type: "string"
        xml:
          name: "Notes"
      emailContent:
        type: "string"
        xml:
          name: "EmailContent"
      errors:
        xml:
          name: "Errors"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtErrorList"
    xml:
      name: "OrderNotificationResponse"
  BulkFeedActivatationRequest:
    type: "object"
    properties:
      requestId:
        type: "string"
        xml:
          name: "RequestId"
        minLength: 1
        maxLength: 2147483647
      feedType:
        type: "string"
        xml:
          name: "FeedType"
        enum:
        - "YODA_ACTIVATION_FEED"
        - "GDDN_ATLAS_FEED"
        - "SHIP_TRACKER_FEED"
        - "BULK_STATUS_UPDATE"
      feedRequest:
        type: "array"
        xml:
          name: "FeedRequest"
        items:
          $ref: "#/definitions/CtFeedRequest"
        maxItems: 999
        minItems: 0
    xml:
      name: "BulkFeedActivatationRequest"
  StatusObject:
    type: "object"
    properties:
      statuses:
        type: "array"
        items:
          $ref: "#/definitions/Statuses"
        maxItems: 999
        minItems: 0
      error:
        type: "array"
        items:
          $ref: "#/definitions/Error"
        maxItems: 999
        minItems: 0
    xml:
      name: "statusObject"
  BulkEmailRequest:
    type: "object"
    required:
    - "reminderType"
    - "requestId"
    properties:
      requestId:
        type: "string"
        xml:
          name: "RequestId"
      reminderType:
        type: "string"
      noOfDays:
        type: "integer"
        format: "int32"
    xml:
      name: "BulkEmailRequest"
  EmailStatusResponse:
    type: "object"
    properties:
      emailStatus:
        type: "array"
        xml:
          name: "EmailStatus"
        items:
          $ref: "#/definitions/EmailStatus"
        maxItems: 999
        minItems: 0
      metaInformation:
        xml:
          name: "MetaInformation"
        $ref: "#/definitions/CtMetaInformation"
      notes:
        type: "string"
        xml:
          name: "Notes"
      errors:
        xml:
          name: "Errors"
        $ref: "#/definitions/CtErrorList"
    xml:
      name: "EmailStatusResponse"
  CtElements:
    type: "object"
    required:
    - "element"
    - "elementStatus"
    - "operation"
    - "value"
    properties:
      element:
        type: "string"
        xml:
          name: "Element"
      elementStatus:
        type: "boolean"
        xml:
          name: "ElementStatus"
        default: false
      operation:
        type: "string"
        xml:
          name: "Operation"
      value:
        type: "array"
        xml:
          name: "Value"
        items:
          $ref: "#/definitions/CtElementValues"
        maxItems: 999
        minItems: 1
  CtPaymentList:
    type: "object"
    required:
    - "payment"
    properties:
      payment:
        type: "array"
        xml:
          name: "Payment"
        items:
          $ref: "#/definitions/CtPayment"
        maxItems: 999
        minItems: 1
  CtWirelessLOSChars:
    type: "object"
    properties:
      mobileNumber:
        type: "string"
        xml:
          name: "MobileNumber"
        minLength: 1
        maxLength: 2147483647
        pattern: "[0-9]{10}"
      preOrder:
        type: "boolean"
        xml:
          name: "PreOrder"
        default: false
      availabilityDate:
        type: "string"
        format: "date-time"
        xml:
          name: "AvailabilityDate"
      activationDate:
        type: "string"
        format: "date-time"
        xml:
          name: "ActivationDate"
      calculateTaxIndicator:
        type: "boolean"
        xml:
          name: "CalculateTaxIndicator"
        default: false
      accountConversionStatus:
        type: "string"
        xml:
          name: "AccountConversionStatus"
        minLength: 1
        maxLength: 2147483647
      isPrimarySharedPlan:
        type: "boolean"
        xml:
          name: "IsPrimarySharedPlan"
        default: false
      isShippedHot:
        type: "boolean"
        xml:
          name: "IsShippedHot"
        default: false
      subscriberCrossmarketIndicator:
        type: "boolean"
        xml:
          name: "SubscriberCrossmarketIndicator"
        default: false
      isCrossUpgrade:
        type: "boolean"
        xml:
          name: "IsCrossUpgrade"
        default: false
      upgradeInfo:
        xml:
          name: "UpgradeInfo"
        $ref: "#/definitions/CtUpgradeInfo"
      upgradeQualificationInfo:
        type: "array"
        xml:
          name: "UpgradeQualificationInfo"
        items:
          $ref: "#/definitions/CtUpgradeQualificationInfo"
        maxItems: 999
        minItems: 0
      billingSystemId:
        type: "string"
        xml:
          name: "BillingSystemId"
        minLength: 1
        maxLength: 2147483647
      paymentId:
        type: "string"
        xml:
          name: "PaymentId"
        minLength: 1
        maxLength: 2147483647
      storeID:
        type: "string"
        xml:
          name: "StoreID"
        minLength: 1
        maxLength: 2147483647
      inventoryStoreId:
        type: "string"
        xml:
          name: "InventoryStoreId"
        minLength: 1
        maxLength: 2147483647
      shoppingZipCode:
        type: "string"
        xml:
          name: "ShoppingZipCode"
        minLength: 1
        maxLength: 2147483647
      splitLiabilityData:
        xml:
          name: "SplitLiabilityData"
        $ref: "#/definitions/CtSplitLiabilityData"
      coPayData:
        xml:
          name: "CoPayData"
        $ref: "#/definitions/CtCoPayData"
      subscriberStatus:
        type: "string"
        xml:
          name: "SubscriberStatus"
        enum:
        - "A"
        - "R"
        - "P"
        - "C"
        - "S"
        - "F"
        - "N"
        - "L"
      isYodaActivated:
        type: "boolean"
        xml:
          name: "IsYodaActivated"
        default: false
      isSNReleased:
        type: "boolean"
        xml:
          name: "IsSNReleased"
        default: false
  CtOrderContact:
    type: "object"
    required:
    - "nameRef"
    - "primaryEmailAddress"
    properties:
      nameRef:
        type: "string"
        xml:
          name: "NameRef"
        pattern: "NAME_[0-9]{2}"
      primaryEmailAddress:
        type: "string"
        xml:
          name: "PrimaryEmailAddress"
        minLength: 1
        maxLength: 2147483647
      secondaryEmailAddress:
        type: "string"
        xml:
          name: "SecondaryEmailAddress"
        minLength: 1
        maxLength: 2147483647
      preferredContactMethod:
        type: "string"
        xml:
          name: "PreferredContactMethod"
        minLength: 1
        maxLength: 2147483647
      preferredTimeOfDayForContact:
        type: "string"
        xml:
          name: "PreferredTimeOfDayForContact"
        minLength: 1
        maxLength: 2147483647
      orderConfirmationByEmailPermission:
        type: "boolean"
        xml:
          name: "OrderConfirmationByEmailPermission"
        default: false
      productUpdatesByEmailPermission:
        type: "boolean"
        xml:
          name: "ProductUpdatesByEmailPermission"
        default: false
      unpublishedContactByPhonePermission:
        type: "boolean"
        xml:
          name: "UnpublishedContactByPhonePermission"
        default: false
      permissionForOutboundCall:
        type: "boolean"
        xml:
          name: "PermissionForOutboundCall"
        default: false
  Fallout:
    type: "object"
    required:
    - "age"
    - "callbackPreference"
    - "count"
    - "falloutAge"
    - "lineAction"
    - "lineComboType"
    - "program"
    - "queueCategory"
    - "queueInfo"
    - "queueName"
    - "sla"
    properties:
      lineComboType:
        type: "string"
        xml:
          name: "LineComboType"
      count:
        xml:
          name: "Count"
        $ref: "#/definitions/Count"
      sla:
        xml:
          name: "Sla"
        $ref: "#/definitions/Sla"
      age:
        xml:
          name: "Age"
        $ref: "#/definitions/Age"
      falloutAge:
        xml:
          name: "FalloutAge"
        $ref: "#/definitions/FalloutAge"
      program:
        type: "string"
        xml:
          name: "Program"
      lineAction:
        type: "string"
        xml:
          name: "LineAction"
      queueName:
        type: "string"
        xml:
          name: "QueueName"
      queueCategory:
        type: "string"
        xml:
          name: "QueueCategory"
      callbackPreference:
        type: "string"
        xml:
          name: "CallbackPreference"
      queueInfo:
        type: "string"
        xml:
          name: "QueueInfo"
  UserRole:
    type: "object"
    required:
    - "errors"
    properties:
      roleDetail:
        xml:
          name: "RoleDetail"
        $ref: "#/definitions/CtRoles"
      errors:
        xml:
          name: "Errors"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtErrorList"
    xml:
      name: "UserRole"
  TransactionLogResponse:
    type: "object"
    properties:
      metaInformation:
        xml:
          name: "MetaInformation"
        $ref: "#/definitions/CtMetaInformation"
      transactionLogs:
        type: "array"
        xml:
          name: "TransactionLogs"
        items:
          $ref: "#/definitions/CtTransactionLog"
        maxItems: 999
        minItems: 0
    xml:
      name: "TransactionLogResponse"
  CtShippingInfoList:
    type: "object"
    required:
    - "shippingInfo"
    properties:
      shippingInfo:
        type: "array"
        xml:
          name: "ShippingInfo"
        items:
          $ref: "#/definitions/CtShippingInfo"
        maxItems: 999
        minItems: 1
  Statuses:
    type: "object"
    properties:
      status:
        type: "string"
      id:
        type: "string"
      emailContentId:
        type: "string"
      createdBy:
        type: "string"
      channel:
        type: "string"
      lastModifiedDate:
        type: "string"
        format: "date-time"
      lastModifiedBy:
        type: "string"
      statuses:
        type: "array"
        items:
          $ref: "#/definitions/Statuses"
        maxItems: 99
        minItems: 0
      repComment:
        type: "string"
      minDate:
        type: "integer"
      maxDate:
        type: "integer"
      defaultDate:
        type: "integer"
  CtQueueLimitInfo:
    type: "object"
    required:
    - "alertEmailList"
    - "channel"
    - "noOfOrders"
    - "queueName"
    - "thresholdNo"
    properties:
      queueName:
        type: "string"
        xml:
          name: "QueueName"
      channel:
        type: "string"
        xml:
          name: "Channel"
      noOfOrders:
        type: "integer"
        format: "int32"
        xml:
          name: "NoOfOrders"
      thresholdNo:
        type: "integer"
        format: "int32"
        xml:
          name: "ThresholdNo"
      alertEmailList:
        xml:
          name: "AlertEmailList"
        $ref: "#/definitions/AlertEmailList"
  FraudNegativeRuleRequest:
    type: "object"
    properties:
      fraudNegativeRule:
        xml:
          name: "FraudNegativeRule"
        $ref: "#/definitions/CtFraudNegativeRule"
    xml:
      name: "FraudNegativeRuleRequest"
  UserRoleResponse:
    type: "object"
    required:
    - "errors"
    properties:
      roleDetail:
        type: "array"
        xml:
          name: "RoleDetail"
        items:
          $ref: "#/definitions/CtRoles"
        maxItems: 999
        minItems: 0
      metaInformation:
        xml:
          name: "MetaInformation"
        $ref: "#/definitions/CtMetaInformation"
      errors:
        xml:
          name: "Errors"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtErrorList"
    xml:
      name: "UserRoleResponse"
  C2SStatusManagementRequest:
    type: "object"
    properties:
      c2SContent:
        xml:
          name: "C2SContent"
        $ref: "#/definitions/CtC2SContent"
    xml:
      name: "C2SStatusManagementRequest"
  ContentDisposition:
    type: "object"
    properties:
      type:
        type: "string"
      parameters:
        type: "object"
        additionalProperties:
          type: "string"
      fileName:
        type: "string"
      creationDate:
        type: "string"
        format: "date-time"
      modificationDate:
        type: "string"
        format: "date-time"
      readDate:
        type: "string"
        format: "date-time"
      size:
        type: "integer"
        format: "int64"
  CtLosgDetail:
    type: "object"
    properties:
      losgSequenceNumber:
        type: "string"
        xml:
          name: "LosgSequenceNumber"
        minLength: 1
        maxLength: 2147483647
      losgStatus:
        type: "string"
        xml:
          name: "LosgStatus"
        minLength: 1
        maxLength: 2147483647
  CtFallout:
    type: "object"
    required:
    - "fallout"
    properties:
      fallout:
        type: "array"
        xml:
          name: "Fallout"
        items:
          $ref: "#/definitions/Fallout"
        maxItems: 999
        minItems: 1
  CtAge:
    type: "object"
    required:
    - "newest"
    - "oldest"
    properties:
      newest:
        type: "string"
        format: "date-time"
        xml:
          name: "Newest"
      oldest:
        type: "string"
        format: "date-time"
        xml:
          name: "Oldest"
  EmailRequests:
    type: "object"
    properties:
      emailRequest:
        type: "array"
        xml:
          name: "EmailRequest"
        items:
          $ref: "#/definitions/CtEmailRequest"
        maxItems: 999
        minItems: 0
      metaInformation:
        xml:
          name: "MetaInformation"
        $ref: "#/definitions/CtMetaInformation"
    xml:
      name: "EmailRequests"
  Age:
    type: "object"
    required:
    - "newest"
    - "oldest"
    properties:
      newest:
        type: "string"
        format: "date-time"
        xml:
          name: "Newest"
      oldest:
        type: "string"
        format: "date-time"
        xml:
          name: "Oldest"
  CtProgramDetails:
    type: "object"
    required:
    - "program"
    properties:
      program:
        type: "array"
        xml:
          name: "Program"
        items:
          $ref: "#/definitions/Program"
        maxItems: 999
        minItems: 1
  QueueLimitResponse:
    type: "object"
    required:
    - "queueLimitInfo"
    properties:
      queueLimitInfo:
        type: "array"
        xml:
          name: "QueueLimitInfo"
        items:
          $ref: "#/definitions/CtQueueLimitInfo"
        maxItems: 999
        minItems: 1
    xml:
      name: "QueueLimitResponse"
  CreateSHMResponse:
    type: "object"
    required:
    - "element"
    - "id"
    properties:
      element:
        type: "string"
        xml:
          name: "Element"
      id:
        type: "string"
        xml:
          name: "Id"
      errors:
        xml:
          name: "Errors"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtErrorList"
    xml:
      name: "CreateSHMResponse"
  CtFacilityCheck:
    type: "object"
    properties:
      validation:
        type: "array"
        xml:
          name: "Validation"
        items:
          $ref: "#/definitions/CtValidation"
        maxItems: 999
        minItems: 0
      serviceType:
        type: "array"
        xml:
          name: "ServiceType"
        items:
          $ref: "#/definitions/CtServiceType"
        maxItems: 999
        minItems: 0
      acknowledgeIndicator:
        type: "boolean"
        xml:
          name: "AcknowledgeIndicator"
        default: false
  UserProfileResponse:
    type: "object"
    required:
    - "errors"
    properties:
      profiles:
        xml:
          name: "Profiles"
        $ref: "#/definitions/CtUserProfile"
      errors:
        xml:
          name: "Errors"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtErrorList"
    xml:
      name: "UserProfileResponse"
  CtSplitLiabilityData:
    type: "object"
    required:
    - "targetBAN"
    properties:
      targetBAN:
        type: "string"
        xml:
          name: "TargetBAN"
        minLength: 1
        maxLength: 2147483647
      targetFAN:
        type: "string"
        xml:
          name: "TargetFAN"
        minLength: 1
        maxLength: 2147483647
      addendVersion:
        type: "string"
        xml:
          name: "AddendVersion"
        minLength: 1
        maxLength: 2147483647
      telecomManagerEmailAddress:
        type: "string"
        xml:
          name: "TelecomManagerEmailAddress"
        minLength: 1
        maxLength: 2147483647
      cancelCTN:
        type: "string"
        xml:
          name: "CancelCTN"
        minLength: 1
        maxLength: 2147483647
        pattern: "[0-9]{10}"
      enrollingCTN:
        type: "string"
        xml:
          name: "EnrollingCTN"
        minLength: 1
        maxLength: 2147483647
        pattern: "[0-9]{10}"
      addendDateAndTime:
        type: "string"
        format: "date-time"
        xml:
          name: "AddendDateAndTime"
      splitLiabilityValueIndicator:
        type: "boolean"
        xml:
          name: "SplitLiabilityValueIndicator"
        default: false
      oneTimeChargeIndicator:
        type: "boolean"
        xml:
          name: "OneTimeChargeIndicator"
        default: false
  CtFinalBillAccount:
    type: "object"
    required:
    - "affiliateAccountNumber"
    - "minimumAmountDue"
    properties:
      affiliateAccountNumber:
        type: "string"
        xml:
          name: "AffiliateAccountNumber"
        minLength: 1
        maxLength: 2147483647
      minimumAmountDue:
        type: "number"
        xml:
          name: "MinimumAmountDue"
  PartnerInfos:
    type: "object"
    properties:
      partnerInfo:
        type: "array"
        xml:
          name: "PartnerInfo"
        items:
          $ref: "#/definitions/CtPartnerInfo"
        maxItems: 999
        minItems: 0
  InquireOrderStatusResponeInfo:
    type: "object"
    properties:
      orderNumber:
        type: "string"
        xml:
          name: "OrderNumber"
          namespace: "http://www.att.com/ooce/core"
      requestId:
        type: "string"
        xml:
          name: "RequestId"
          namespace: "http://www.att.com/ooce/core"
      orderStatus:
        xml:
          name: "OrderStatus"
          namespace: "http://www.att.com/ooce/core"
        $ref: "#/definitions/CtOrderStatus"
      emailMsg:
        type: "string"
        xml:
          namespace: "http://www.att.com/ooce/core"
      description:
        type: "string"
        xml:
          namespace: "http://www.att.com/ooce/core"
      items:
        xml:
          namespace: "http://www.att.com/ooce/core"
        $ref: "#/definitions/CtLineItemList"
      additionalDetails:
        xml:
          namespace: "http://www.att.com/ooce/core"
        $ref: "#/definitions/AdditionalDetails"
      error:
        type: "string"
        xml:
          namespace: "http://www.att.com/ooce/core"
      errorCode:
        type: "string"
        xml:
          namespace: "http://www.att.com/ooce/core"
    xml:
      name: "inquireOrderStatusResponeInfo"
      namespace: "http://www.att.com/ooce/core"
  CtC2SContent:
    type: "object"
    properties:
      id:
        type: "string"
        xml:
          name: "ID"
      storeStatus:
        type: "string"
        xml:
          name: "StoreStatus"
      age:
        type: "integer"
        format: "int32"
        xml:
          name: "Age"
      enableStatus:
        type: "boolean"
        xml:
          name: "EnableStatus"
        default: false
      log:
        type: "string"
        xml:
          name: "Log"
      lastUpdatedBy:
        type: "string"
        xml:
          name: "LastUpdatedBy"
      createdDate:
        type: "string"
        format: "date-time"
        xml:
          name: "CreatedDate"
      lastUpdatedDate:
        type: "string"
        format: "date-time"
        xml:
          name: "LastUpdatedDate"
      activeStatus:
        type: "boolean"
        xml:
          name: "ActiveStatus"
        default: false
  PartnerProgramResponse:
    type: "object"
    required:
    - "status"
    properties:
      status:
        type: "string"
        xml:
          name: "Status"
      id:
        type: "integer"
        xml:
          name: "ID"
      partnerProgramAssignment:
        type: "array"
        xml:
          name: "PartnerProgramAssignment"
        items:
          $ref: "#/definitions/CtPartnerProgramAssignment"
        maxItems: 999
        minItems: 0
      errors:
        xml:
          name: "Errors"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtErrorList"
    xml:
      name: "PartnerProgramResponse"
  CtAuditLog:
    type: "object"
    properties:
      auditLogId:
        type: "string"
        xml:
          name: "AuditLogId"
      logTime:
        type: "string"
        format: "date-time"
        xml:
          name: "LogTime"
      service:
        type: "string"
        xml:
          name: "Service"
      flowType:
        type: "string"
        xml:
          name: "FlowType"
      ctn:
        type: "string"
        xml:
          name: "Ctn"
      billing:
        type: "string"
        xml:
          name: "Billing"
      fulfillment:
        type: "string"
        xml:
          name: "Fulfillment"
      exitStatus:
        type: "string"
        xml:
          name: "ExitStatus"
      xmlData:
        type: "string"
        xml:
          name: "XmlData"
      status:
        type: "string"
        xml:
          name: "Status"
      comments:
        type: "string"
        xml:
          name: "Comments"
      apitype:
        type: "string"
      apiname:
        type: "string"
  CtStateId:
    type: "object"
    required:
    - "idNumber"
    - "state"
    properties:
      idNumber:
        type: "string"
        xml:
          name: "IdNumber"
        minLength: 1
        maxLength: 2147483647
      state:
        type: "string"
        xml:
          name: "State"
        enum:
        - "AA"
        - "AK"
        - "AL"
        - "AR"
        - "AZ"
        - "AP"
        - "AE"
        - "CA"
        - "CO"
        - "CT"
        - "DC"
        - "DE"
        - "FL"
        - "FPO"
        - "GA"
        - "GU"
        - "HI"
        - "IA"
        - "ID"
        - "IL"
        - "IN"
        - "KS"
        - "KY"
        - "LA"
        - "MA"
        - "MD"
        - "ME"
        - "MI"
        - "MN"
        - "MO"
        - "MS"
        - "MT"
        - "NC"
        - "ND"
        - "NE"
        - "NH"
        - "NJ"
        - "NM"
        - "NV"
        - "NY"
        - "OH"
        - "OK"
        - "OR"
        - "PA"
        - "PR"
        - "RI"
        - "SC"
        - "SD"
        - "TN"
        - "TX"
        - "UT"
        - "VA"
        - "VI"
        - "VT"
        - "WA"
        - "WI"
        - "WV"
        - "WY"
  CtSchedulingInfoList:
    type: "object"
    required:
    - "schedulingInfo"
    properties:
      schedulingInfo:
        type: "array"
        xml:
          name: "SchedulingInfo"
        items:
          $ref: "#/definitions/CtSchedulingInfo"
        maxItems: 999
        minItems: 1
  CtListingType:
    type: "object"
    properties:
      listingType:
        type: "string"
        xml:
          name: "ListingType"
        minLength: 1
        maxLength: 2147483647
      releaseInfoForBilling:
        type: "boolean"
        xml:
          name: "ReleaseInfoForBilling"
        default: false
  CtAddressList:
    type: "object"
    required:
    - "address"
    properties:
      address:
        type: "array"
        xml:
          name: "Address"
        items:
          $ref: "#/definitions/CtAddress"
        maxItems: 999
        minItems: 1
  CtChildOrders:
    type: "object"
    required:
    - "ctChildOrder"
    properties:
      ctChildOrder:
        type: "array"
        xml:
          name: "ct_ChildOrder"
        items:
          type: "string"
        maxItems: 999
        minItems: 1
  PartnerResponse:
    type: "object"
    required:
    - "status"
    properties:
      status:
        type: "string"
        xml:
          name: "Status"
      partner:
        type: "array"
        xml:
          name: "Partner"
        items:
          $ref: "#/definitions/CtPartner"
        maxItems: 999
        minItems: 0
      errors:
        xml:
          name: "Errors"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtErrorList"
    xml:
      name: "PartnerResponse"
  CtComponentConfiguration:
    type: "object"
    properties:
      componentCode:
        type: "string"
        xml:
          name: "ComponentCode"
        minLength: 0
        maxLength: 256
      componentOperations:
        type: "array"
        xml:
          name: "ComponentOperations"
        items:
          $ref: "#/definitions/CtOperationInfo"
        maxItems: 999
        minItems: 0
      componentPath:
        type: "string"
        xml:
          name: "ComponentPath"
      componentMapRequired:
        type: "boolean"
        xml:
          name: "ComponentMapRequired"
        default: false
      attributes:
        type: "array"
        xml:
          name: "Attributes"
        items:
          $ref: "#/definitions/CtAttributeInfo"
        maxItems: 999
        minItems: 0
  CtWirelessLineItemChars:
    type: "object"
    properties:
      partnerCode:
        type: "string"
        xml:
          name: "PartnerCode"
        minLength: 1
        maxLength: 2147483647
      distributionChannelId:
        type: "string"
        xml:
          name: "DistributionChannelId"
        minLength: 1
        maxLength: 2147483647
      newSalesChannelID:
        type: "string"
        xml:
          name: "NewSalesChannelID"
        minLength: 1
        maxLength: 2147483647
      tradeInInfo:
        xml:
          name: "TradeInInfo"
        $ref: "#/definitions/CtTradeInInfo"
      isNCIEligible:
        type: "boolean"
        default: false
      offerType:
        type: "string"
        xml:
          name: "OfferType"
        minLength: 1
        maxLength: 2147483647
      availabilityType:
        type: "string"
        xml:
          name: "AvailabilityType"
        minLength: 1
        maxLength: 2147483647
      storeStatus:
        xml:
          name: "StoreStatus"
        $ref: "#/definitions/CtStoreStatus"
      pdp:
        xml:
          name: "PDP"
        $ref: "#/definitions/CtPDP"
      omniReferenceNumber:
        type: "string"
        xml:
          name: "OmniReferenceNumber"
        minLength: 1
        maxLength: 2147483647
      omniRequestStatus:
        type: "string"
        xml:
          name: "OmniRequestStatus"
        minLength: 1
        maxLength: 2147483647
  CtQA:
    type: "object"
    required:
    - "answer"
    - "question"
    properties:
      question:
        type: "string"
        xml:
          name: "Question"
      answer:
        type: "string"
        xml:
          name: "Answer"
  CtC2SOrderStatusMapping:
    type: "object"
    properties:
      oceStatus:
        type: "string"
        xml:
          name: "OceStatus"
      oceSubStatus:
        type: "string"
        xml:
          name: "OceSubStatus"
      activeStatus:
        type: "boolean"
        xml:
          name: "ActiveStatus"
        default: false
      reason:
        type: "string"
        xml:
          name: "Reason"
        enum:
        - "CSCRSTATUSMAPPING"
        - "OCECSCRCANCELREASON"
        - "CSCROCECANCELREASON"
      fulfillmentType:
        type: "string"
        xml:
          name: "FulfillmentType"
        enum:
        - "DF"
        - "C_2_S"
      cancellationSystem:
        type: "string"
        xml:
          name: "CancellationSystem"
      cscrstatus:
        type: "string"
  CtUDLs:
    type: "object"
    required:
    - "udl"
    properties:
      udl:
        type: "array"
        xml:
          name: "UDL"
        items:
          $ref: "#/definitions/CtUDL"
        maxItems: 999
        minItems: 1
  EmailTriggerRequest:
    type: "object"
    properties:
      id:
        type: "string"
        xml:
          name: "Id"
      status:
        type: "string"
        xml:
          name: "Status"
      subStatus:
        type: "string"
        xml:
          name: "SubStatus"
      emailTrigger:
        type: "string"
        xml:
          name: "EmailTrigger"
      log:
        type: "string"
        xml:
          name: "Log"
      channel:
        type: "string"
  CtLoginProfile:
    type: "object"
    properties:
      orderInitiator:
        type: "string"
        xml:
          name: "OrderInitiator"
        minLength: 1
        maxLength: 2147483647
      profileId:
        type: "string"
        xml:
          name: "ProfileId"
        minLength: 1
        maxLength: 2147483647
      userId:
        type: "string"
        xml:
          name: "UserId"
        minLength: 1
        maxLength: 2147483647
  CtVOIPLOSChars:
    type: "object"
    properties:
      e911InfoRef:
        type: "string"
        xml:
          name: "E911InfoRef"
        pattern: "E911INFO_[0-9]{2}"
      directoryListing:
        type: "array"
        xml:
          name: "DirectoryListing"
        items:
          $ref: "#/definitions/CtListing"
        maxItems: 999
        minItems: 0
      reservedTelephoneNumber:
        type: "string"
        xml:
          name: "ReservedTelephoneNumber"
        minLength: 7
        maxLength: 10
        pattern: "([a-zA-Z0-9]{3})?[a-zA-Z0-9]{7}"
  CtFraudCheckResult:
    type: "object"
    properties:
      fraudName:
        type: "string"
        xml:
          name: "FraudName"
        minLength: 1
        maxLength: 2147483647
      fraudResult:
        type: "string"
        xml:
          name: "FraudResult"
        minLength: 1
        maxLength: 2147483647
  CtQueueMetaData:
    type: "object"
    required:
    - "lineSubStatus"
    - "ownerDetails"
    - "shippingCodeList"
    - "userRoles"
    properties:
      queueId:
        type: "string"
        xml:
          name: "QueueId"
      queueName:
        type: "string"
        xml:
          name: "QueueName"
      queueDescription:
        type: "string"
        xml:
          name: "QueueDescription"
      isShowLineCombo:
        type: "boolean"
        default: false
      slaDetailsList:
        xml:
          name: "SlaDetailsList"
        $ref: "#/definitions/SlaDetailsList"
      vaccantAlert:
        type: "integer"
        format: "int32"
        xml:
          name: "VaccantAlert"
      vaccantAlertEmail:
        type: "string"
        xml:
          name: "VaccantAlertEmail"
      creationDate:
        type: "string"
        format: "date-time"
        xml:
          name: "CreationDate"
      lastModified:
        type: "string"
        format: "date-time"
        xml:
          name: "LastModified"
      thresholdCount:
        type: "integer"
        format: "int32"
        xml:
          name: "ThresholdCount"
      isOrderLevelQueue:
        type: "boolean"
        default: false
      channel:
        type: "string"
        xml:
          name: "Channel"
      active:
        type: "boolean"
        xml:
          name: "Active"
        default: false
      lineSubStatus:
        type: "array"
        xml:
          name: "LineSubStatus"
        items:
          $ref: "#/definitions/LineSubStatus"
        maxItems: 999
        minItems: 1
      priority:
        type: "integer"
        format: "int32"
        xml:
          name: "Priority"
      releaseLockAfter:
        type: "integer"
        format: "int32"
        xml:
          name: "ReleaseLockAfter"
      effectiveFrom:
        type: "string"
        format: "date-time"
        xml:
          name: "EffectiveFrom"
      effectiveTill:
        type: "string"
        format: "date-time"
        xml:
          name: "EffectiveTill"
      sku:
        type: "string"
        xml:
          name: "SKU"
      ownerDetails:
        xml:
          name: "OwnerDetails"
        $ref: "#/definitions/OwnerDetails"
      userRoles:
        xml:
          name: "UserRoles"
        $ref: "#/definitions/UserRoles"
      queueInfo:
        type: "string"
        xml:
          name: "QueueInfo"
      repComments:
        type: "string"
        xml:
          name: "RepComments"
      shippingCodeList:
        type: "array"
        xml:
          name: "ShippingCodeList"
        items:
          $ref: "#/definitions/ShippingCodeList"
        maxItems: 999
        minItems: 1
      queuePriorityList:
        xml:
          name: "QueuePriorityList"
        $ref: "#/definitions/QueuePriorityList"
  Group:
    type: "object"
    properties:
      id:
        type: "string"
        xml:
          name: "Id"
      subStatus:
        type: "string"
  CtExistingCustomerInfo:
    type: "object"
    properties:
      billingTelephoneNumber:
        type: "string"
        xml:
          name: "BillingTelephoneNumber"
        minLength: 1
        maxLength: 2147483647
        pattern: "[0-9]{10}"
      billingAccountNumber:
        type: "string"
        xml:
          name: "BillingAccountNumber"
        minLength: 1
        maxLength: 2147483647
      contact:
        xml:
          name: "Contact"
        $ref: "#/definitions/CtNegotiateConflictContact"
      wscorderNumber:
        type: "string"
  CtLoSGStatus:
    type: "object"
    required:
    - "status"
    properties:
      status:
        type: "string"
        xml:
          name: "Status"
        enum:
        - "SYS_RECEIVED"
        - "SYS_PROCESSING"
        - "IN_QUEUE"
        - "SYS_HOLD"
        - "REP_PROCESSING"
        - "FOLLOWUP_REQUIRED"
        - "PENDING"
        - "SUBMITTED"
        - "SHIPPED"
        - "ACTIVATED"
        - "CANCELED"
        - "COMPLETED"
        - "NO_CHANGE"
        - "APPROVED"
        - "DENIED"
        - "PENDING_APPROVAL"
        - "ACCEPTED"
        - "COMPLETE"
        - "NETWORK_ACTIVE"
        - "SUSPENDED"
        - "ONHOLD"
        - "SYSTEM_RECEIVED"
        - "READYFORPROCESSING"
        - "PARTIALLY_CANCELED"
      subStatus:
        type: "string"
        xml:
          name: "SubStatus"
        minLength: 1
        maxLength: 2147483647
      operation:
        type: "string"
        xml:
          name: "Operation"
        minLength: 1
        maxLength: 2147483647
      falloutCode:
        type: "string"
        xml:
          name: "FalloutCode"
        minLength: 1
        maxLength: 2147483647
      falloutDescription:
        type: "string"
        xml:
          name: "FalloutDescription"
        minLength: 1
        maxLength: 2147483647
  CtStoreStatus:
    type: "object"
    properties:
      previous:
        type: "string"
        xml:
          name: "Previous"
        minLength: 1
        maxLength: 2147483647
      current:
        type: "string"
        xml:
          name: "Current"
        minLength: 1
        maxLength: 2147483647
  CtServiceQualificationList:
    type: "object"
    properties:
      serviceFacilityQualification:
        type: "array"
        xml:
          name: "ServiceFacilityQualification"
        items:
          $ref: "#/definitions/CtServiceFacilityAndQualification"
        maxItems: 999
        minItems: 0
  LookupResult:
    type: "object"
    properties:
      result:
        type: "array"
        items:
          $ref: "#/definitions/Result"
        maxItems: 999
        minItems: 0
      listType:
        type: "string"
        xml:
          attribute: true
  UpdateLookupRequest:
    type: "object"
    required:
    - "request"
    properties:
      request:
        type: "array"
        items:
          $ref: "#/definitions/Request"
        maxItems: 999
        minItems: 1
  Result:
    type: "object"
    required:
    - "channel"
    - "id"
    - "isDisplayable"
    - "lastUpdatedDate"
    - "lookupCode"
    - "lookupValue"
    - "partnerName"
    - "remark"
    - "roleName"
    - "sequence"
    - "updatedBy"
    properties:
      id:
        type: "integer"
        format: "int32"
        xml:
          name: "Id"
      lookupCode:
        type: "string"
      lookupValue:
        type: "string"
      isDisplayable:
        type: "integer"
        format: "int32"
      sequence:
        type: "integer"
        format: "int32"
      remark:
        type: "string"
      channel:
        type: "string"
      partnerName:
        type: "string"
      roleName:
        type: "string"
      updatedBy:
        type: "string"
      lastUpdatedDate:
        type: "string"
      lookupResult:
        type: "array"
        items:
          $ref: "#/definitions/LookupResult"
        maxItems: 999
        minItems: 0
  CtEscalationTeam:
    type: "object"
    properties:
      team:
        type: "array"
        xml:
          name: "Team"
        items:
          type: "string"
      assignedTo:
        type: "array"
        xml:
          name: "AssignedTo"
        items:
          type: "string"
  CtCommonCharacteristics:
    type: "object"
    properties:
      componentConfiguration:
        type: "array"
        xml:
          name: "ComponentConfiguration"
        items:
          $ref: "#/definitions/CtComponentConfiguration"
        maxItems: 999
        minItems: 0
      requestComponentGroup:
        type: "string"
        xml:
          name: "RequestComponentGroup"
      ignorePricePlanCode:
        type: "string"
        xml:
          name: "IgnorePricePlanCode"
        enum:
        - "Y"
        - "N"
      isPlanAndFeatureUpdated:
        type: "boolean"
        xml:
          name: "IsPlanAndFeatureUpdated"
        default: false
  CtEmailRequest:
    type: "object"
    properties:
      searchConditions:
        type: "array"
        xml:
          name: "SearchConditions"
        items:
          $ref: "#/definitions/CtSearchConditions"
        maxItems: 999
        minItems: 0
      transactionDetails:
        xml:
          name: "TransactionDetails"
        $ref: "#/definitions/CtTransactionLog"
  PartnerProgramRequest:
    type: "object"
    properties:
      partnerProgramAssignment:
        type: "array"
        xml:
          name: "PartnerProgramAssignment"
        items:
          $ref: "#/definitions/CtPartnerProgramAssignment"
        maxItems: 999
        minItems: 0
    xml:
      name: "PartnerProgramRequest"
  CtBankingPartner:
    type: "object"
    properties:
      customerID:
        type: "string"
        xml:
          name: "CustomerID"
        minLength: 1
        maxLength: 2147483647
      name:
        type: "string"
        xml:
          name: "Name"
        minLength: 1
        maxLength: 2147483647
  CtExternalReference:
    type: "object"
    properties:
      idRef:
        type: "string"
        xml:
          name: "IdRef"
      type:
        type: "string"
        xml:
          name: "Type"
      system:
        type: "string"
        xml:
          name: "System"
  CtFeedResponse:
    type: "object"
    properties:
      customerOrderNumber:
        type: "string"
        xml:
          name: "CustomerOrderNumber"
        minLength: 1
        maxLength: 2147483647
      orderUpdateStatus:
        type: "array"
        xml:
          name: "OrderUpdateStatus"
        items:
          $ref: "#/definitions/CtOrderUpdateStatus"
        maxItems: 999
        minItems: 0
  EscalationSearchResponse:
    type: "object"
    required:
    - "errors"
    properties:
      metaInformation:
        xml:
          name: "MetaInformation"
        $ref: "#/definitions/CtMetaInformation"
      escalationSearch:
        type: "array"
        xml:
          name: "EscalationSearch"
        items:
          $ref: "#/definitions/CtEscalationSearch"
        maxItems: 999
        minItems: 0
      errors:
        xml:
          name: "Errors"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtErrorList"
    xml:
      name: "EscalationSearchResponse"
  CtConnecTechInstallationOption:
    type: "object"
    properties:
      connecTechInstallationOption:
        type: "string"
        xml:
          name: "ConnecTechInstallationOption"
        enum:
        - "HNI"
        - "CCI"
        - "SUPPORT_PLUS"
        - "NONE"
      connectechServiceDate:
        type: "string"
        format: "date-time"
        xml:
          name: "ConnectechServiceDate"
  OwnershipDetails:
    type: "object"
    required:
    - "owner"
    - "percentage"
    properties:
      owner:
        type: "string"
        xml:
          name: "Owner"
      percentage:
        type: "integer"
        format: "int32"
        xml:
          name: "Percentage"
  Request:
    type: "object"
    required:
    - "channel"
    - "code"
    - "id"
    - "isDisplayable"
    - "lookupType"
    - "updatedBy"
    - "value"
    properties:
      id:
        type: "integer"
        format: "int32"
        xml:
          name: "Id"
      lookupType:
        type: "string"
      code:
        type: "string"
      value:
        type: "string"
      longDesc:
        type: "string"
      dispSequence:
        type: "number"
      isDisplayable:
        type: "number"
      effectiveDate:
        type: "string"
        format: "date-time"
      inactiveDate:
        type: "string"
        format: "date-time"
      insertedBy:
        type: "string"
      insertedDate:
        type: "string"
        format: "date-time"
      updatedBy:
        type: "string"
      lastUpdatedDate:
        type: "string"
        format: "date-time"
      remark:
        type: "string"
      channel:
        type: "string"
      partnerName:
        type: "string"
      roleName:
        type: "string"
      upLookupRequest:
        type: "array"
        items:
          $ref: "#/definitions/UpdateLookupRequest"
        maxItems: 999
        minItems: 0
  OrderNotification:
    type: "object"
    required:
    - "channel"
    - "conversationId"
    - "notificationMethod"
    - "notificationType"
    - "outerTemplateId"
    properties:
      outerTemplateId:
        type: "string"
        xml:
          name: "OuterTemplateId"
      notificationMethod:
        type: "string"
        xml:
          name: "NotificationMethod"
      channel:
        type: "string"
        xml:
          name: "Channel"
      attributes:
        type: "array"
        xml:
          name: "Attributes"
        items:
          $ref: "#/definitions/CtDynamicAttribute"
        maxItems: 99
        minItems: 0
      conversationId:
        type: "string"
        xml:
          name: "ConversationId"
      operation:
        type: "string"
        xml:
          name: "Operation"
      notificationType:
        type: "string"
        xml:
          name: "NotificationType"
      orderDetails:
        xml:
          name: "OrderDetails"
        $ref: "#/definitions/CtOrderDetails"
    xml:
      name: "OrderNotification"
  EmailTemplateResponse:
    type: "object"
    required:
    - "templateInfo"
    properties:
      metaInformation:
        xml:
          name: "MetaInformation"
        $ref: "#/definitions/CtMetaInformation"
      templateInfo:
        type: "array"
        xml:
          name: "TemplateInfo"
        items:
          $ref: "#/definitions/EmailTemplate"
        maxItems: 99
        minItems: 1
      notes:
        type: "string"
        xml:
          name: "Notes"
      errors:
        xml:
          name: "Errors"
        $ref: "#/definitions/CtErrorList"
  CtEmailContent:
    type: "object"
    properties:
      contentId:
        type: "string"
        xml:
          name: "ContentId"
      contentName:
        type: "string"
        xml:
          name: "ContentName"
      contentType:
        type: "string"
        xml:
          name: "ContentType"
      deliveryType:
        type: "string"
        xml:
          name: "DeliveryType"
      language:
        type: "string"
        xml:
          name: "Language"
      status:
        type: "string"
        xml:
          name: "Status"
      enableLock:
        type: "string"
        xml:
          name: "EnableLock"
      contentText:
        type: "string"
        xml:
          name: "ContentText"
      log:
        type: "string"
        xml:
          name: "Log"
      channel:
        type: "string"
  CtCAPMPayment:
    type: "object"
    properties:
      preAuthDetail:
        xml:
          name: "PreAuthDetail"
        $ref: "#/definitions/CtPreAuthDetail"
      paymentConfirmationDetail:
        xml:
          name: "PaymentConfirmationDetail"
        $ref: "#/definitions/CtPaymentConfirmationDetail"
      profileName:
        type: "string"
        xml:
          name: "ProfileName"
        minLength: 1
        maxLength: 50
      profileOwnerId:
        type: "string"
        xml:
          name: "ProfileOwnerId"
        minLength: 1
        maxLength: 50
      totalAmount:
        type: "number"
        format: "double"
        xml:
          name: "TotalAmount"
      customerAgreementVersion:
        type: "string"
        xml:
          name: "CustomerAgreementVersion"
        minLength: 1
        maxLength: 2147483647
      zipCode:
        type: "string"
        xml:
          name: "ZipCode"
        minLength: 5
        maxLength: 9
        pattern: "[0-9]{5}([0-9]{4})?"
      creditCardType:
        type: "string"
        xml:
          name: "CreditCardType"
        enum:
        - "AMERICAN_EXPRESS"
        - "DISCOVER"
        - "MASTERCARD"
        - "VISA"
        - "DINER_S_CLUB"
        - "OPTIMA"
        - "UNKNOWN"
      isCCUpdated:
        type: "boolean"
        xml:
          name: "IsCCUpdated"
        default: false
      isSavedProfile:
        type: "boolean"
        xml:
          name: "IsSavedProfile"
        default: false
      isGiftCard:
        type: "boolean"
        xml:
          name: "IsGiftCard"
        default: false
      isProfileCreated:
        type: "boolean"
        xml:
          name: "IsProfileCreated"
        default: false
      isProfileSaved:
        type: "boolean"
        xml:
          name: "IsProfileSaved"
        default: false
      capmlast4Digits:
        type: "string"
  EmailStatus:
    type: "object"
    required:
    - "customerFacing"
    - "status"
    properties:
      channel:
        type: "string"
      status:
        type: "string"
        xml:
          name: "Status"
      customerFacing:
        type: "string"
        xml:
          name: "CustomerFacing"
      log:
        type: "string"
        xml:
          name: "Log"
      defaultReason:
        type: "string"
        xml:
          name: "DefaultReason"
      active:
        type: "boolean"
        xml:
          name: "Active"
        default: false
  CtCtn:
    type: "object"
    required:
    - "count"
    - "value"
    properties:
      count:
        type: "integer"
        format: "int32"
        xml:
          name: "Count"
      value:
        type: "string"
        xml:
          name: "Value"
      dateLimit:
        type: "array"
        xml:
          name: "DateLimit"
        items:
          $ref: "#/definitions/CtDateLimit"
        maxItems: 99
        minItems: 0
  CtLineItemTax:
    type: "object"
    properties:
      taxLineID:
        type: "integer"
        xml:
          name: "TaxLineID"
      taxCode:
        type: "string"
        xml:
          name: "TaxCode"
        minLength: 1
        maxLength: 2147483647
      memo:
        type: "string"
        xml:
          name: "Memo"
        minLength: 1
        maxLength: 2147483647
      printName:
        type: "string"
        xml:
          name: "PrintName"
        minLength: 1
        maxLength: 2147483647
      taxableIndicator:
        type: "string"
        xml:
          name: "TaxableIndicator"
        minLength: 1
        maxLength: 2147483647
      jurisdictionLevel:
        type: "string"
        xml:
          name: "JurisdictionLevel"
        minLength: 1
        maxLength: 2147483647
      jurisdictionName:
        type: "string"
        xml:
          name: "JurisdictionName"
        minLength: 1
        maxLength: 2147483647
      taxAmount:
        type: "number"
        xml:
          name: "TaxAmount"
      taxRate:
        type: "number"
        xml:
          name: "TaxRate"
      taxDate:
        type: "string"
        format: "date-time"
        xml:
          name: "TaxDate"
      taxAuthoritiesList:
        xml:
          name: "TaxAuthoritiesList"
        $ref: "#/definitions/CtTaxAuthoritiesList"
      skuspecificIndicator:
        type: "string"
  CtUserProfile:
    type: "object"
    properties:
      id:
        type: "string"
        xml:
          name: "Id"
      login:
        type: "string"
        xml:
          name: "Login"
      firstName:
        type: "string"
        xml:
          name: "FirstName"
      lastName:
        type: "string"
        xml:
          name: "LastName"
      email:
        type: "string"
        xml:
          name: "Email"
      status:
        type: "string"
        xml:
          name: "Status"
      salesCode:
        type: "string"
        xml:
          name: "SalesCode"
      role:
        type: "string"
        xml:
          name: "Role"
      workPhone:
        type: "string"
        xml:
          name: "WorkPhone"
      lastModifiedBy:
        type: "string"
        xml:
          name: "LastModifiedBy"
      createdBy:
        type: "string"
        xml:
          name: "CreatedBy"
      lastModifiedDate:
        type: "string"
        format: "date-time"
        xml:
          name: "LastModifiedDate"
      creationDate:
        type: "string"
        format: "date-time"
        xml:
          name: "CreationDate"
      startDate:
        type: "string"
        format: "date-time"
        xml:
          name: "StartDate"
      endDate:
        type: "string"
        format: "date-time"
        xml:
          name: "EndDate"
      organizations:
        type: "array"
        xml:
          name: "Organizations"
        items:
          $ref: "#/definitions/CtOrganization"
        maxItems: 999
        minItems: 0
      organizationUnit:
        type: "array"
        xml:
          name: "OrganizationUnit"
        items:
          $ref: "#/definitions/CtOrganizationUnit"
        maxItems: 999
        minItems: 0
  CtDirecTVLOSChars:
    type: "object"
    properties:
      serviceAgreement:
        type: "string"
        xml:
          name: "ServiceAgreement"
        minLength: 1
        maxLength: 2147483647
      offerLanguage:
        type: "string"
        xml:
          name: "OfferLanguage"
        enum:
        - "ENGLISH"
        - "SPANISH"
        - "ENGLISH_INTERNATIONAL"
        - "SPANISH_INTERNATIONAL"
      dealerID:
        type: "string"
        xml:
          name: "DealerID"
        minLength: 1
        maxLength: 2147483647
      marketingSourceCode:
        type: "string"
        xml:
          name: "MarketingSourceCode"
        minLength: 1
        maxLength: 2147483647
      moveInOrder:
        type: "string"
        xml:
          name: "MoveInOrder"
        enum:
        - "Y"
        - "N"
  CtConflictingServiceInfoRefs:
    type: "object"
    required:
    - "conflictingServiceInfoRef"
    properties:
      conflictingServiceInfoRef:
        type: "array"
        xml:
          name: "ConflictingServiceInfoRef"
        items:
          type: "string"
        maxItems: 999
        minItems: 1
  CtCassAddress:
    type: "object"
    properties:
      addressLine:
        type: "array"
        xml:
          name: "AddressLine"
        items:
          type: "string"
        maxItems: 999
        minItems: 0
  UpdateOrderStatusResponse:
    type: "object"
    required:
    - "errors"
    properties:
      orderId:
        type: "object"
        xml:
          name: "OrderId"
      errors:
        xml:
          name: "Errors"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtErrorList"
    xml:
      name: "UpdateOrderStatusResponse"
  CtUnifiedAccount:
    type: "object"
    properties:
      unifiedAccountRef:
        type: "string"
        xml:
          name: "UnifiedAccountRef"
        pattern: "ACCOUNT_[0-9]{2}"
      convergeOrder:
        type: "boolean"
        xml:
          name: "ConvergeOrder"
        default: false
      convergeValidation:
        type: "boolean"
        xml:
          name: "ConvergeValidation"
        default: false
      unifiedAccountDiscount:
        type: "number"
        xml:
          name: "UnifiedAccountDiscount"
      unifiedAccountRebate:
        type: "number"
        xml:
          name: "UnifiedAccountRebate"
      unifiedAccountReward:
        type: "number"
        xml:
          name: "UnifiedAccountReward"
      unifiedAccountPendingIndicator:
        type: "string"
        xml:
          name: "UnifiedAccountPendingIndicator"
        enum:
        - "Y"
        - "N"
      unifiedAccountExistingIndicator:
        type: "string"
        xml:
          name: "UnifiedAccountExistingIndicator"
        enum:
        - "Y"
        - "N"
      convergedBillingIndicator:
        type: "string"
        xml:
          name: "ConvergedBillingIndicator"
        enum:
        - "Y"
        - "N"
      premierIndicator:
        type: "boolean"
        xml:
          name: "PremierIndicator"
        default: false
  CtStoreInfo:
    type: "object"
    properties:
      rowId:
        type: "string"
        xml:
          name: "RowId"
        minLength: 1
        maxLength: 2147483647
      omniReferenceNumber:
        type: "string"
        xml:
          name: "OmniReferenceNumber"
        minLength: 1
        maxLength: 2147483647
      ctn:
        type: "string"
        xml:
          name: "Ctn"
        minLength: 1
        maxLength: 2147483647
      storeID:
        type: "string"
        xml:
          name: "StoreID"
        minLength: 1
        maxLength: 2147483647
      losgDetailList:
        type: "array"
        xml:
          name: "LosgDetailList"
        items:
          $ref: "#/definitions/CtLosgDetailList"
        maxItems: 999
        minItems: 0
      itemInfoList:
        type: "array"
        xml:
          name: "ItemInfoList"
        items:
          $ref: "#/definitions/CtItemInfoList"
        maxItems: 999
        minItems: 0
      currentStoreStatus:
        type: "string"
        xml:
          name: "CurrentStoreStatus"
        minLength: 1
        maxLength: 2147483647
  CtQueueMetadataUserRoles:
    type: "object"
    required:
    - "roleId"
    - "roleName"
    properties:
      roleId:
        type: "string"
        xml:
          name: "RoleId"
      roleName:
        type: "string"
        xml:
          name: "RoleName"
  HotsurveyRequest:
    type: "object"
    properties:
      hotsurveyDetails:
        type: "array"
        xml:
          name: "HotsurveyDetails"
        items:
          $ref: "#/definitions/CtHotsurveyDetails"
        maxItems: 999
        minItems: 0
    xml:
      name: "HotsurveyRequest"
  CtServiceType:
    type: "object"
    properties:
      conflictingServiceIndicator:
        type: "boolean"
        xml:
          name: "ConflictingServiceIndicator"
        default: false
      serviceType:
        type: "string"
        xml:
          name: "ServiceType"
        minLength: 1
        maxLength: 2147483647
  CreateSHMRequest:
    type: "object"
    properties:
      createSHMRequest:
        xml:
          name: "CreateSHMRequest"
        $ref: "#/definitions/CtSpecialHandlingMessage"
    xml:
      name: "CreateSHMRequest"
  CtOwner:
    type: "object"
    required:
    - "ownerName"
    - "ownershipPercentage"
    properties:
      ownerName:
        type: "string"
        xml:
          name: "OwnerName"
      ownershipPercentage:
        type: "integer"
        format: "int32"
        xml:
          name: "OwnershipPercentage"
  CtEscalation:
    type: "object"
    properties:
      sla1:
        type: "string"
        xml:
          name: "SLA1"
      sla2:
        type: "string"
        xml:
          name: "SLA2"
      assignedTo:
        type: "string"
        xml:
          name: "AssignedTo"
      callId:
        type: "string"
        xml:
          name: "CallId"
      callbackName:
        type: "string"
        xml:
          name: "CallbackName"
      callbackNumber:
        type: "string"
        xml:
          name: "CallbackNumber"
      callbackPreference:
        type: "string"
        xml:
          name: "CallbackPreference"
      caseId:
        type: "string"
        xml:
          name: "CaseId"
      caseStatus:
        type: "string"
        xml:
          name: "CaseStatus"
      contactReason:
        type: "string"
        xml:
          name: "ContactReason"
      contactResolution:
        type: "string"
        xml:
          name: "ContactResolution"
      contactType:
        type: "string"
        xml:
          name: "ContactType"
      createEscalation:
        type: "string"
        xml:
          name: "CreateEscalation"
      currentCSRId:
        type: "string"
        xml:
          name: "CurrentCSRId"
      customerOrderNumber:
        type: "string"
        xml:
          name: "CustomerOrderNumber"
      escalationComment:
        type: "string"
        xml:
          name: "EscalationComment"
      escalationCreatedBy:
        type: "string"
        xml:
          name: "EscalationCreatedBy"
      escalationReason:
        type: "string"
        xml:
          name: "EscalationReason"
      escalationTeam:
        type: "string"
        xml:
          name: "EscalationTeam"
      escalationType:
        type: "string"
        xml:
          name: "EscalationType"
      localTimezone:
        type: "string"
        xml:
          name: "LocalTimezone"
      program:
        type: "string"
        xml:
          name: "Program"
      stakeholderInvolved:
        type: "string"
        xml:
          name: "StakeholderInvolved"
      oceorderNumber:
        type: "string"
  CtLineCombo:
    type: "object"
    required:
    - "lineCombo"
    properties:
      lineCombo:
        type: "array"
        xml:
          name: "LineCombo"
        items:
          type: "string"
        maxItems: 999
        minItems: 1
  CtThrottlingInfo:
    type: "object"
    properties:
      jobId:
        type: "integer"
        format: "int32"
      channel:
        type: "string"
        xml:
          name: "Channel"
      noOfRecords:
        type: "integer"
        format: "int32"
  CtCoPayData:
    type: "object"
    required:
    - "allowanceAmount"
    - "receivingBAN"
    properties:
      receivingBAN:
        type: "string"
        xml:
          name: "ReceivingBAN"
        minLength: 1
        maxLength: 2147483647
      receivingFAN:
        type: "string"
        xml:
          name: "ReceivingFAN"
        minLength: 1
        maxLength: 2147483647
      allowanceAmount:
        type: "number"
        xml:
          name: "AllowanceAmount"
      addendVersion:
        type: "string"
        xml:
          name: "AddendVersion"
        minLength: 1
        maxLength: 2147483647
      enrollingCTN:
        type: "string"
        xml:
          name: "EnrollingCTN"
        minLength: 1
        maxLength: 2147483647
        pattern: "[0-9]{10}"
      addendDateAndTime:
        type: "string"
        format: "date-time"
        xml:
          name: "AddendDateAndTime"
      cancelCTN:
        type: "string"
        xml:
          name: "CancelCTN"
        minLength: 1
        maxLength: 2147483647
        pattern: "[0-9]{10}"
  CtQueueDetails:
    type: "object"
    required:
    - "queue"
    properties:
      queue:
        type: "array"
        xml:
          name: "Queue"
        items:
          $ref: "#/definitions/Queue"
        maxItems: 999
        minItems: 1
  CtTaxPriceInfo:
    type: "object"
    properties:
      amount:
        type: "number"
        xml:
          name: "Amount"
      preCalculatedTax:
        xml:
          name: "PreCalculatedTax"
        $ref: "#/definitions/CtPreCalculatedTax"
      lineItemTax:
        type: "array"
        xml:
          name: "LineItemTax"
        items:
          $ref: "#/definitions/CtLineItemTax"
        maxItems: 999
        minItems: 0
  CtCreditClassInfo:
    type: "object"
    properties:
      creditClass:
        type: "string"
        xml:
          name: "CreditClass"
        minLength: 1
        maxLength: 2147483647
      productsInclude:
        type: "string"
        xml:
          name: "ProductsInclude"
        minLength: 1
        maxLength: 2147483647
      creditVerified:
        type: "string"
        xml:
          name: "CreditVerified"
        enum:
        - "Y"
        - "N"
      creditInquiryOpen:
        type: "string"
        xml:
          name: "CreditInquiryOpen"
        enum:
        - "Y"
        - "N"
      depositRequired:
        type: "string"
        xml:
          name: "DepositRequired"
        enum:
        - "Y"
        - "N"
      expressPayInfoHeld:
        type: "string"
        xml:
          name: "ExpressPayInfoHeld"
        enum:
        - "Y"
        - "N"
      currentAccountBalance:
        type: "number"
        xml:
          name: "CurrentAccountBalance"
      currentPastDueAmount:
        type: "number"
        xml:
          name: "CurrentPastDueAmount"
      currentDeniablePastDueAmount:
        type: "number"
        xml:
          name: "CurrentDeniablePastDueAmount"
      currentNonDeniablePastDueAmount:
        type: "number"
        xml:
          name: "CurrentNonDeniablePastDueAmount"
      currentRegulatedPastDueAmount:
        type: "number"
        xml:
          name: "CurrentRegulatedPastDueAmount"
      currentNonRegulatedPastDueAmount:
        type: "number"
        xml:
          name: "CurrentNonRegulatedPastDueAmount"
      minimumAmountDue:
        type: "number"
        xml:
          name: "MinimumAmountDue"
      exchangeListFound:
        type: "string"
        xml:
          name: "ExchangeListFound"
        enum:
        - "Y"
        - "N"
      safeScanAlertIndicator:
        type: "boolean"
        xml:
          name: "SafeScanAlertIndicator"
        default: false
      singleCreditQueryWirelessIndicator:
        type: "boolean"
        xml:
          name: "SingleCreditQueryWirelessIndicator"
        default: false
      debtAccount:
        type: "array"
        xml:
          name: "DebtAccount"
        items:
          $ref: "#/definitions/CtDebtAccount"
        maxItems: 15
        minItems: 0
      debtPaidStatus:
        type: "string"
        xml:
          name: "DebtPaidStatus"
        enum:
        - "ODPCS"
        - "ODNP"
        - "ODPCF"
      finalBillAccount:
        type: "array"
        xml:
          name: "FinalBillAccount"
        items:
          $ref: "#/definitions/CtFinalBillAccount"
        maxItems: 15
        minItems: 0
      nonRefundableCreditFee:
        type: "number"
        xml:
          name: "NonRefundableCreditFee"
      writeOffDate:
        type: "string"
        format: "date-time"
        xml:
          name: "WriteOffDate"
      writeOffAmount:
        type: "number"
        xml:
          name: "WriteOffAmount"
      safeScanPassIndicator:
        type: "boolean"
        xml:
          name: "SafeScanPassIndicator"
        default: false
      creditScoreResult:
        type: "string"
        xml:
          name: "CreditScoreResult"
        minLength: 1
        maxLength: 2147483647
      depositAmount:
        type: "number"
        xml:
          name: "DepositAmount"
      depositStatus:
        type: "string"
        xml:
          name: "DepositStatus"
        minLength: 1
        maxLength: 2147483647
      ignoreDeposit:
        type: "string"
        xml:
          name: "IgnoreDeposit"
        enum:
        - "Y"
        - "N"
      applicationNumber:
        type: "string"
        xml:
          name: "ApplicationNumber"
        minLength: 1
        maxLength: 2147483647
      numberLinesReq:
        type: "integer"
        xml:
          name: "NumberLinesReq"
        minimum: 0.0
      numberApprLines:
        type: "integer"
        xml:
          name: "NumberApprLines"
        minimum: 0.0
      applicationApprovalDate:
        type: "string"
        format: "date-time"
        xml:
          name: "ApplicationApprovalDate"
      applicationExpiresDate:
        type: "string"
        format: "date-time"
        xml:
          name: "ApplicationExpiresDate"
      creditStatus:
        type: "string"
        xml:
          name: "CreditStatus"
        enum:
        - "ORDER_REQUIRES_DEPOSIT_INITIAL"
        - "ORDER_REQUIRES_MANUAL_REVIEW"
        - "ACCEPTED"
        - "APPROVED"
        - "DEPOSIT"
        - "PENDING"
        - "REVIEW"
        - "DECLINED"
        - "UNRESOLVED"
        - "UNKNOWN"
        - "NOT_APPLICABLE"
      addAccountGUID:
        type: "string"
        xml:
          name: "AddAccountGUID"
        minLength: 1
        maxLength: 2147483647
      reasonCode:
        type: "string"
        xml:
          name: "ReasonCode"
        minLength: 1
        maxLength: 2147483647
      reasonCodeDescription:
        type: "string"
        xml:
          name: "ReasonCodeDescription"
        minLength: 1
        maxLength: 2147483647
      creditPolicyToken:
        type: "string"
        xml:
          name: "CreditPolicyToken"
        minLength: 1
        maxLength: 2147483647
      creditBand:
        type: "string"
        xml:
          name: "CreditBand"
        minLength: 1
        maxLength: 2147483647
      treatmentCode:
        type: "string"
        xml:
          name: "TreatmentCode"
        minLength: 1
        maxLength: 2147483647
      treatmentMessage:
        type: "string"
        xml:
          name: "TreatmentMessage"
        minLength: 1
        maxLength: 2147483647
      proprietarySegmentIndicator:
        type: "string"
        xml:
          name: "ProprietarySegmentIndicator"
        minLength: 1
        maxLength: 2147483647
      creditReferenceDate:
        type: "string"
        format: "date-time"
        xml:
          name: "CreditReferenceDate"
      ccran:
        type: "boolean"
        default: false
      eidnumber:
        type: "string"
      eidverifierRequired:
        type: "string"
        enum:
        - "Y"
        - "N"
      eidverifierLaunched:
        type: "string"
        enum:
        - "Y"
        - "N"
      eidverifierResults:
        type: "string"
        enum:
        - "Y"
        - "N"
      ccmtransactionID:
        type: "string"
      castransactionId:
        type: "string"
  Orders:
    type: "object"
    properties:
      requestId:
        type: "string"
        xml:
          name: "RequestId"
      totalOrderCount:
        type: "integer"
        format: "int32"
      order:
        type: "array"
        xml:
          name: "Order"
        items:
          $ref: "#/definitions/CtOrder"
        maxItems: 999
        minItems: 0
    xml:
      name: "Orders"
  EscalationResponse:
    type: "object"
    required:
    - "errors"
    properties:
      escalation:
        xml:
          name: "Escalation"
        $ref: "#/definitions/CtEscalation"
      caseId:
        type: "string"
        xml:
          name: "CaseId"
      note:
        type: "string"
        xml:
          name: "Note"
      errors:
        xml:
          name: "Errors"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtErrorList"
    xml:
      name: "EscalationResponse"
  SmartVideoAdminResponse:
    type: "object"
    required:
    - "errors"
    properties:
      metaInformation:
        xml:
          name: "MetaInformation"
        $ref: "#/definitions/CtMetaInformation"
      errors:
        xml:
          name: "Errors"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtErrorList"
      notes:
        type: "string"
        xml:
          name: "Notes"
      svcontent:
        type: "array"
        items:
          $ref: "#/definitions/CtSmartVideoSource"
    xml:
      name: "SmartVideoAdminResponse"
  CtCreditAlert:
    type: "object"
    required:
    - "fraudAlert"
    - "generalMessage"
    properties:
      fraudAlert:
        type: "string"
        xml:
          name: "FraudAlert"
        minLength: 1
        maxLength: 2147483647
      generalMessage:
        type: "string"
        xml:
          name: "GeneralMessage"
        minLength: 1
        maxLength: 2147483647
  AdditionalDetails:
    type: "object"
    properties:
      additionalDetail:
        type: "array"
        items:
          $ref: "#/definitions/AdditionalDetail"
        maxItems: 99
        minItems: 0
  CtInternetLOSChars:
    type: "object"
    properties:
      primaryNetworkType:
        type: "string"
        xml:
          name: "PrimaryNetworkType"
        minLength: 1
        maxLength: 2147483647
      ipdslaindicator:
        type: "string"
        enum:
        - "Y"
        - "N"
  CtDriversLicense:
    type: "object"
    required:
    - "licenseExpirationDate"
    - "licenseNumber"
    - "state"
    properties:
      licenseNumber:
        type: "string"
        xml:
          name: "LicenseNumber"
        minLength: 1
        maxLength: 2147483647
      state:
        type: "string"
        xml:
          name: "State"
        enum:
        - "AA"
        - "AK"
        - "AL"
        - "AR"
        - "AZ"
        - "AP"
        - "AE"
        - "CA"
        - "CO"
        - "CT"
        - "DC"
        - "DE"
        - "FL"
        - "FPO"
        - "GA"
        - "GU"
        - "HI"
        - "IA"
        - "ID"
        - "IL"
        - "IN"
        - "KS"
        - "KY"
        - "LA"
        - "MA"
        - "MD"
        - "ME"
        - "MI"
        - "MN"
        - "MO"
        - "MS"
        - "MT"
        - "NC"
        - "ND"
        - "NE"
        - "NH"
        - "NJ"
        - "NM"
        - "NV"
        - "NY"
        - "OH"
        - "OK"
        - "OR"
        - "PA"
        - "PR"
        - "RI"
        - "SC"
        - "SD"
        - "TN"
        - "TX"
        - "UT"
        - "VA"
        - "VI"
        - "VT"
        - "WA"
        - "WI"
        - "WV"
        - "WY"
      licenseExpirationDate:
        type: "string"
        xml:
          name: "LicenseExpirationDate"
        minLength: 1
        maxLength: 2147483647
  CtName:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "string"
        xml:
          name: "Id"
        pattern: "NAME_[0-9]{2}"
      prefix:
        type: "string"
        xml:
          name: "Prefix"
        minLength: 1
        maxLength: 2147483647
      firstName:
        type: "string"
        xml:
          name: "FirstName"
        minLength: 1
        maxLength: 2147483647
      middleInitial:
        type: "string"
        xml:
          name: "MiddleInitial"
        minLength: 1
        maxLength: 2147483647
      lastName:
        type: "string"
        xml:
          name: "LastName"
        minLength: 1
        maxLength: 2147483647
      legalFirstName:
        type: "string"
        xml:
          name: "LegalFirstName"
        minLength: 1
        maxLength: 2147483647
      legalLastName:
        type: "string"
        xml:
          name: "LegalLastName"
        minLength: 1
        maxLength: 2147483647
      previousLegalLastName:
        type: "string"
        xml:
          name: "PreviousLegalLastName"
        minLength: 1
        maxLength: 2147483647
      suffix:
        type: "string"
        xml:
          name: "Suffix"
        minLength: 1
        maxLength: 2147483647
      emailAddress:
        type: "string"
        xml:
          name: "EmailAddress"
        minLength: 1
        maxLength: 2147483647
      primaryContactPhone:
        type: "array"
        xml:
          name: "PrimaryContactPhone"
        items:
          $ref: "#/definitions/CtPhoneNumberExtension"
        maxItems: 3
        minItems: 0
      additionalContactPhone:
        type: "array"
        xml:
          name: "AdditionalContactPhone"
        items:
          $ref: "#/definitions/CtPhoneNumberExtension"
        maxItems: 3
        minItems: 0
  CtPreAuthDetail:
    type: "object"
    properties:
      authorizationCode:
        type: "string"
        xml:
          name: "AuthorizationCode"
        minLength: 1
        maxLength: 2147483647
      authorizationDate:
        type: "string"
        format: "date-time"
        xml:
          name: "AuthorizationDate"
      authorizationExpirationDate:
        type: "string"
        format: "date-time"
        xml:
          name: "AuthorizationExpirationDate"
      authorizationKey:
        type: "string"
        xml:
          name: "AuthorizationKey"
        minLength: 1
        maxLength: 2147483647
      isPreAuthReleased:
        type: "boolean"
        xml:
          name: "IsPreAuthReleased"
        default: false
      avscode:
        type: "string"
  CtVOIPLineItemChars:
    type: "object"
    properties:
      callerIdIndicator:
        type: "string"
        xml:
          name: "CallerIdIndicator"
        enum:
        - "Y"
        - "N"
      uverseMessaging:
        type: "string"
  ParameterizedHeader:
    type: "object"
    properties:
      value:
        type: "string"
      parameters:
        type: "object"
        additionalProperties:
          type: "string"
  PartnerReAssignmentRequest:
    type: "object"
    required:
    - "reAssignmentType"
    properties:
      reAssignmentType:
        type: "string"
        xml:
          name: "ReAssignmentType"
      partnerReAssignment:
        xml:
          name: "PartnerReAssignment"
        $ref: "#/definitions/CtPartnerReAssignment"
    xml:
      name: "PartnerReAssignmentRequest"
  BulkUpdateUserRequest:
    type: "object"
    required:
    - "requestId"
    properties:
      requestId:
        type: "string"
        xml:
          name: "RequestId"
      updateType:
        type: "string"
        xml:
          name: "UpdateType"
      noOfDays:
        type: "integer"
        format: "int32"
        xml:
          name: "NoOfDays"
      jobId:
        type: "string"
        xml:
          name: "JobId"
    xml:
      name: "BulkUpdateUserRequest"
  CtNegativeValueType:
    type: "object"
    properties:
      simpleType:
        xml:
          name: "SimpleType"
        $ref: "#/definitions/CtNegativeSimpleType"
      encryptionType:
        xml:
          name: "EncryptionType"
        $ref: "#/definitions/CtNegativeEncryptionType"
      complexType:
        type: "array"
        xml:
          name: "ComplexType"
        items:
          $ref: "#/definitions/CtNegativeComplexType"
        maxItems: 999
        minItems: 0
  VacantQueueEmailResponse:
    type: "object"
    properties:
      metaInformation:
        xml:
          name: "MetaInformation"
        $ref: "#/definitions/CtMetaInformation"
      vacantQueueDetails:
        type: "array"
        xml:
          name: "VacantQueueDetails"
        items:
          $ref: "#/definitions/CtVacantQueueDetail"
        maxItems: 999
        minItems: 0
      currentDateTime:
        type: "string"
        format: "date-time"
        xml:
          name: "CurrentDateTime"
    xml:
      name: "VacantQueueEmailResponse"
  CtTaxAuthoritiesList:
    type: "object"
    required:
    - "taxAuthorities"
    properties:
      taxAuthorities:
        type: "array"
        xml:
          name: "TaxAuthorities"
        items:
          $ref: "#/definitions/CtTaxAuthorities"
        maxItems: 999
        minItems: 1
  AdditionalDetail:
    type: "object"
    properties:
      code:
        type: "string"
      value:
        type: "string"
      type:
        type: "string"
      parentType:
        type: "string"
      info:
        type: "string"
  FraudCheckResults:
    type: "object"
    required:
    - "fraudCheckResult"
    properties:
      fraudCheckResult:
        type: "array"
        xml:
          name: "FraudCheckResult"
        items:
          $ref: "#/definitions/CtFraudCheckResult"
        maxItems: 999
        minItems: 1
  OrderTasksResponse:
    type: "object"
    required:
    - "errors"
    properties:
      metaInformation:
        xml:
          name: "MetaInformation"
        $ref: "#/definitions/CtMetaInformation"
      orderTasks:
        xml:
          name: "OrderTasks"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModelExtensionV1.0.xsd"
        $ref: "#/definitions/CtOrderTaskList"
      errors:
        xml:
          name: "Errors"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtErrorList"
    xml:
      name: "OrderTasksResponse"
  CtAdditionalDetail:
    type: "object"
    required:
    - "code"
    - "value"
    properties:
      type:
        type: "string"
        xml:
          name: "Type"
        minLength: 1
        maxLength: 2147483647
      parentType:
        type: "string"
        xml:
          name: "ParentType"
        minLength: 1
        maxLength: 2147483647
      code:
        type: "string"
        xml:
          name: "Code"
        minLength: 1
        maxLength: 2147483647
      value:
        type: "string"
        xml:
          name: "Value"
        minLength: 1
        maxLength: 2147483647
  Count:
    type: "object"
    required:
    - "lineCount"
    - "orderCount"
    properties:
      lineCount:
        type: "integer"
        format: "int32"
        xml:
          name: "LineCount"
      orderCount:
        type: "integer"
        format: "int32"
        xml:
          name: "OrderCount"
  OrderQueueResponse:
    type: "object"
    required:
    - "currentDateTime"
    - "falloutDetail"
    - "programDetails"
    - "queueDetails"
    - "totalCount"
    properties:
      metaInformation:
        xml:
          name: "MetaInformation"
        $ref: "#/definitions/CtMetaInformation"
      currentDateTime:
        type: "string"
        format: "date-time"
        xml:
          name: "CurrentDateTime"
      falloutDetail:
        xml:
          name: "FalloutDetail"
        $ref: "#/definitions/CtFallout"
      queueDetails:
        xml:
          name: "QueueDetails"
        $ref: "#/definitions/CtQueueDetails"
      programDetails:
        xml:
          name: "ProgramDetails"
        $ref: "#/definitions/CtProgramDetails"
      totalCount:
        type: "integer"
        format: "int32"
        xml:
          name: "TotalCount"
    xml:
      name: "OrderQueueResponse"
  Organizations:
    type: "object"
    required:
    - "errors"
    properties:
      organization:
        type: "array"
        xml:
          name: "Organization"
        items:
          $ref: "#/definitions/CtChannel"
        maxItems: 99
        minItems: 0
      errors:
        xml:
          name: "Errors"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtErrorList"
    xml:
      name: "Organizations"
  EmailMetaDataCategory:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "array"
        xml:
          name: "Name"
        items:
          type: "string"
        maxItems: 99
        minItems: 1
  Sla:
    type: "object"
    required:
    - "amberValue"
    - "greenValue"
    - "redValue"
    properties:
      greenValue:
        type: "integer"
        format: "int32"
        xml:
          name: "GreenValue"
      redValue:
        type: "integer"
        format: "int32"
        xml:
          name: "RedValue"
      amberValue:
        type: "integer"
        format: "int32"
        xml:
          name: "AmberValue"
  Order:
    type: "object"
    required:
    - "orderSource"
    - "orderType"
    - "submitedDate"
    properties:
      customerOrderNumber:
        type: "string"
        xml:
          name: "CustomerOrderNumber"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        minLength: 1
        maxLength: 2147483647
      requestId:
        type: "string"
        xml:
          name: "RequestId"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        minLength: 1
        maxLength: 2147483647
      parentOrderNumber:
        type: "string"
        xml:
          name: "ParentOrderNumber"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        minLength: 1
        maxLength: 2147483647
      orderType:
        type: "string"
        xml:
          name: "OrderType"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        enum:
        - "CREATE"
        - "UPDATE"
        - "AMEND"
        - "CANCEL"
        - "UL"
      partner:
        type: "string"
        xml:
          name: "Partner"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        minLength: 1
        maxLength: 2147483647
      programName:
        type: "string"
        xml:
          name: "ProgramName"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        minLength: 1
        maxLength: 2147483647
      orderStatus:
        xml:
          name: "OrderStatus"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtOrderStatus"
      createdDate:
        type: "string"
        format: "date-time"
        xml:
          name: "CreatedDate"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
      submitedDate:
        type: "string"
        format: "date-time"
        xml:
          name: "SubmitedDate"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
      updatedDate:
        type: "string"
        format: "date-time"
        xml:
          name: "UpdatedDate"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
      acceptedDate:
        type: "string"
        format: "date-time"
        xml:
          name: "AcceptedDate"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
      currentDateTime:
        type: "string"
        format: "date-time"
        xml:
          name: "CurrentDateTime"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
      revisionNumber:
        type: "integer"
        xml:
          name: "RevisionNumber"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        minimum: 0.0
      groups:
        xml:
          name: "Groups"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/GroupList"
      lineItems:
        xml:
          name: "LineItems"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtLineItemList"
      names:
        xml:
          name: "Names"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtNameList"
      addresses:
        xml:
          name: "Addresses"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtAddressList"
      accounts:
        xml:
          name: "Accounts"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtAccountList"
      paymentOptions:
        xml:
          name: "PaymentOptions"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtPaymentOptionList"
      promotions:
        xml:
          name: "Promotions"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtPromotionList"
      schedulingInfos:
        xml:
          name: "SchedulingInfos"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtSchedulingInfoList"
      shippingInfos:
        xml:
          name: "ShippingInfos"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtShippingInfoList"
      serviceFacilityQualifications:
        xml:
          name: "ServiceFacilityQualifications"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtServiceQualificationList"
      conflictingServiceInfos:
        xml:
          name: "ConflictingServiceInfos"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtConflictingServiceInfos"
      e911Info:
        xml:
          name: "E911Info"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtE911Info"
      b2Bs:
        xml:
          name: "B2Bs"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtB2BList"
      specialInstructions:
        type: "string"
        xml:
          name: "SpecialInstructions"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        minLength: 1
        maxLength: 255
      isDueAmountRecalculated:
        type: "boolean"
        xml:
          name: "IsDueAmountRecalculated"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        default: false
      recalDueAmount:
        xml:
          name: "RecalDueAmount"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtPriceInfo"
      dueAmount:
        xml:
          name: "DueAmount"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtPriceInfo"
      isPartialOrder:
        type: "boolean"
        xml:
          name: "IsPartialOrder"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        default: false
      isResubmitOrder:
        type: "boolean"
        xml:
          name: "IsResubmitOrder"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        default: false
      agentUID:
        type: "string"
        xml:
          name: "AgentUID"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        minLength: 1
        maxLength: 2147483647
      referralEmpUID:
        type: "string"
        xml:
          name: "ReferralEmpUID"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        minLength: 1
        maxLength: 2147483647
      referralPackageId:
        type: "string"
        xml:
          name: "ReferralPackageId"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        minLength: 1
        maxLength: 2147483647
      referralAppId:
        type: "string"
        xml:
          name: "ReferralAppId"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        minLength: 1
        maxLength: 2147483647
      salesCode:
        type: "string"
        xml:
          name: "SalesCode"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        minLength: 1
        maxLength: 2147483647
      salesLocation:
        type: "string"
        xml:
          name: "SalesLocation"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        minLength: 1
        maxLength: 2147483647
      agentCode:
        type: "string"
        xml:
          name: "AgentCode"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        minLength: 1
        maxLength: 2147483647
      agentLocation:
        type: "string"
        xml:
          name: "AgentLocation"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        minLength: 1
        maxLength: 2147483647
      deliveryPromiseNoteEnglish:
        type: "string"
        xml:
          name: "DeliveryPromiseNoteEnglish"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        minLength: 1
        maxLength: 2147483647
      deliveryPromiseNoteSpanish:
        type: "string"
        xml:
          name: "DeliveryPromiseNoteSpanish"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        minLength: 1
        maxLength: 2147483647
      affiliateId:
        type: "string"
        xml:
          name: "AffiliateId"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        minLength: 1
        maxLength: 2147483647
      affiliateReferalDate:
        type: "string"
        format: "date-time"
        xml:
          name: "AffiliateReferalDate"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
      chatId:
        type: "string"
        xml:
          name: "ChatId"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        minLength: 1
        maxLength: 2147483647
      orderContact:
        xml:
          name: "OrderContact"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtOrderContact"
      loginProfile:
        xml:
          name: "LoginProfile"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtLoginProfile"
      approverNameRefs:
        xml:
          name: "ApproverNameRefs"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtApproverNameRefs"
      salesChannel:
        type: "string"
        xml:
          name: "SalesChannel"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        minLength: 1
        maxLength: 2147483647
      orderSource:
        xml:
          name: "OrderSource"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtOrderSource"
      externalOrderSource:
        type: "string"
        xml:
          name: "ExternalOrderSource"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        minLength: 1
        maxLength: 2147483647
      notes:
        type: "string"
        xml:
          name: "Notes"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        minLength: 1
        maxLength: 2147483647
      version:
        type: "integer"
        xml:
          name: "Version"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        minimum: 0.0
      isLocked:
        type: "boolean"
        xml:
          name: "IsLocked"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        default: false
      lockOwner:
        type: "string"
        xml:
          name: "LockOwner"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
      lockTime:
        type: "string"
        format: "date-time"
        xml:
          name: "LockTime"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
      isExpressCheckOut:
        type: "boolean"
        xml:
          name: "IsExpressCheckOut"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        default: false
      isGeoAreaSingleDispatchAvailable:
        type: "boolean"
        xml:
          name: "IsGeoAreaSingleDispatchAvailable"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        default: false
      isSatelliteTVOnlySingleDispatchEligible:
        type: "boolean"
        xml:
          name: "IsSatelliteTVOnlySingleDispatchEligible"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        default: false
      isSingleDispatchEligible:
        type: "boolean"
        xml:
          name: "IsSingleDispatchEligible"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        default: false
      productCombinationCode:
        type: "string"
        xml:
          name: "ProductCombinationCode"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        minLength: 1
        maxLength: 2147483647
      isEncrypted:
        type: "boolean"
        xml:
          name: "IsEncrypted"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        default: false
      customerEmailReceived:
        type: "string"
        xml:
          name: "CustomerEmailReceived"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        enum:
        - "Y"
        - "N"
      isBulk:
        type: "boolean"
        xml:
          name: "IsBulk"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        default: false
      isPassThrough:
        type: "boolean"
        xml:
          name: "IsPassThrough"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        default: false
      bulkOrderWorkRequestNumber:
        type: "string"
        xml:
          name: "BulkOrderWorkRequestNumber"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        minLength: 1
        maxLength: 2147483647
      isCommonOrder:
        type: "boolean"
        xml:
          name: "IsCommonOrder"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        default: false
      parentOrderId:
        type: "string"
        xml:
          name: "ParentOrderId"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        minLength: 1
        maxLength: 2147483647
      referenceOrderId:
        type: "string"
        xml:
          name: "ReferenceOrderId"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        minLength: 1
        maxLength: 2147483647
      isSummaryCreated:
        type: "boolean"
        xml:
          name: "IsSummaryCreated"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        default: false
      premierGroupId:
        type: "string"
        xml:
          name: "PremierGroupId"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        minLength: 1
        maxLength: 2147483647
      premierGroupName:
        type: "string"
        xml:
          name: "PremierGroupName"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        minLength: 1
        maxLength: 2147483647
      employeeDetails:
        xml:
          name: "EmployeeDetails"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtEmployeeDetails"
      moveInfo:
        xml:
          name: "MoveInfo"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtMoveInfo"
      falloutHistory:
        xml:
          name: "FalloutHistory"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtFalloutHistory"
      isMultiType:
        type: "boolean"
        xml:
          name: "IsMultiType"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        default: false
      additionalDetails:
        xml:
          name: "AdditionalDetails"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtAdditionalDetails"
      specialHandlingMessage:
        xml:
          name: "SpecialHandlingMessage"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtSHM"
      repeatContactInfo:
        type: "integer"
        xml:
          name: "RepeatContactInfo"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
      tcs:
        $ref: "#/definitions/CtTCs"
      oceorderNumber:
        type: "string"
      prcticketNumber:
        type: "string"
    xml:
      name: "Order"
      namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
  CtCallRecords:
    type: "object"
    required:
    - "callRecord"
    properties:
      callRecord:
        type: "array"
        xml:
          name: "CallRecord"
        items:
          $ref: "#/definitions/CtCallRecord"
  CtLosgDetailList:
    type: "object"
    properties:
      losgDetail:
        type: "array"
        xml:
          name: "LosgDetail"
        items:
          $ref: "#/definitions/CtLosgDetail"
        maxItems: 999
        minItems: 0
  CtValues:
    type: "object"
    properties:
      value:
        type: "array"
        xml:
          name: "Value"
        items:
          type: "string"
        maxItems: 999
        minItems: 0
  ChannelThrottlingRequest:
    type: "object"
    properties:
      throttleInfo:
        type: "array"
        items:
          $ref: "#/definitions/CtThrottlingInfo"
        maxItems: 999
        minItems: 0
      autothrottle:
        type: "boolean"
        default: false
    xml:
      name: "ChannelThrottlingRequest"
  CtPartnerReAssignment:
    type: "object"
    required:
    - "percentage"
    - "status"
    - "toPartner"
    properties:
      orderNumber:
        type: "string"
        xml:
          name: "OrderNumber"
      program:
        type: "string"
        xml:
          name: "Program"
      fromPartner:
        xml:
          name: "FromPartner"
        $ref: "#/definitions/CtPartner"
      toPartner:
        xml:
          name: "ToPartner"
        $ref: "#/definitions/CtPartner"
      percentage:
        type: "integer"
        xml:
          name: "Percentage"
      serviceCombo:
        type: "string"
        xml:
          name: "ServiceCombo"
      status:
        type: "string"
        xml:
          name: "Status"
      failureReason:
        type: "string"
        xml:
          name: "FailureReason"
  CtErrorList:
    type: "object"
    required:
    - "error"
    properties:
      action:
        type: "string"
        xml:
          name: "Action"
        minLength: 1
        maxLength: 2147483647
      error:
        type: "array"
        xml:
          name: "Error"
        items:
          $ref: "#/definitions/CtError"
        maxItems: 999
        minItems: 1
  CtEmployerInfo:
    type: "object"
    properties:
      employerName:
        type: "string"
        xml:
          name: "EmployerName"
        minLength: 1
        maxLength: 2147483647
      employerPhoneNum:
        type: "string"
        xml:
          name: "EmployerPhoneNum"
        minLength: 1
        maxLength: 2147483647
        pattern: "[0-9]{10}"
  QueueMetaDataCreateRequest:
    type: "object"
    properties:
      queueMetaData:
        xml:
          name: "QueueMetaData"
        $ref: "#/definitions/CtQueueMetaData"
    xml:
      name: "QueueMetaDataCreateRequest"
  CtShipmentCommitDate:
    type: "object"
    properties:
      fromDate:
        type: "string"
        format: "date-time"
        xml:
          name: "FromDate"
      toDate:
        type: "string"
        format: "date-time"
        xml:
          name: "ToDate"
  CtProvisioningSystems:
    type: "object"
    properties:
      provisioningSystem:
        type: "array"
        xml:
          name: "ProvisioningSystem"
        items:
          $ref: "#/definitions/CtProvisioningSystem"
        maxItems: 999
        minItems: 0
  CtAdditionalDetails:
    type: "object"
    required:
    - "additionalDetail"
    properties:
      additionalDetail:
        type: "array"
        xml:
          name: "AdditionalDetail"
        items:
          $ref: "#/definitions/CtAdditionalDetail"
        maxItems: 999
        minItems: 1
  CtError:
    type: "object"
    required:
    - "errorCode"
    - "errorDescription"
    properties:
      errorCode:
        type: "string"
        xml:
          name: "ErrorCode"
      errorDescription:
        type: "string"
        xml:
          name: "ErrorDescription"
      reference:
        xml:
          name: "Reference"
        $ref: "#/definitions/CtExternalReference"
  CtCompensation:
    type: "object"
    properties:
      submittedBy:
        type: "string"
        xml:
          name: "SubmittedBy"
        enum:
        - "CUSTOMER"
        - "CSR_AGENT"
        - "BO_AGENT"
      repDetails:
        xml:
          name: "RepDetails"
        $ref: "#/definitions/CtRepDetails"
  CtGroupCharacteristics:
    type: "object"
    properties:
      loSGCharacteristics:
        xml:
          name: "LoSGCharacteristics"
        $ref: "#/definitions/CtLoSGCharacteristics"
      sharedPlanCharacteristics:
        xml:
          name: "SharedPlanCharacteristics"
        $ref: "#/definitions/CtSharedPlanCharacteristics"
      packageCharacteristics:
        xml:
          name: "PackageCharacteristics"
        $ref: "#/definitions/CtPackageCharacteristics"
  CtDebtAccount:
    type: "object"
    required:
    - "debtAccountNumber"
    - "minimumAmountDue"
    properties:
      debtAccountNumber:
        type: "string"
        xml:
          name: "DebtAccountNumber"
        minLength: 1
        maxLength: 2147483647
      minimumAmountDue:
        type: "number"
        xml:
          name: "MinimumAmountDue"
      accountBalance:
        type: "number"
        xml:
          name: "AccountBalance"
      disconnectDate:
        type: "string"
        format: "date-time"
        xml:
          name: "DisconnectDate"
      customerAgreementCode:
        type: "string"
        xml:
          name: "CustomerAgreementCode"
        minLength: 1
        maxLength: 2147483647
  SyncNowAdmin:
    type: "object"
    properties:
      jobName:
        type: "string"
      operation:
        type: "string"
      jobStatus:
        type: "string"
      jobInstanceId:
        type: "integer"
        format: "int32"
      log:
        type: "string"
        xml:
          name: "Log"
      error:
        $ref: "#/definitions/CtFuseError"
    xml:
      name: "SyncNowAdmin"
  CtOrders:
    type: "object"
    required:
    - "errors"
    properties:
      orderNumber:
        type: "string"
        xml:
          name: "OrderNumber"
      responseCode:
        type: "string"
        xml:
          name: "ResponseCode"
      errors:
        xml:
          name: "Errors"
          namespace: "http://oce.att.com/OCE/Namespaces/Types/Private/OCEDataModel.xsd"
        $ref: "#/definitions/CtErrorList"
  CtPromotionList:
    type: "object"
    required:
    - "promotion"
    properties:
      promotion:
        type: "array"
        xml:
          name: "Promotion"
        items:
          $ref: "#/definitions/CtPromotion"
        maxItems: 999
        minItems: 1
  BodyPart:
    type: "object"
    properties:
      contentDisposition:
        $ref: "#/definitions/ContentDisposition"
      entity:
        type: "object"
      headers:
        type: "object"
        additionalProperties:
          type: "array"
          items:
            type: "string"
      mediaType:
        $ref: "#/definitions/MediaType"
      messageBodyWorkers:
        $ref: "#/definitions/MessageBodyWorkers"
      parent:
        $ref: "#/definitions/MultiPart"
      providers:
        $ref: "#/definitions/Providers"
      parameterizedHeaders:
        type: "object"
        additionalProperties:
          type: "array"
          items:
            $ref: "#/definitions/ParameterizedHeader"
  CtELOA:
    type: "object"
    properties:
      electronicDisclosureAuthorization:
        type: "string"
        xml:
          name: "ElectronicDisclosureAuthorization"
        enum:
        - "ACCEPTED"
      localServiceAuthorization:
        type: "string"
        xml:
          name: "LocalServiceAuthorization"
        enum:
        - "ACCEPTED"
      localTollProviderAuthorization:
        type: "string"
        xml:
          name: "LocalTollProviderAuthorization"
        enum:
        - "ACCEPTED"
      longDistanceServiceProvider:
        type: "string"
        xml:
          name: "LongDistanceServiceProvider"
        enum:
        - "ACCEPTED"
      internetServiceAuthorization:
        type: "string"
        xml:
          name: "InternetServiceAuthorization"
        enum:
        - "ACCEPTED"
      loaURL:
        type: "string"
        xml:
          name: "LoaURL"
        minLength: 1
        maxLength: 2147483647
  CtImei:
    type: "object"
    required:
    - "count"
    - "value"
    properties:
      count:
        type: "integer"
        format: "int32"
        xml:
          name: "Count"
      value:
        type: "string"
        xml:
          name: "Value"
      dateLimit:
        type: "array"
        xml:
          name: "DateLimit"
        items:
          $ref: "#/definitions/CtDateLimit"
        maxItems: 99
        minItems: 0
  CtLineItem:
    type: "object"
    required:
    - "groupRefs"
    properties:
      id:
        type: "string"
        xml:
          name: "Id"
        minLength: 1
        maxLength: 2147483647
      lineItemSequence:
        type: "integer"
        xml:
          name: "LineItemSequence"
      productCode:
        type: "string"
        xml:
          name: "ProductCode"
        minLength: 1
        maxLength: 2147483647
      productSku:
        type: "string"
        xml:
          name: "ProductSku"
        minLength: 1
        maxLength: 2147483647
      billingCode:
        type: "string"
        xml:
          name: "BillingCode"
        minLength: 1
        maxLength: 2147483647
      productType:
        type: "string"
        xml:
          name: "ProductType"
        enum:
        - "PLAN"
        - "INCLUDED_FEATURE"
        - "OPTIONAL_FEATURE"
        - "HARDGOOD"
        - "UNIFY"
        - "CONTRACT_ONLY"
        - "REWARDS_GIFT"
        - "OTT"
        - "ADDRESS_CHANGE"
        - "MISC_CHARGE"
        - "PDP"
      displayName:
        type: "string"
        xml:
          name: "DisplayName"
        minLength: 1
        maxLength: 2147483647
      systemName:
        type: "string"
        xml:
          name: "SystemName"
        minLength: 1
        maxLength: 2147483647
      description:
        type: "string"
        xml:
          name: "Description"
        minLength: 1
        maxLength: 2147483647
      action:
        type: "string"
        xml:
          name: "Action"
        enum:
        - "ADD"
        - "UPDATE"
        - "REMOVE"
        - "NO_CHANGE"
      operation:
        type: "string"
        xml:
          name: "Operation"
        enum:
        - "INSERT"
        - "UPDATE"
        - "DELETE"
      price:
        xml:
          name: "Price"
        $ref: "#/definitions/CtPriceInfo"
      locationID:
        type: "string"
        xml:
          name: "LocationID"
        minLength: 1
        maxLength: 2147483647
      payments:
        xml:
          name: "Payments"
        $ref: "#/definitions/CtPaymentList"
      effectiveDate:
        type: "string"
        format: "date-time"
        xml:
          name: "EffectiveDate"
      contractDetails:
        xml:
          name: "ContractDetails"
        $ref: "#/definitions/CtContractDetails"
      quantity:
        type: "integer"
        xml:
          name: "Quantity"
        minimum: 0.0
      notes:
        type: "string"
        xml:
          name: "Notes"
        minLength: 1
        maxLength: 2147483647
      status:
        type: "string"
        xml:
          name: "Status"
        minLength: 1
        maxLength: 2147483647
      promotionRefs:
        xml:
          name: "PromotionRefs"
        $ref: "#/definitions/CtPromotionRefs"
      groupRefs:
        xml:
          name: "GroupRefs"
        $ref: "#/definitions/CtGroupIdRefs"
      characteristics:
        xml:
          name: "Characteristics"
        $ref: "#/definitions/Characteristics"
      hardGood:
        xml:
          name: "HardGood"
        $ref: "#/definitions/CtHardGood"
      supplyChainInfo:
        xml:
          name: "SupplyChainInfo"
        $ref: "#/definitions/CtSupplyChainInfo"
      additionalDetails:
        xml:
          name: "AdditionalDetails"
        $ref: "#/definitions/CtAdditionalDetails"
      isDuplicate:
        type: "boolean"
        xml:
          name: "IsDuplicate"
        default: false
      isInCompatible:
        type: "boolean"
        xml:
          name: "IsInCompatible"
        default: false
      socforPreviousDevice:
        type: "string"
  GroupList:
    type: "object"
    required:
    - "group"
    properties:
      group:
        type: "array"
        xml:
          name: "Group"
        items:
          $ref: "#/definitions/CtGroup"
        maxItems: 999
        minItems: 1
  CtDeliveryByDate:
    type: "object"
    properties:
      fromDate:
        type: "string"
        format: "date-time"
        xml:
          name: "FromDate"
      toDate:
        type: "string"
        format: "date-time"
        xml:
          name: "ToDate"
  CtItemInfoList:
    type: "object"
    properties:
      itemInfo:
        type: "array"
        xml:
          name: "ItemInfo"
        items:
          $ref: "#/definitions/CtItemInfo"
        maxItems: 999
        minItems: 0
  CtVacantQueueDetail:
    type: "object"
    properties:
      queueName:
        type: "string"
        xml:
          name: "QueueName"
      channel:
        type: "string"
        xml:
          name: "Channel"
      vacantAlertTime:
        type: "integer"
        format: "int32"
        xml:
          name: "VacantAlertTime"
      lastQueueTime:
        type: "string"
        format: "date-time"
        xml:
          name: "LastQueueTime"
      lastModifiedTime:
        type: "string"
        format: "date-time"
        xml:
          name: "LastModifiedTime"
      vacantAlertEmailList:
        type: "string"
        xml:
          name: "VacantAlertEmailList"
